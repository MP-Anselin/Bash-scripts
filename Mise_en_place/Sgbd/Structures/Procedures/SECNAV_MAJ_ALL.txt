##
TAG_CHARSET=@€éèç
##
SECNAV_MAJ_ALL
=SQL=
CREATE OR REPLACE PROCEDURE SECNAV_MAJ_ALL(p_doRaz NUMBER) IS 
  TYPE TYP_COL_ROW IS TABLE OF USER_TAB_COLS%Rowtype ;
  Tabcol  TYP_COL_ROW ;
  v_listeColonnesSECUPACMAT CLOB;
BEGIN
  IF p_doRaz=1 THEN
    DELETE FROM SECUPACMAT_TMP;
    -- On insère les couples NUMPAC/PACMAT ayant un contrat
    INSERT INTO SECUPACMAT_TMP (NUMPAC,PACMAT,MATRIC) SELECT NUMPAC,PACMAT,MIN(MATRIC) FROM DIC_ADM_CONTRAT GROUP BY NUMPAC,PACMAT;
    -- On insère les couples NUMPAC/PACMAT présents dans DIC_ADM_PERSO (colonnes CURRENT_NUMPAC/CURRENT_PACMAT) n'existant pas dans SECUPACMAT_TMP (NUMPAC='TMPPAC' ou couple NUMPAC/PACMAT pour lequel un contrat a été créé puis supprimé)
    INSERT INTO SECUPACMAT_TMP (NUMPAC,PACMAT,MATRIC) SELECT CURRENT_NUMPAC, CURRENT_PACMAT, MATRIC FROM DIC_ADM_PERSO WHERE CURRENT_NUMPAC IS NOT NULL AND CURRENT_PACMAT IS NOT NULL AND (CURRENT_NUMPAC, CURRENT_PACMAT) NOT IN (SELECT NUMPAC, PACMAT FROM SECUPACMAT_TMP);
    --Recalcul des stats de SECUPACMAT_TMP
    SYS_RECALCUL_STATS('SECUPACMAT_TMP');
  END IF;

  -- On insère une valeur bidon dans SECUPACMAT_TMP.MATRIC : ça sert de flag pour savoir que la procédure est en cours
  INSERT INTO SECUPACMAT_TMP (MATRIC,NUMPAC,PACMAT) VALUES ('SECNAV','SECNAV','SECNAV');
  -- On commite pour que le flag soit visible de suite par les autres sessions
  COMMIT;

  DELETE FROM SECUPACMAT_TMP_PERSO;
  -- DIT 47820 : SECUPACMAT_TMP_CONTRAT is a temporary table 
  -- Truncate table instead of deleting 
  EXECUTE_IMMEDIATE_STRING( 'TRUNCATE  TABLE SECUPACMAT_TMP_CONTRAT',0);
  INSERT INTO SECUPACMAT_TMP_PERSO (MATRIC) SELECT DISTINCT MATRIC FROM DIC_ADM_PERSO;
  INSERT INTO SECUPACMAT_TMP_CONTRAT (NUMPAC, PACMAT, MATRIC) SELECT NUMPAC, PACMAT, MIN(MATRIC) FROM DIC_ADM_CONTRAT GROUP BY NUMPAC,PACMAT;
  --Recalcul des stats de SECUPACMAT_TMP_PERSO & SECUPACMAT_TMP_CONTRAT
  SYS_RECALCUL_STATS('SECUPACMAT_TMP_CONTRAT');
  SYS_RECALCUL_STATS('SECUPACMAT_TMP_PERSO');

  -- On supprime le flag pour ne pas bloquer les mises à jour depuis les procédures SECNAV_MAJ_CURRENT_CONTRAT et SECNAV_MAJ_CURRENT_PERSO
  DELETE FROM SECUPACMAT_TMP WHERE MATRIC='SECNAV';

  -- 1) On met à jour les clés de la situation CONTRAT courante, avec mise à jour des données CONTRAT et CONTRAT_HISTO
  SECNAV_MAJ_CURRENT_CONTRAT('DO_MAJ', 1, 1, p_doRaz);
  -- 2) On met à jour les clés de la situation PERSO courante, avec mise à jour des données PERSO et PERSO_HISTO
  SECNAV_MAJ_CURRENT_PERSO('DO_MAJ', 1, 1, p_doRaz);

  -- On ré-insère le flag
  INSERT INTO SECUPACMAT_TMP (MATRIC,NUMPAC,PACMAT) VALUES ('SECNAV','SECNAV','SECNAV');

  DELETE FROM SECUPACMAT_TMP_PERSO;
  EXECUTE_IMMEDIATE_STRING( 'TRUNCATE  TABLE SECUPACMAT_TMP_CONTRAT',0);
  --Recalcul des stats de SECUPACMAT_TMP_PERSO & SECUPACMAT_TMP_CONTRAT
  SYS_RECALCUL_STATS('SECUPACMAT_TMP_CONTRAT');
  SYS_RECALCUL_STATS('SECUPACMAT_TMP_PERSO');
  
  IF p_doRaz=1 THEN
    -- Pour toutes les colonnes de SECUPACMAT qui ne sont pas issues de DIC_ADM (et qui ne sont pas des colonnes calculées par le traitement : NUMPAC, PACMAT, CURRENT_NUMCNT, DATE_EFF_CONTRAT, MATRIC, DATE_EFF_PERSO, PRIORITE_SITUATION, IDPACMAT), on récupère les valeurs avant écrasement
    SELECT * BULK COLLECT Into Tabcol FROM USER_TAB_COLS WHERE TABLE_NAME='SECUPACMAT' AND COLUMN_NAME NOT IN (SELECT COLUMN_NAME FROM USER_TAB_COLS WHERE TABLE_NAME LIKE 'DIC_ADM%') AND COLUMN_NAME NOT IN ('NUMPAC','PACMAT','CURRENT_NUMCNT','DATE_EFF_CONTRAT','MATRIC','DATE_EFF_PERSO','PRIORITE_SITUATION','IDPACMAT') AND COLUMN_ID IS NOT NULL;
    FOR i IN Tabcol.first..Tabcol.last LOOP
      -- On appelle DIC_MODIF_STRUCTURE pour ajouter la colonne a SECUPACMAT_TMP, au cas où elle n'existe pas (si elle existe, il n'y a pas de plantage)
      DIC_MODIF_STRUCTURE('SECUPACMAT_TMP', Tabcol(i).COLUMN_NAME, NULL, NULL, NULL, NULL, Tabcol(i).DATA_TYPE, Tabcol(i).DATA_LENGTH, Tabcol(i).DATA_PRECISION, Tabcol(i).DATA_SCALE);
      EXECUTE_IMMEDIATE_STRING( 'UPDATE SECUPACMAT_TMP SET ' || Tabcol(i).COLUMN_NAME || '=(SELECT ' || Tabcol(i).COLUMN_NAME || ' FROM SECUPACMAT WHERE SECUPACMAT.NUMPAC=SECUPACMAT_TMP.NUMPAC AND SECUPACMAT.PACMAT=SECUPACMAT_TMP.PACMAT)',0);
    END LOOP;
    DELETE FROM SECUPACMAT;
    SELECT * BULK COLLECT Into Tabcol FROM USER_TAB_COLS WHERE TABLE_NAME='SECUPACMAT' AND VIRTUAL_COLUMN='NO' AND COLUMN_ID IS NOT NULL ORDER BY COLUMN_ID;
    v_listeColonnesSECUPACMAT := NULL;
    FOR i IN Tabcol.first..Tabcol.last LOOP
      -- On appelle DIC_MODIF_STRUCTURE pour ajouter la colonne a SECUPACMAT_TMP, au cas où elle n'existe pas (si elle existe, il n'y a pas de plantage)
      DIC_MODIF_STRUCTURE('SECUPACMAT_TMP', Tabcol(i).COLUMN_NAME, NULL, NULL, NULL, NULL, Tabcol(i).DATA_TYPE, Tabcol(i).DATA_LENGTH, Tabcol(i).DATA_PRECISION, Tabcol(i).DATA_SCALE);
      IF v_listeColonnesSECUPACMAT IS NOT NULL THEN
        v_listeColonnesSECUPACMAT := v_listeColonnesSECUPACMAT||',';
      END IF;
      v_listeColonnesSECUPACMAT := v_listeColonnesSECUPACMAT || Tabcol(i).COLUMN_NAME;
    END LOOP;
    -- On supprime le flag avant l'insertion dans SECUPACMAT (sinon on va l'insérer aussi)
    DELETE FROM SECUPACMAT_TMP WHERE MATRIC='SECNAV';
    EXECUTE_IMMEDIATE_STRING( 'INSERT INTO SECUPACMAT (' || v_listeColonnesSECUPACMAT || ') SELECT ' || v_listeColonnesSECUPACMAT || ' FROM SECUPACMAT_TMP',0);
    EXECUTE_IMMEDIATE_STRING( 'ALTER TABLE SECUPACMAT ENABLE ROW MOVEMENT',0);
    EXECUTE_IMMEDIATE_STRING( 'ALTER TABLE SECUPACMAT SHRINK SPACE',0);
    EXECUTE_IMMEDIATE_STRING( 'CALL DBMS_STATS.UNLOCK_TABLE_STATS(USER,''SECUPACMAT'')',0);
    EXECUTE_IMMEDIATE_STRING( 'CALL DBMS_STATS.GATHER_TABLE_STATS(USER,''SECUPACMAT'')',0);
  END IF;
  -- On supprime le flag
  DELETE FROM SECUPACMAT_TMP WHERE MATRIC='SECNAV';
EXCEPTION
  WHEN OTHERS THEN
    -- Erreur
    -- On rollback tout ce qui a été fait depuis le COMMIT de l'insertion de 'SECNAV' dans SECUPACMAT_TMP
    ROLLBACK;
    -- On supprime le flag en cas d'exception (pour ne pas tout bloquer)
    DELETE FROM SECUPACMAT_TMP WHERE MATRIC='SECNAV';
    -- On commit la suppression du flag, sinon il reste
    COMMIT;
    Raise;
END SECNAV_MAJ_ALL;

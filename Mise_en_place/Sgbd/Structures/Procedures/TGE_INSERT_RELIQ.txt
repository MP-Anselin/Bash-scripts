##
TGE_INSERT_RELIQ
=SQL=
CREATE OR REPLACE PROCEDURE TGE_INSERT_RELIQ (P_ID IN NUMBER,P_NUMPAC IN VARCHAR2 , P_PERIODE IN VARCHAR2 ,is_RETRO NUMBER) AS 
/********************************************************************************
Version     : V5.05.000
*********************************************************************************/
BEGIN
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_INSERT_RELIQ (Begin)','Début insertion pour le numpac : '||P_NUMPAC);
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_INCIDENTS_PAIE','Insertion dans TGE_RELIQ_INCIDENTS_PAIE à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_INCIDENTS_PAIE 
  (ID,NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_IP,CODE_IP,DATE_EFFET,CODE_IMPUTATION,HEURES,
   ORIGINE,LOGIN_CREATE,DATE_CREATE,ROLE_CREATE,ORIGINE_CREATE,LOGIN_MAJ,DATE_MAJ,ROLE_MAJ,ORIGINE_MAJ,
   CLE_IMPORT,CLE_ABSENCE,IDPACMAT,ENVOYE,TYPE_WRITER,JOUR_OUVRABLE,JOUR_OUVRE,JOUR_OEUVRE,JOUR_CALENDAIRE)
  select ID,NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_IP,CODE_IP,DATE_EFFET,CODE_IMPUTATION,HEURES,
         ORIGINE,LOGIN_CREATE,DATE_CREATE,ROLE_CREATE,ORIGINE_CREATE,LOGIN_MAJ,DATE_MAJ,ROLE_MAJ,ORIGINE_MAJ,
         CLE_IMPORT,CLE_ABSENCE,IDPACMAT,ENVOYE,TYPE_WRITER,JOUR_OUVRABLE,JOUR_OUVRE,JOUR_OEUVRE,JOUR_CALENDAIRE
  FROM TGE_INCIDENTS_PAIE
  WHERE NUMPAC = P_NUMPAC 
  AND   to_date(periode) <= to_date(P_PERIODE,'yyyymm')
  AND nvl(ACTION_RETRO,'H') != 'H';
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_DONNEES_PAIE','Insertion dans  TGE_RELIQ_DONNEES_PAIE à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_DONNEES_PAIE 
  (NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_DONNEE,CODE_RUBRIQUE,CODE_CAISSE,NO_SEQUENCE,SENS,CODE_IMPUTATION,
   ORIGINE,NOMBRE,TAUX,MONTANT,POURCENTAGE,DOMAINE_PRCTE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,
   PERIODE_RATTACH_DEB,PERIODE_RATTACH_FIN,DATE_DEB_ARRET,TYPE_WRITER,PERIODE_AFFECTATION,CODE_REMPLACEMENT)
   
  select NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_DONNEE,CODE_RUBRIQUE,CODE_CAISSE,NO_SEQUENCE,SENS,CODE_IMPUTATION,
         ORIGINE,NOMBRE,TAUX,MONTANT,POURCENTAGE,DOMAINE_PRCTE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,
         PERIODE_RATTACH_DEB,PERIODE_RATTACH_FIN,DATE_DEB_ARRET,TYPE_WRITER,PERIODE_AFFECTATION,CODE_REMPLACEMENT
  FROM TGE_DONNEES_PAIE
  WHERE NUMPAC = P_NUMPAC 
  AND   periode  <=P_PERIODE
  AND nvl(ACTION_RETRO,'H') != 'H';
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_ELEMENTS_PAIE','Insertion dans  TGE_RELIQ_ELEMENTS_PAIE à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_ELEMENTS_PAIE 
  (NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,CODE_ELEMENT,INDICATIF,ORIGINE,SENS,VALEUR,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,TYPE_WRITER,CODE_REMPLACEMENT)
  select NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,CODE_ELEMENT,INDICATIF,ORIGINE,SENS,VALEUR,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,TYPE_WRITER,CODE_REMPLACEMENT
  FROM TGE_ELEMENTS_PAIE
  WHERE NUMPAC = P_NUMPAC 
  AND   periode  <=P_PERIODE
  AND nvl(ACTION_RETRO,'H') != 'H';
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_IMPUTATIONS','Insertion dans  TGE_RELIQ_IMPUTATIONS à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_IMPUTATIONS 
  (NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,IMPUTATION,NO_SEQUENCE,ORIGINE,NB_UNITE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,IDPACMAT,TYPE_WRITER)
  select NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,IMPUTATION,NO_SEQUENCE,ORIGINE,NB_UNITE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,IDPACMAT,TYPE_WRITER
  FROM TGE_IMPUTATIONS
  WHERE NUMPAC = P_NUMPAC 
  AND   periode  <=P_PERIODE;
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_PACMAT_TORESEND','Insertion dans  TGE_RELIQ_PACMAT_TORESEND à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  --tge_podif_pamat -retro des mal recycle 
  INSERT INTO TGE_RELIQ_PACMAT_TORESEND 
  (NUMPAC,PACMAT,TABLE_TO_SEND,DATE_MAJ)
  select  NUMPAC,PACMAT,TABLE_TO_SEND,DATE_MAJ
  FROM TGE_MODIF_PACMAT_TORESEND
  WHERE NUMPAC = P_NUMPAC ;
  IF is_RETRO =1 THEN 
  INSERT INTO TGE_RELIQ_PACMAT_TORESEND_RETRO
  WITH LISTE_DICOZ (element) AS ( select element from tge_ref_dicoz where numpac =P_NUMPAC and calcul_RETRO=1),
  LIST_TABLEGXP (tablegxp) as (
  SELECT tablegxp  FROM TGE_REF_MAPDO mapdo ,LISTE_DICOZ dicoz WHERE NUMPAC =P_NUMPAC and mapdo.element =dicoz.element
  UNION ALL 
  SELECT tablegxp  FROM TGE_REF_MAPDO mapdo ,LISTE_DICOZ dicoz WHERE NUMPAC ='*' and mapdo.element =dicoz.element
  AND TABLEGXP not in( select TABLEGXP  from TGE_REF_MAPDO mapdo ,LISTE_DICOZ dicoz  WHERE NUMPAC =P_NUMPAC and mapdo.element =dicoz.element ))

   SELECT * FROM TGE_RELIQ_PACMAT_TORESEND WHERE NUMPAC = P_NUMPAC AND TABLE_TO_SEND IN (SELECT TABLEGXP FROM LIST_TABLEGXP);
  END IF;
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_INSERT_RELIQ (End)','Fin insertion pour le numpac : '||P_NUMPAC);
END TGE_INSERT_RELIQ;
 
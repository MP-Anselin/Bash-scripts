##
TAG_CHARSET=@€ιθη
##
ADM_CHANGE_NOM_PAGE
=SQL=
create or replace
PROCEDURE ADM_CHANGE_NOM_PAGE (old_nom_page VARCHAR2, new_nom_page VARCHAR2)
IS
  BEGIN
  	 UPDATE sys_sch_element SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE sys_sch_PROFIL_MI SET page_mo_interdite = new_nom_page WHERE page_mo_interdite = old_nom_page;
     DELETE FROM sys_sch_PROFIL_OP_PAGE p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM sys_sch_PROFIL_OP_PAGE p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page));
     UPDATE sys_sch_PROFIL_OP_PAGE SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM sys_sch_PROFIL_P p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM sys_sch_PROFIL_P p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page) AND p1.CODE_PROFIL = p2.CODE_PROFIL GROUP BY CODE_PROFIL HAVING COUNT(NOM_PAGE) > 1 );
     UPDATE sys_sch_PROFIL_P SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE UX_BRIDGING SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_SCH_JSON p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM SYS_SCH_JSON p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page) AND p1.NOM_JSON = p2.NOM_JSON GROUP BY NOM_JSON HAVING COUNT(NOM_PAGE) > 1 );
     UPDATE sys_sch_json SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_SCH_PAGE_INITIALIZER p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM SYS_SCH_PAGE_INITIALIZER p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page));
     UPDATE SYS_SCH_PAGE_INITIALIZER SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE DEL_FONCTIONMETIER SET ID_ECRANPROCESSUS = new_nom_page WHERE ID_ECRANPROCESSUS = old_nom_page;
     UPDATE REQ_INDEX_PAGES SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE GA_CC_ONGLETS SET PAGE_ONGLET = new_nom_page WHERE PAGE_ONGLET = old_nom_page;
     UPDATE GAP_EPP_LIENS SET nompage = new_nom_page WHERE nompage = old_nom_page;
     UPDATE STD_LHW_DONNEE SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE SYS_ACC_REG_LIEN SET lien = new_nom_page WHERE lien = old_nom_page;
     UPDATE SYS_ALERTES SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE SYS_ALERTES SET nom_page1 = new_nom_page WHERE nom_page1 = old_nom_page;
     UPDATE SYS_ALERTES SET nom_page2 = new_nom_page WHERE nom_page2 = old_nom_page;
     UPDATE ALERT_REDIRECT SET page_uri = new_nom_page WHERE page_uri = old_nom_page;
     DELETE FROM SYS_LOCK_MODULE p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM SYS_LOCK_MODULE p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page));
     UPDATE SYS_LOCK_MODULE SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_PAGES_MODAL p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM SYS_PAGES_MODAL p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page));
     UPDATE SYS_PAGES_MODAL SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_PAGES_MODAL_ML p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM SYS_PAGES_MODAL_ML p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page) AND p1.CODLANG = p2.CODLANG GROUP BY CODLANG  HAVING COUNT(NOM_PAGE) > 1 );
     UPDATE SYS_PAGES_MODAL_ML SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_PAGES_MODAL_RESTRICTION p1 WHERE NOM_PAGE_BUR_LIEE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE_BUR_LIEE) as NB FROM SYS_PAGES_MODAL_RESTRICTION p2 WHERE NOM_PAGE_BUR_LIEE IN (old_nom_page,new_nom_page) AND p1.NOM_PAGE_MODALE = p2.NOM_PAGE_MODALE GROUP BY NOM_PAGE_MODALE HAVING COUNT(NOM_PAGE_BUR_LIEE) > 1 );
     UPDATE SYS_PAGES_MODAL_RESTRICTION SET NOM_PAGE_BUR_LIEE = new_nom_page WHERE NOM_PAGE_BUR_LIEE = old_nom_page;
     DELETE FROM SYS_PAGES_MODAL_RESTRICTION p1 WHERE NOM_PAGE_MODALE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE_MODALE) as NB FROM SYS_PAGES_MODAL_RESTRICTION p2 WHERE NOM_PAGE_MODALE IN (old_nom_page,new_nom_page) AND p1.NOM_PAGE_BUR_LIEE = p2.NOM_PAGE_BUR_LIEE GROUP BY NOM_PAGE_BUR_LIEE HAVING COUNT(NOM_PAGE_MODALE) > 1 ) AND NOM_PAGE_BUR_LIEE NOT IN (SELECT NOM_PAGE_BUR_LIEE FROM SYS_PAGES_MODAL_RESTRICTION WHERE NOM_PAGE_MODALE = new_nom_page );
     UPDATE SYS_PAGES_MODAL_RESTRICTION SET NOM_PAGE_MODALE = new_nom_page WHERE NOM_PAGE_MODALE = old_nom_page AND NOM_PAGE_BUR_LIEE NOT IN (SELECT NOM_PAGE_BUR_LIEE FROM SYS_PAGES_MODAL_RESTRICTION WHERE NOM_PAGE_MODALE = new_nom_page ) ;
     DELETE FROM SYS_SCH_DASHBOARD p1 WHERE NOM_PAGE = old_nom_page AND 1 < (SELECT COUNT(NOM_PAGE) as NB FROM SYS_SCH_DASHBOARD p2 WHERE NOM_PAGE IN (old_nom_page,new_nom_page) AND p1.LOGIN = p2.LOGIN GROUP BY LOGIN HAVING COUNT(NOM_PAGE) > 1 );
     UPDATE SYS_SCH_DASHBOARD SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_SCH_ECRANLOGIQUE p1 WHERE NOMPAGE = old_nom_page AND 1 < (SELECT COUNT(NOMPAGE) as NB FROM SYS_SCH_ECRANLOGIQUE p2 WHERE NOMPAGE IN (old_nom_page,new_nom_page) AND p1.NOMPAGESUIV = p2.NOMPAGESUIV GROUP BY NOMPAGESUIV HAVING COUNT(NOMPAGE) > 1 );
     UPDATE SYS_SCH_ECRANLOGIQUE SET nompage = new_nom_page WHERE nompage = old_nom_page;
     DELETE FROM SYS_SCH_ECRANLOGIQUE p1 WHERE NOMPAGESUIV = old_nom_page AND 1 < (SELECT COUNT(NOMPAGESUIV) as NB FROM SYS_SCH_ECRANLOGIQUE p2 WHERE NOMPAGESUIV IN (old_nom_page,new_nom_page) AND p1.NOMPAGE = p2.NOMPAGE GROUP BY NOMPAGE HAVING COUNT(NOMPAGESUIV) > 1 );
     UPDATE SYS_SCH_ECRANLOGIQUE SET NOMPAGESUIV = new_nom_page WHERE NOMPAGESUIV = old_nom_page;
     UPDATE SYS_USR_FAVORIS SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     DELETE FROM SYS_AIDE_DYN_2 p1 WHERE UPPER(SUJET) = UPPER(old_nom_page) AND SUJET <> UPPER(old_nom_page) AND 1 < (SELECT COUNT(SUJET) FROM SYS_AIDE_DYN_2 p2 WHERE UPPER(SUJET) = UPPER(old_nom_page) GROUP BY TYPE,CODLANG HAVING COUNT(SUJET) > 1 );
     DELETE FROM SYS_AIDE_DYN_2 p1 WHERE UPPER(SUJET) = UPPER(new_nom_page) AND SUJET <> UPPER(new_nom_page) AND 1 < (SELECT COUNT(SUJET) FROM SYS_AIDE_DYN_2 p2 WHERE UPPER(SUJET) = UPPER(new_nom_page) GROUP BY TYPE,CODLANG HAVING COUNT(SUJET) > 1 );
     UPDATE SYS_AIDE_DYN_2 p1 SET SUJET = UPPER(old_nom_page) WHERE UPPER(SUJET) = UPPER(old_nom_page) AND UPPER(SUJET) <> SUJET AND CODLANG =  CODLANG AND TYPE = TYPE;
     UPDATE SYS_AIDE_DYN_2 p1 SET SUJET = UPPER(new_nom_page) WHERE UPPER(SUJET) = UPPER(new_nom_page) AND UPPER(SUJET) <> SUJET AND CODLANG =  CODLANG AND TYPE = TYPE;
     DELETE FROM SYS_AIDE_DYN_2 p1 WHERE SUJET = UPPER(old_nom_page) AND 1 < ( SELECT COUNT(SUJET) as NB FROM SYS_AIDE_DYN_2 p2 WHERE SUJET IN (UPPER(old_nom_page),UPPER(new_nom_page)) AND p1.CODLANG = p2.CODLANG AND p1.TYPE = p2.TYPE GROUP BY CODLANG HAVING COUNT(SUJET) > 1);
     UPDATE SYS_AIDE_DYN_2 SET sujet = UPPER(new_nom_page) WHERE UPPER(sujet) = UPPER(old_nom_page);
     DELETE FROM AIDE_DYNAMIQUE_2 p1 WHERE UPPER(SUJET) = UPPER(old_nom_page) AND SUJET <> UPPER(old_nom_page) AND 1 < (SELECT COUNT(SUJET) FROM AIDE_DYNAMIQUE_2 p2 WHERE UPPER(SUJET) = UPPER(old_nom_page) GROUP BY TYPE,CODLANG HAVING COUNT(SUJET) > 1 );
     DELETE FROM AIDE_DYNAMIQUE_2 p1 WHERE UPPER(SUJET) = UPPER(new_nom_page) AND SUJET <> UPPER(new_nom_page) AND 1 < (SELECT COUNT(SUJET) FROM AIDE_DYNAMIQUE_2 p2 WHERE UPPER(SUJET) = UPPER(new_nom_page) GROUP BY TYPE,CODLANG HAVING COUNT(SUJET) > 1 );
     UPDATE AIDE_DYNAMIQUE_2 p1 SET SUJET = UPPER(old_nom_page) WHERE UPPER(SUJET) = UPPER(old_nom_page) AND UPPER(SUJET) <> SUJET AND CODLANG =  CODLANG AND TYPE = TYPE;
     UPDATE AIDE_DYNAMIQUE_2 p1 SET SUJET = UPPER(new_nom_page) WHERE UPPER(SUJET) = UPPER(new_nom_page) AND UPPER(SUJET) <> SUJET AND CODLANG =  CODLANG AND TYPE = TYPE;
     DELETE FROM AIDE_DYNAMIQUE_2 p1 WHERE SUJET = UPPER(old_nom_page) AND 1 < ( SELECT COUNT(SUJET) as NB FROM AIDE_DYNAMIQUE_2 p2 WHERE SUJET IN (UPPER(old_nom_page),UPPER(new_nom_page)) AND p1.CODLANG = p2.CODLANG AND p1.TYPE = p2.TYPE GROUP BY CODLANG HAVING COUNT(SUJET) > 1);
     UPDATE AIDE_DYNAMIQUE_2 SET sujet = UPPER(new_nom_page) WHERE UPPER(sujet) = UPPER(old_nom_page);
     update SYS_AFF_BOUTON_BANDEAU SET nom_page = new_nom_page WHERE nom_page = old_nom_page;
     UPDATE STD_LHW_THEME_PAGE set NOM_PAGE = new_nom_page WHERE NOM_PAGE = old_nom_page;
  	 COMMIT ;  
END ADM_CHANGE_NOM_PAGE;

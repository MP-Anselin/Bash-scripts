##
TAG_CHARSET=@€éèç
##
TGE_RETRO_INSCRIPTION
=SQL=
CREATE OR REPLACE PROCEDURE TGE_RETRO_INSCRIPTION(
  P_NUMPAC IN VARCHAR2,
  P_PACMAT IN VARCHAR2,
  P_PERIODE_RETRO IN VARCHAR2,
  P_CODE_CHRONO IN VARCHAR2,
  P_PAIEZAD IN VARCHAR2,
  P_TABLE_MAJ IN VARCHAR2)
AS
  V_EXIST_TGE_MODIF_PACMAT_RETRO NUMBER;
  V_GAP_RETRO_MATRIC_UPDATE      NUMBER;
  V_PERIODE_RETRO_A_INSERE       VARCHAR2(20);
  V_DATE_LIMITE_RETRO            VARCHAR2(20);
  V_PERIODEENCOURS               VARCHAR2(6);
BEGIN
  V_PERIODE_RETRO_A_INSERE := P_PERIODE_RETRO;
  SELECT PERIODEENCOURS, GREATEST(DEB_HISTO_RETRO, TO_CHAR(ADD_MONTHS(TO_DATE(PERIODEENCOURS, 'YYYYMM'), -NB_MOIS_RETRO), 'YYYYMM'),NVL( PREMIERE_PAIE, '190101')) 
  INTO V_PERIODEENCOURS, V_DATE_LIMITE_RETRO
  FROM TGE_REF_PAC T
  LEFT JOIN SECUPACMAT S ON S.NUMPAC=T.NUMPAC AND S.PACMAT = P_PACMAT
  WHERE DEB_HISTO_RETRO IS NOT NULL 
  AND NB_MOIS_RETRO IS NOT NULL 
  AND T.NUMPAC = P_NUMPAC;
  IF (P_PERIODE_RETRO<V_DATE_LIMITE_RETRO) THEN
  V_PERIODE_RETRO_A_INSERE := V_DATE_LIMITE_RETRO;
  END IF;
  IF (V_PERIODE_RETRO_A_INSERE>= V_PERIODEENCOURS) THEN
  RETURN;
  END IF;
  SELECT COUNT(*)
  INTO V_EXIST_TGE_MODIF_PACMAT_RETRO
  FROM TGE_MODIF_PACMAT_RETRO
  WHERE NUMPAC      = P_NUMPAC
  AND PACMAT        = P_PACMAT
  AND TABLE_MAJ    	= P_TABLE_MAJ
  AND PERIODE_RETRO = V_PERIODE_RETRO_A_INSERE;
  IF (V_EXIST_TGE_MODIF_PACMAT_RETRO=0) THEN
    -- S'il n'y a pas encore de ligne dans TGE_MODIF_PACMAT_RETRO pour le NUMPAC / PACMAT / PERIODE_RETRO, on insère
    INSERT INTO TGE_MODIF_PACMAT_RETRO VALUES (
      P_NUMPAC,
      P_PACMAT,
      V_PERIODE_RETRO_A_INSERE,
      P_TABLE_MAJ,
      SYSDATE
    );
  END IF;
  SELECT COUNT(*)
  INTO V_GAP_RETRO_MATRIC_UPDATE
  FROM GAP_RETRO_MATRIC 
  WHERE NUMPAC        = P_NUMPAC
  AND PACMAT          = P_PACMAT
  AND PERIODE_RETRO   = V_PERIODE_RETRO_A_INSERE
  AND MIN_CODE_CHRONO < P_CODE_CHRONO;
  IF(V_GAP_RETRO_MATRIC_UPDATE=0) THEN
    -- S'il n'y a pas de ligne dans GAP_RETRO_MATRIC pour le NUMPAC / PACMAT / PERIODE_RETRO, et avec un CODE_CHRONO > au CODE_CHRONO qui a été modifié, on met à jour
    SELECT COUNT(*)
    INTO V_GAP_RETRO_MATRIC_UPDATE
    FROM GAP_RETRO_MATRIC 
    WHERE NUMPAC      = P_NUMPAC
    AND PACMAT        = P_PACMAT
    AND PERIODE_RETRO = V_PERIODE_RETRO_A_INSERE;
    IF(V_GAP_RETRO_MATRIC_UPDATE=0) THEN
      -- S'il n'y a pas encore de ligne dans GAP_RETRO_MATRIC pour le NUMPAC / PACMAT / PERIODE_RETRO, on insère
      INSERT INTO GAP_RETRO_MATRIC VALUES (
        P_NUMPAC,
        P_PACMAT,
        V_PERIODE_RETRO_A_INSERE,
        P_CODE_CHRONO,
        P_PAIEZAD
      );
    ELSE
      -- S'il y a déjà une ligne dans GAP_RETRO_MATRIC pour le NUMPAC / PACMAT / PERIODE_RETRO, on met à jour
      UPDATE GAP_RETRO_MATRIC SET 
        MIN_CODE_CHRONO = P_CODE_CHRONO,
        PAIEZAD_RETRO   = P_PAIEZAD
      WHERE MIN_CODE_CHRONO > P_CODE_CHRONO
      AND NUMPAC            = P_NUMPAC
      AND PACMAT            = P_PACMAT
      AND PERIODE_RETRO     = V_PERIODE_RETRO_A_INSERE;
    END IF;
  END IF;
END TGE_RETRO_INSCRIPTION;

##
TAG_CHARSET=@€éèç
##
TGE_RETRO_INSCRIPT_WITH_CHECK
=SQL=
CREATE OR REPLACE PROCEDURE TGE_RETRO_INSCRIPT_WITH_CHECK(
  P_NUMPAC IN VARCHAR2, 
  P_PACMAT IN VARCHAR2, 
  P_PERIODE_YYYYMM IN VARCHAR2, 
  P_CODE_CHRONO IN VARCHAR2, 
  P_PAIEZAD IN VARCHAR2, 
  P_TABLE_MAJ IN VARCHAR2, 
  P_REQ_COUNT_CHECK_SPECIF IN VARCHAR2 DEFAULT NULL) 
AS
  V_PERIODEENCOURS     VARCHAR2(6);
  V_DEB_RETRO          VARCHAR2(6);
  V_DEB_HISTO_RETRO    VARCHAR2(6);
  V_NB_MOIS_RETRO      NUMBER;
  V_COUNT_CHECK_SPECIF NUMBER;
BEGIN
  BEGIN
    SELECT T.PERIODEENCOURS,
      T.DEB_RETRO,
      GREATEST(DEB_HISTO_RETRO,NVL( PREMIERE_PAIE, '190101')),
      nvl(T.NB_MOIS_RETRO,0)
    INTO V_PERIODEENCOURS,
      V_DEB_RETRO,
      V_DEB_HISTO_RETRO,
      V_NB_MOIS_RETRO
    FROM TGE_REF_PAC T
    LEFT JOIN SECUPACMAT S ON S.NUMPAC=T.NUMPAC AND S.PACMAT = P_PACMAT
    WHERE T.NUMPAC = P_NUMPAC;
  END;
  IF(V_PERIODEENCOURS >= V_DEB_RETRO AND V_DEB_RETRO IS NOT NULL) THEN
    BEGIN
      V_COUNT_CHECK_SPECIF := 1;
      IF P_REQ_COUNT_CHECK_SPECIF IS NOT NULL THEN
        EXECUTE IMMEDIATE P_REQ_COUNT_CHECK_SPECIF INTO V_COUNT_CHECK_SPECIF;
      END IF;
      IF(P_PERIODE_YYYYMM  < V_PERIODEENCOURS AND V_COUNT_CHECK_SPECIF > 0)THEN
        IF(TO_DATE(P_PERIODE_YYYYMM ,'YYYYMM') < ADD_MONTHS(TO_DATE(V_PERIODEENCOURS,'YYYYMM'),-V_NB_MOIS_RETRO)) THEN
          --La période de rétroactivité maximum est dépassée
          RAISE_APPLICATION_ERROR(-20001, 'CODERR=TGERET01');
        ELSIF (P_PERIODE_YYYYMM < V_DEB_HISTO_RETRO AND V_DEB_HISTO_RETRO IS NOT NULL) THEN
          --La rétroactivité est impossible avant la période de début de conservation des historiques
          RAISE_APPLICATION_ERROR(-20001, 'CODERR=TGERET02');
        ELSE
          TGE_RETRO_INSCRIPTION(P_NUMPAC,
            P_PACMAT,
            P_PERIODE_YYYYMM,
            P_CODE_CHRONO,
            P_PAIEZAD,
            P_TABLE_MAJ);
        END IF;
      END IF;
    END;
  END IF;
END TGE_RETRO_INSCRIPT_WITH_CHECK;

##
TAG_CHARSET=@€éèç
##
MAJ_REFERENCE_DATA_GLOBAL_DATA
=SQL=
create or replace PROCEDURE MAJ_REFERENCE_DATA_GLOBAL_DATA AS
 V_CONSUMERAPPOID    VARCHAR2(50 BYTE);
 VREF_CONSUMERAPPOID VARCHAR2(50 BYTE);
 CURSOR cur_consumerappoid IS
  SELECT mc.CONSUMER_APP_OID, mc.CONSUMER_APP_OID_REF FROM MP_CONSUMERAPPOID mc WHERE CONSUMER_APP_OID_REF IS NOT NULL;
 CURSOR curref_consumerappoid IS
  SELECT rc.CONSUMER_APP_OID FROM MP_REF_CONSUMERAPPOID rc;
BEGIN
 OPEN cur_consumerappoid;
  LOOP
   FETCH cur_consumerappoid INTO V_CONSUMERAPPOID,VREF_CONSUMERAPPOID;
   EXIT WHEN cur_consumerappoid%NOTFOUND;
   
   -- Traitement dans MP_SECU_URI
   -- Si pour une application présente dans MP_CONSUMERAPPOID, une ligne existe dans MP_REF_SECU_URI, et pas dans MP_SECU_URI, on l'ajoute dans MP_SECU_URI
   MERGE INTO MP_SECU_URI a 
   USING (
    SELECT CONSUMER_APP_OID,URI_ID
    FROM MP_REF_SECU_URI
    WHERE CONSUMER_APP_OID     = VREF_CONSUMERAPPOID
   ) b 
   ON (a.CONSUMER_APP_OID = V_CONSUMERAPPOID AND a.URI_ID = b.URI_ID)
   WHEN NOT MATCHED THEN INSERT (CONSUMER_APP_OID,URI_ID) VALUES (V_CONSUMERAPPOID,b.URI_ID);
 
   -- Traitement dans MP_SECU_DATA
   -- Une ligne existe dans MP_REF_SECU_DATA avec la valeur 'Y' dans la colonne MANDATORY, et pas dans MP_SECU_DATA, on l'ajoute dans MP_SECU_DATA
   MERGE INTO MP_SECU_DATA a 
   USING (
    SELECT distinct r.URI_ID,d.DATA_NAME_MP_ALP
    FROM MP_REF_SECU_DATA r, mp_ref_data_alp d 
    WHERE r.CONSUMER_APP_OID = VREF_CONSUMERAPPOID AND r.DATA_NAME_MP = d.DATA_NAME_MP AND r.MANDATORY='Y'
   ) b 
   ON (a.CONSUMER_APP_OID = V_CONSUMERAPPOID AND Upper(a.URI_ID||' '||a.DATA_NAME_MP_ALP) = Upper(b.URI_ID||' '||b.DATA_NAME_MP_ALP))
   WHEN NOT MATCHED THEN INSERT (CONSUMER_APP_OID,DATA_NAME_MP_ALP,URI_ID) VALUES (V_CONSUMERAPPOID,b.DATA_NAME_MP_ALP,b.URI_ID);
 END LOOP;
 CLOSE cur_consumerappoid;
 OPEN curref_consumerappoid;
 LOOP
  FETCH curref_consumerappoid INTO VREF_CONSUMERAPPOID;
  EXIT WHEN curref_consumerappoid%NOTFOUND;
   
   -- Traitement dans MP_SECU_URI
   -- Une ligne existe dans MP_SECU_URI et pas dans MP_REF_SECU_URI, on la supprime de MP_SECU_URI
   DELETE FROM MP_SECU_URI a
   WHERE EXISTS (
     SELECT 1
     FROM MP_CONSUMERAPPOID
     WHERE CONSUMER_APP_OID = a.CONSUMER_APP_OID AND CONSUMER_APP_OID_REF = VREF_CONSUMERAPPOID
   )
   AND NOT EXISTS (
    SELECT 1
    FROM MP_REF_SECU_URI b
    WHERE a.URI_ID         =b.URI_ID
    AND b.CONSUMER_APP_OID = VREF_CONSUMERAPPOID
   );
   
   -- Traitement dans MP_SECU_DATA
   -- Une ligne existe dans MP_SECU_DATA et pas dans MP_REF_SECU_DATA, on la supprime de MP_SECU_DATA
   DELETE FROM MP_SECU_DATA a
   WHERE EXISTS (
     SELECT 1
     FROM MP_CONSUMERAPPOID
     WHERE CONSUMER_APP_OID = a.CONSUMER_APP_OID AND CONSUMER_APP_OID_REF = VREF_CONSUMERAPPOID
   )
   AND NOT EXISTS (
    SELECT 1
    FROM MP_REF_SECU_DATA ref, mp_ref_data_alp 
    WHERE ref.DATA_NAME_MP= mp_ref_data_alp.DATA_NAME_MP 
    AND ref.CONSUMER_APP_OID = VREF_CONSUMERAPPOID 
    AND a.URI_ID = ref.URI_ID
    AND a.DATA_NAME_MP_ALP = mp_ref_data_alp.DATA_NAME_MP_ALP
   );
 END LOOP;
 CLOSE curref_consumerappoid;
 COMMIT;
END MAJ_REFERENCE_DATA_GLOBAL_DATA;

##
TAG_CHARSET=@€ιθη
##
MP_CODELISTS_ESI_GET_TAB_ENTITES
=SQL=
CREATE OR REPLACE FUNCTION MP_CODELISTS_ESI_GET_TAB_ENTITES(p_TYPE_ENTITE VARCHAR2, p_CODVAR_TYPE_ENTITE VARCHAR2 DEFAULT NULL) RETURN MP_CODELISTS_ESI_TAB_ENTITES AS 
  v_retour MP_CODELISTS_ESI_TAB_ENTITES := MP_CODELISTS_ESI_TAB_ENTITES();
  v_TYPE_ENTITE VARCHAR2(15);
BEGIN
  v_TYPE_ENTITE := p_TYPE_ENTITE;
  IF v_TYPE_ENTITE IS NULL AND p_CODVAR_TYPE_ENTITE IS NOT NULL THEN
    SELECT VALVAR INTO v_TYPE_ENTITE FROM (SELECT VALVAR FROM SYS_VARSYS WHERE CODVAR=p_CODVAR_TYPE_ENTITE ORDER BY CASE WHEN MODULE='SYS' THEN 3 WHEN MODULE='STD' THEN 2 ELSE 1 END, MODULE) WHERE ROWNUM=1;
  END IF;
  IF v_TYPE_ENTITE IS NULL THEN
    RETURN v_retour;
  END IF;
  FOR une_entite IN (SELECT CID, CODE_ENTITE, LIBELLE_REDUIT, LIBELLE FROM STD_STRUC_ENTITE WHERE TYPE_ENTITE=v_TYPE_ENTITE AND TO_CHAR(SYSDATE,'yyyymmdd') BETWEEN DATE_EFF AND DATE_FIN)
  LOOP
    v_retour.extend;
    v_retour(v_retour.count) := MP_CODELISTS_ESI_ENTITE(une_entite.CID, une_entite.CODE_ENTITE, une_entite.LIBELLE_REDUIT, une_entite.LIBELLE);
  END LOOP;
  RETURN v_retour;
END MP_CODELISTS_ESI_GET_TAB_ENTITES;

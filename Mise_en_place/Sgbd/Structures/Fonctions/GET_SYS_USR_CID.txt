##
TAG_CHARSET=@€éèç
##
GET_SYS_USR_CID
=SQL=
CREATE OR REPLACE FUNCTION GET_SYS_USR_CID 
	RETURN T_SYS_USR_CID 
AS 
	v_retour T_SYS_USR_CID := T_SYS_USR_CID();
	-- Une valeur si la table SYS_USR_CID existe, null sinon
	v_existTable VARCHAR2(40);
	v_clientId_varsys VARCHAR2(32);
BEGIN
	/**
	 * Dans le cadre du multiclient, la table SYS_USR_CID permet d'associer un LOGIN avec un COMPANY_ID (CID).
	 * Le problème, c'est que cette table n'existe pas dans ADP Link car on est monoclient.
	 * Cette fonction va permettre de faire des requêtes sans avoir à s'interroger sur l'existence ou non de la table.
	 * Si la table existe, on retourne les données de SYS_USR_CID, 
	 * sinon on les créé en utilisant la table SYS_USR_CONFIG et la valeur du CID contenue dans la varsys "NS_CLIENT_ID"
	 * MAIS on exclu les utilisateurs techniques (SYS_USR_ADMIN_ONLY)
	*/
	BEGIN
	    select TABLE_NAME into v_existTable from USER_TABLES where TABLE_NAME = 'SYS_USR_CID';
  	EXCEPTION
    WHEN NO_DATA_FOUND THEN
    	-- La table n'exite pas  	
    	v_existTable := NULL;
  	END;
	
	IF v_existTable IS NOT NULL THEN 
		-- Execute immediate car la table peut ne pas existée (pb de statement ignored)
		execute immediate 'select T_SYS_USR_CID_OBJ(LOGIN, COMPANY_ID) from SYS_USR_CID' bulk collect into v_retour;
  	ELSE
  		select VALVAR into v_clientId_varsys from SYS_VARSYS where CODVAR = 'NS_CLIENT_ID';
  		-- On ne veut pas récupérer les utilisateurs techniques
  		select T_SYS_USR_CID_OBJ(LOGIN, v_clientId_varsys) bulk collect into v_retour from SYS_USR_CONFIG C where not exists (select 1 from SYS_USR_ADMIN_ONLY O where C.LOGIN = O.LOGIN);
  	END IF;
  	RETURN v_retour;
END GET_SYS_USR_CID;

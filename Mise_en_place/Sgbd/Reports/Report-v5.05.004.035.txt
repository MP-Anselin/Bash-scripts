##
TAG_CHARSET=@€éèç
TAG_IMPORT=5.05.004.R035
##
MY_REGEXP_REPLACE
=SQL=
CREATE OR REPLACE FUNCTION MY_REGEXP_REPLACE(p1 VARCHAR2, p2 VARCHAR2,p3 varchar2 ) 
RETURN varchar2 
DETERMINISTIC IS
BEGIN
RETURN REGEXP_REPLACE(p1, p2, p3);
END MY_REGEXP_REPLACE; 
##
TAG_CHARSET=@€éèç
##
TRG_CONTRAT_HISTO_AFTER_ROW
=SQL=
create or replace FUNCTION TRG_CONTRAT_HISTO_AFTER_ROW
  RETURN CLOB
AS
  v_retour CLOB;
  v_prec_donneegxp VARCHAR2(100);
  CURSOR cur_mapdo
  IS
SELECT NUMPAC,
  ELEMENT,
  DONNEEGXP
FROM TGE_REF_MAPDO
WHERE ELEMENT IN
  ( 
  SELECT 'A301' FROM dual 
  UNION ALL 
  SELECT 'A302' FROM dual 
  UNION
  SELECT  nom_elt
  FROM    tge_map_arg_elt
  WHERE   code_table = 'LTP'
  )
ORDER BY ELEMENT,
  NUMPAC DESC;
  lig_mapdo cur_mapdo%rowtype;
  lig_mapdo_prec cur_mapdo%rowtype := NULL;
BEGIN

  v_retour := ' 
v_numpac := NVL(:NEW.NUMPAC,:OLD.NUMPAC); 
v_paiezad := NVL(:NEW.paiezad,:OLD.paiezad); 
v_periode := TO_CHAR(LEAST(NVL(:NEW.date_eff,:OLD.date_eff), NVL(:OLD.date_eff,:NEW.date_eff)), ''YYYYMM'');
-- On ne traite que l''UPDATE, et on n''ajoute chaque couple NUMPAC/PAIEZAD qu''une seule fois 
IF NOT tabTrtPeriodesIndividuelles.exists(v_numpac||v_paiezad) THEN 
tabTrtPeriodesIndividuelles(v_numpac||v_paiezad) := ''O''; 
IF INSERTING OR DELETING THEN 
alimPeriodesIndiv := TRUE; 
ELSE 
alimPeriodesIndiv := FALSE; ';
  OPEN cur_mapdo;
  LOOP
    FETCH cur_mapdo INTO lig_mapdo ;
    IF lig_mapdo_prec.element IS NOT NULL AND (cur_mapdo%NOTFOUND OR NOT lig_mapdo_prec.element=lig_mapdo.element) THEN
      -- La dernière ligne traitée était la dernière ligne de mapping pour l'élément précédent
      -- Si c'était le PAC *, c'est le cas par défaut (ELSE), sinon, on continue de tester le PAC
	  
	    SELECT ':old.'  ||LISTAGG(donneegxp,'||:old.') WITHIN GROUP (ORDER BY donneegxp)
		INTO v_prec_donneegxp
		FROM
		  (SELECT numpac,
			donneegxp
		  FROM TABLE (get_gxp_trt_particulier_datas('DIC_ADM_CONTRAT_HISTO', lig_mapdo_prec.element))
		  UNION
		  SELECT lig_mapdo_prec.numpac, lig_mapdo_prec.donneegxp FROM dual
		  );

	  
      IF lig_mapdo_prec.numpac='*' THEN
        v_retour             := v_retour||' 
ELSE ';
      ELSE
        v_retour := v_retour||' 
ELSIF v_numpac='''||lig_mapdo_prec.numpac||''' THEN ';
      END IF;
        v_retour := v_retour||' 
tabValToCompare(''old'||lig_mapdo_prec.element||''') := '||v_prec_donneegxp||'; 
tabValToCompare(''new'||lig_mapdo_prec.element||''') := '||v_prec_donneegxp||'; 
END IF; ';
     
      IF NOT lig_mapdo_prec.numpac='*' THEN
        -- Pas de ligne avec un PAC * : cas par défaut --> NULL
        
          v_retour := v_retour||' 
ELSE 
tabValToCompare(''old'||lig_mapdo_prec.element||''') := NULL; 
tabValToCompare(''new'||lig_mapdo_prec.element||''') := NULL; 
END IF; ';
        
      END IF;
    END IF;
    EXIT
  WHEN cur_mapdo%NOTFOUND;
    -- C'est la toute première ligne, ou bien la ligne précédente était la dernière ligne de mapping pour l'élément précédent
    -- On recommence un nouveau bloc IF
    IF lig_mapdo_prec.element IS NULL OR NOT lig_mapdo_prec.element=lig_mapdo.element THEN
              v_retour := v_retour||' 
tabValToCompare(''old'||lig_mapdo.element||''') := NULL; 
tabValToCompare(''new'||lig_mapdo.element||''') := NULL; 
IF v_numpac IS NULL THEN NULL; ';
      
    END IF;
    IF NOT lig_mapdo.numpac='*' THEN
      
        v_retour := v_retour||' 
ELSIF v_numpac='''||lig_mapdo.numpac||''' THEN 
tabValToCompare(''old'||lig_mapdo.element||''') := '||v_prec_donneegxp||'; 
tabValToCompare(''new'||lig_mapdo.element||''') := '||v_prec_donneegxp||';  ';
      
    END IF;
    lig_mapdo_prec := lig_mapdo;
  END LOOP;
CLOSE cur_mapdo;
IF lig_mapdo_prec.element IS NOT NULL THEN
  -- On est passé au moins une fois dans la boucle
  lig_mapdo_prec := NULL;
  OPEN cur_mapdo;
  LOOP
    FETCH cur_mapdo INTO lig_mapdo ;
    EXIT
  WHEN cur_mapdo%NOTFOUND;
    -- C'est la toute première ligne, ou bien la ligne précédente était la dernière ligne de mapping pour l'élément précédent
    IF lig_mapdo_prec.element IS NULL OR NOT lig_mapdo_prec.element=lig_mapdo.element THEN
      
        v_retour := v_retour||' 
IF tabValToCompare(''new'||lig_mapdo.element||''')<>tabValToCompare(''old'||lig_mapdo.element||''') OR (tabValToCompare(''new'||lig_mapdo.element||''') IS NOT NULL AND tabValToCompare(''old'||lig_mapdo.element||''') IS NULL) OR (tabValToCompare(''new'||lig_mapdo.element||''') IS NULL AND tabValToCompare(''old'||lig_mapdo.element||''') IS NOT NULL) THEN 
alimPeriodesIndiv := TRUE; 
END IF; ';
      
    END IF;
    lig_mapdo_prec := lig_mapdo;
  END LOOP;
  CLOSE cur_mapdo;
END IF;
v_retour := v_retour||' 
END IF; 
IF alimPeriodesIndiv THEN 
  -- Modification de la date de début ou de fin de suspension : on met à jour la table des périodes individuelles 
  idxPeriodesIndiv := null;
  FOR i IN 1..paiezadTab.count LOOP
    IF numpacTab(i) = v_numpac AND paiezadTab(i) = v_paiezad THEN
      idxPeriodesIndiv := i;
      EXIT;
    END IF;
  end LOOP ;
  
  IF idxPeriodesIndiv IS NOT NULL THEN
    periodeTab(idxPeriodesIndiv) := LEAST(periodeTab(idxPeriodesIndiv), v_periode);
  ELSE
    paiezadTab.EXTEND ; 
    paiezadTab(paiezadTab.LAST) := v_paiezad; 
    numpacTab.EXTEND ; 
    numpacTab(numpacTab.LAST) := v_numpac; 
    periodeTab.EXTEND ;
    periodeTab(periodeTab.LAST) := v_periode;
  END IF;
END IF; 
END IF; 
 IF ((INSERTING OR  UPDATING) AND( (NVL (:OLD.ZA820, 0)<>nvl (:NEW.ZA820, 0)  ) OR (NVL (:OLD.ZA819, 0)<>nvl (:NEW.ZA819, 0)) ))THEN
   	in_calc_hp(''P_NUMPAC''):=NVL(:NEW.NUMPAC,:OLD.NUMPAC);
	in_calc_hp(''P_PACMAT''):=NVL(:NEW.PACMAT,:OLD.PACMAT);
 	in_calc_hp(''P_PAIEZAD''):=NVL(:NEW.PAIEZAD,:OLD.PAIEZAD);
 	in_calc_hp(''P_NUMCNT''):=TO_CHAR(NVL(:NEW.NUMCNT,:OLD.NUMCNT));
 	in_calc_hp(''P_DATE_EFF''):=TO_CHAR(NVL(:NEW.DATE_EFF,:OLD.DATE_EFF),''DD/MM/YYYY'');
 	in_calc_hp(''P_DATE_SORTIE_SIT_BO''):=TO_CHAR(NVL(:NEW.date_sortie_sit_bo,:OLD.date_sortie_sit_bo),''DD/MM/YYYY'');
 	in_calc_hp(''P_LOGIN'') :=''TRIGGER'';
END IF;  
';
RETURN v_retour;
END TRG_CONTRAT_HISTO_AFTER_ROW;
##
TAG_CHARSET=@€éèç
##
TRG_CONTRAT_HISTO_AFTER_STMNT
=SQL=
CREATE OR REPLACE FUNCTION TRG_CONTRAT_HISTO_AFTER_STMNT RETURN VARCHAR2 AS 
BEGIN
  RETURN '
  IF v_listMatricToUpdate IS NOT NULL THEN
    -- Insère dans la table temporaire les NUMPAC/PACMAT/MATRIC à mettre à jour
    --DBMS_OUTPUT.PUT_LINE(''CONTRAT_HISTO UPDATING ''||v_listMatricToUpdate);
    --FIXME utiliser la procédure trace_dbms_output()
    EXECUTE_IMMEDIATE_STRING (''INSERT INTO SECUPACMAT_TMP_CONTRAT (NUMPAC, PACMAT, MATRIC) SELECT DISTINCT NUMPAC, PACMAT, MATRIC FROM SECUPACMAT WHERE MATRIC IN (''||v_listMatricToUpdate||'')'',0);
    SECNAV_MAJ_CURRENT_CONTRAT(''DO_MAJ'', 0, 1, 0);
    DELETE FROM SECUPACMAT_TMP_CONTRAT;
    IF INSERTING THEN
      v_actionIdx := ''I'';
    ELSIF UPDATING THEN
      v_actionIdx := ''U'';
    ELSIF DELETING THEN
      v_actionIdx := ''D'';
    END IF;
    DBMS_JOB.SUBMIT(v_jobIdx , ''ALIM_IDX.COMPARE_CONTRAT_HISTO_JOB(JOB, ''''''||v_actionIdx||'''''');'');
    INSERT INTO DIC_IDX_JOB_KEYS SELECT v_jobIdx, T.* FROM TABLE(v_cles_idx_contrat) T;
    IF INSERTING OR UPDATING THEN
      INSERT INTO DIC_IDX_JOB_OLD_DATAS VALUES (v_jobIdx, ANYDATA.CONVERTCOLLECTION(GET_DACH_MULTI_HORS_TRANSAC(v_cles_idx_contrat)));
    END IF;
  END IF;
  FOR i IN 1..paiezadTab.count
  LOOP
    TGE_ALIM_PERIODE_INDIV(0, numpacTab(i), periodeTab(i), paiezadTab(i));
  END LOOP ;
IF in_calc_hp.exists(''P_NUMPAC'') THEN
  CALC_HP.PRINCIPAL(
    in_calc_hp(''P_NUMPAC''),
    in_calc_hp(''P_PACMAT''),
    in_calc_hp(''P_PAIEZAD''),
    TO_NUMBER(in_calc_hp(''P_NUMCNT'')),
    in_calc_hp(''P_DATE_EFF''),
    in_calc_hp(''P_DATE_SORTIE_SIT_BO''),
    in_calc_hp(''P_LOGIN'') 
  );
 END IF;
';
END TRG_CONTRAT_HISTO_AFTER_STMNT;
##
REGEXP_CLE_IMPORT
=SQL IF_INDEX_NOTEXIST=REGEXP_CLE_IMPORT=
CREATE INDEX REGEXP_CLE_IMPORT ON TGE_ABSENCES (SUBSTR(MY_REGEXP_REPLACE(CLE_IMPORT,'#\d+$',''),0,80)) COMPUTE STATISTICS
##
TAG_CHARSET=@€éèç
##
TGE_INCIDENTS_PAIE_F2
=SQL IF_INDEX_NOTEXIST=TGE_INCIDENTS_PAIE_F2=
CREATE INDEX TGE_INCIDENTS_PAIE_F2 ON TGE_INCIDENTS_PAIE ( PAIEZAD,DATE_EFFET,CODE_IP,NUMPAC,SUBSTR(MY_REGEXP_REPLACE ("CLE_IMPORT",'#\d+$',''),0,80),CLE_ABSENCE) ONLINE
##
CALC_HP
=SQL=
create or replace PACKAGE CALC_HP IS

p_date_deb DATE;
p_date_fin DATE;
horaireRemu VARCHAR(255);--horaire remu.	
horairePres VARCHAR(255); -- tmp horaire pres. 
dateDebTranchSitu DATE;   --tmp loop cycle dans situation
dateFinTranchSitu DATE;   --tmp loop cycle dans situation
dateEnCours DATE;         --date en cours pour calcul LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
numJourCanevas NUMBER(5,0);--tmp for LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
nbreHeures NUMBER(5,2);    --tmp for LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
jourSemaine VARCHAR2(15);


TYPE map_horaire_par_jour IS TABLE OF NUMBER INDEX BY VARCHAR2(50);
arrHoraireParJour map_horaire_par_jour;

/*****************/
TYPE TgeRefHprType IS RECORD (
    NUMPAC	VARCHAR2(6 BYTE),
    CODE_HOR_PRES	NUMBER(3,0),
    DATE_DEBUT	DATE,
    DATE_FIN	DATE,
    HRS_LUNDI	NUMBER(4,2),
    HRS_MARDI	NUMBER(4,2),
    HRS_MERCREDI	NUMBER(4,2),
    HRS_JEUDI	NUMBER(4,2),
    HRS_VENDREDI	NUMBER(4,2),
    HRS_SAMEDI	NUMBER(4,2),
    HRS_DIMANCHE	NUMBER(4,2)
);
--TYPE map_hpr IS TABLE OF TgeRefHprType INDEX BY VARCHAR2(30);
cur_TgeRefhpr TgeRefHprType;
--l_map_hpr map_hpr;
TYPE type_List_arr_2 IS VARRAY(99) OF TgeRefHprType;
lst_2 type_List_arr_2;
arrCycleHprSituation type_List_arr_2;


TYPE TgeRefDcyCy1Cy2Type IS RECORD (
	NUMPAC						VARCHAR2(6 BYTE),
	CODE_CLASSE_HORAIRE_OTT 	NUMBER(3,0),
	DATE_DEBUT 					DATE,
	DATE_FIN 					DATE,
	CODE_CYCLE_OTT 				NUMBER(3,0),
	CODE_CANEVAS_CYCLE_OTT 		NUMBER(3,0),
	NOMBRE_JOURS_CYCLE			NUMBER(3,0),
	NUM_JOUR_ENTREE_CANEVAS		NUMBER(3,0),
	NOMBRE_HEURE_1 				NUMBER(5,2),
	NOMBRE_HEURE_2				NUMBER(5,2),
	NOMBRE_HEURE_3				NUMBER(5,2),
	NOMBRE_HEURE_4				NUMBER(5,2),
	NOMBRE_HEURE_5				NUMBER(5,2),
	NOMBRE_HEURE_6				NUMBER(5,2),
	NOMBRE_HEURE_7				NUMBER(5,2),
	NOMBRE_HEURE_8				NUMBER(5,2),
	NOMBRE_HEURE_9				NUMBER(5,2),
	NOMBRE_HEURE_10				NUMBER(5,2),
	NOMBRE_HEURE_11				NUMBER(5,2),
	NOMBRE_HEURE_12				NUMBER(5,2),
	NOMBRE_HEURE_13				NUMBER(5,2),
	NOMBRE_HEURE_14				NUMBER(5,2),
	NOMBRE_HEURE_15				NUMBER(5,2),
	NOMBRE_HEURE_16				NUMBER(5,2), 
	NOMBRE_HEURE_17				NUMBER(5,2),
	NOMBRE_HEURE_18				NUMBER(5,2),
	NOMBRE_HEURE_19				NUMBER(5,2),
	NOMBRE_HEURE_20				NUMBER(5,2),
	NOMBRE_HEURE_21				NUMBER(5,2)
	) ;
  /* FOR HASHMAP AND RECORD */
--TYPE map_varchar IS TABLE OF TgeRefDcyCy1Cy2Type INDEX BY VARCHAR2(30);
cur_TgeRefDcy TgeRefDcyCy1Cy2Type;
--l_map map_varchar;
TYPE type_List_arr IS VARRAY(99) OF TgeRefDcyCy1Cy2Type;
lst_1 type_List_arr;
arrCycleSituation type_List_arr;
  /***************/
  
  TYPE TGE_REF_MAPDOType IS RECORD (
    NUMPAC	VARCHAR2(6),
    ELEMENT	VARCHAR2(4),
    OCCURENCE	VARCHAR2(2),
    DONNEEGXP	VARCHAR2(50),
    TABLEGXP	VARCHAR2(24),
    DONNFILTRE	VARCHAR2(50),
    OPERFILTRE	VARCHAR2(2),
    VALFILTRE	VARCHAR2(15),
    TRTPARTICULIER	VARCHAR2(4000),
    ENVOI_SYSTEMATIQUE	VARCHAR2(1),
    FORCABLE_ECRAN_GENERE	VARCHAR2(1)
	) ;
cur_TgeRefmapdo TGE_REF_MAPDOType;
TYPE type_List_arr_3 IS VARRAY(99) OF TGE_REF_MAPDOType;
lst_3 type_List_arr_3;


--TYPE dachtype IS RECORD();
TYPE DACH_Type IS RECORD (PAIEZAD	VARCHAR2(8 ),MATRIC	VARCHAR2(32 ),TYPE_WRITER	VARCHAR2(1 ),ZAA91	VARCHAR2(5 ),ZAA92	VARCHAR2(1 ),ZAA93	VARCHAR2(2 ),CODE_GTA	VARCHAR2(5 ),ZA914	VARCHAR2(5 ),CMPPCS	VARCHAR2(6 ),ZAB12	VARCHAR2(1 ),ZAB13	VARCHAR2(1 ),ZAB14	VARCHAR2(1 ),ZMODCNT	VARCHAR2(2 ),ZAB15	VARCHAR2(1 ),ZAB16	VARCHAR2(1 ),ZAB17	VARCHAR2(1 ),ZAB18	VARCHAR2(1 ),ZA719	DATE,ZAB05	VARCHAR2(2 ),ZAB06	DATE,ZAB07	VARCHAR2(2 ),ZAB08	VARCHAR2(1 ),ZAB09	VARCHAR2(1 ),ZAB10	VARCHAR2(1 ),ZAB11	VARCHAR2(1 ),DATE_SORTIE_SIT_BO	DATE,DATE_CREATION	DATE,DATE_DERNIERE_MODIF	DATE,DATE_FIN_BO	DATE,ZX528	VARCHAR2(1 ),ZX734	VARCHAR2(1 ),DSA302	DATE,DSCDDCDI	DATE,COLPRES	VARCHAR2(1 ),HHDCN	DATE,REPBNDF	VARCHAR2(1 ),DSRCDDCDI	DATE,TCDDCDI	VARCHAR2(1 ),ZA996	VARCHAR2(1 ),DSA751	DATE,DSAGM	DATE,DSAGP	DATE,DSANCR	DATE,DSATO	DATE,DSDAP	DATE,DSDCP	DATE,DSDECH	DATE,DSDJTP	DATE,DSDNP	DATE,DSDPE	DATE,DSDPEN	DATE,DSDPN	DATE,DSDPP	DATE,DSEPL	DATE,DSES1	DATE,DSES2	DATE,DSFCNI	DATE,DSFCNP	DATE,DSFCP	DATE,DSFICH	DATE,DSFNP	DATE,DSFPE	DATE,DSFPN	DATE,DSFPP	DATE,DSFSUS	DATE,DSNLI	DATE,DSRNVL	DATE,DSRPCH	DATE,DSSAD	DATE,DSSCG	DATE,DSSTC	DATE,EMPLOI	VARCHAR2(6 ),ESSAI	VARCHAR2(1 ),FILIR	VARCHAR2(2 ),IFCDD	VARCHAR2(1 ),JJCNT	NUMBER(2,0),JJESS1	NUMBER(2,0),JJESS2	NUMBER(2,0),JJESS4	NUMBER(2,0),MAJHA	VARCHAR2(1 ),METIER	VARCHAR2(4 ),MMCNT	NUMBER(2,0),MMESS1	NUMBER(2,0),MMESS2	NUMBER(2,0),MMESS4	NUMBER(2,0),MNTPEN	NUMBER(7,2),MOTAUG	VARCHAR2(2 ),MOTAUI	VARCHAR2(2 ),MTAUG	NUMBER(9,2),MTAUI	NUMBER(9,2),NBCSP	NUMBER(5,2),NICSP	VARCHAR2(1 ),NIVECH	VARCHAR2(4 ),NUMAPP	VARCHAR2(30 ),NUMDUE	VARCHAR2(10 ),NUMPCS	VARCHAR2(4 ),OTT	VARCHAR2(3 ),PEREMP	VARCHAR2(32 ),PPSAL	VARCHAR2(2 ),PRAUG	NUMBER(6,2),PRAUI	NUMBER(6,2),PREAVI	VARCHAR2(1 ),PREFF	VARCHAR2(1 ),PRPAY	VARCHAR2(1 ),PRVNP	VARCHAR2(1 ),QUALPE	VARCHAR2(50 ),RECAPE	VARCHAR2(1 ),REFCG	VARCHAR2(10 ),RETRAI	VARCHAR2(1 ),RNVESS	VARCHAR2(1 ),RVCNT	VARCHAR2(1 ),SAFBA	NUMBER(9,2),SENET	VARCHAR2(2 ),SITADM	VARCHAR2(2 ),SSFIL	VARCHAR2(2 ),TATR	VARCHAR2(1 ),TPNAB	VARCHAR2(1 ),TXACT	NUMBER(7,4),TXAID	NUMBER(7,4),TXEMP	NUMBER(7,4),TYPAGM	VARCHAR2(1 ),TYSUB	VARCHAR2(1 ),VALTF	VARCHAR2(1 ),VALTR	NUMBER(6,2),ZA364	VARCHAR2(5 ),ZA365	VARCHAR2(5 ),ZA368	VARCHAR2(1 ),ZA380	VARCHAR2(2 ),ZA406	VARCHAR2(2 ),ZA523	VARCHAR2(2 ),ZA554	VARCHAR2(3 ),ZA557	VARCHAR2(8 ),ZA626	VARCHAR2(1 ),ZA640	VARCHAR2(1 ),ZA650	VARCHAR2(2 ),ZA656	VARCHAR2(2 ),ZA700	VARCHAR2(2 ),ZA701	VARCHAR2(2 ),ZA750	VARCHAR2(1 ),ZA754	VARCHAR2(1 ),ZA755	VARCHAR2(1 ),ZA819	NUMBER(3,0),ZA820	NUMBER(3,0),ZA962	VARCHAR2(2 ),ZAA84	NUMBER(5,2),ZAA85	VARCHAR2(1 ),ZB071	VARCHAR2(3 ),ZB133	VARCHAR2(3 ),ZB193	VARCHAR2(3 ),ZB224	VARCHAR2(3 ),ZB330	VARCHAR2(2 ),ZB368	NUMBER(9,2),ZB369	NUMBER(9,2),ZB647	VARCHAR2(1 ),ZB648	VARCHAR2(1 ),ZB883	NUMBER(5,3),ZP895	NUMBER(9,2),ZQ183	VARCHAR2(1 ),ZQ188	VARCHAR2(1 ),ZQ272	VARCHAR2(32 ),ZQ764	VARCHAR2(1 ),ZREACT	DATE,ZT061	VARCHAR2(3 ),NUMPAC	VARCHAR2(6 ),PACMAT	VARCHAR2(8 ),NUMCNT	NUMBER(9,0),DATE_EFF	DATE,DATE_FIN	DATE,AACNT	NUMBER(2,0),AAESS4	NUMBER(2,0),ACDADM	VARCHAR2(1 ),ACDALC	VARCHAR2(1 ),ACDFNE	VARCHAR2(1 ),AFFS02	VARCHAR2(25 ),AIPAT	VARCHAR2(1 ),ALSMO	VARCHAR2(1 ),APARCE	VARCHAR2(2 ),AVNAA	NUMBER(7,2),AVNAL	NUMBER(7,2),AVNAN	NUMBER(7,2),AVNAV	NUMBER(7,2),AVNTIC	NUMBER(7,2),CADRE	VARCHAR2(1 ),CAMSA	VARCHAR2(2 ),CASAS	VARCHAR2(1 ),CATAFP	VARCHAR2(2 ),CBUD	VARCHAR2(10 ),CE	VARCHAR2(6 ),CFE	VARCHAR2(1 ),CFEAT	VARCHAR2(1 ),CFECV	VARCHAR2(1 ),CFEDC	VARCHAR2(1 ),CFEEM	VARCHAR2(1 ),CFEES	VARCHAR2(1 ),CFEMA	VARCHAR2(1 ),CFESF	VARCHAR2(1 ),CFEVE	VARCHAR2(1 ),CFEVI	VARCHAR2(1 ),CHTYPC	VARCHAR2(2 ),CLNC	VARCHAR2(2 ),CODCPN	VARCHAR2(3 ),CODETB	VARCHAR2(5 ),CODSTE	VARCHAR2(6 ),COEFF	NUMBER(5,0),COFRON	VARCHAR2(1 ),COMCNT	VARCHAR2(50 ),COMURB	VARCHAR2(4 ),CSCOMP	VARCHAR2(2 ),CSRTT	NUMBER(9,2),CSTAPA	VARCHAR2(2 ),CVCOLL	VARCHAR2(4 ),DICDD	NUMBER(9,2),DRPAI2	VARCHAR2(1 ),DSA277	DATE,DSA301	DATE,TUTEUR	VARCHAR2(50 ),NUMURS_PRT	VARCHAR2(18 ),SIREN_PRT	VARCHAR2(9 ),STATUT_PRT	VARCHAR2(3 ),CODAGE_INT	VARCHAR2(6 ),CODSOC_INT	VARCHAR2(6 ),IDPACMAT	VARCHAR2(14 ),ACT_ORG	VARCHAR2(6 ),BU_ORG	VARCHAR2(6 ),DSAUI	DATE,DERUSA	VARCHAR2(1 ),DSFINC	DATE,MAAFFP	VARCHAR2(2 ),
DEBUT_PER_GENERATION_HP DATE, FIN_PER_GENERATION_HP DATE);
cur_dachtype DACH_Type;
TYPE type_List_arr_4 IS VARRAY(200) OF DACH_Type;
lst_4 type_List_arr_4;
  
sql_1 CLOB;
sql_2 CLOB;
sql_3 CLOB;
sql_4 CLOB;

 
 
 
 cpt number:=1;
 
 TYPE SituationType IS RECORD (
    numpac	VARCHAR2(30),
    pacmat	VARCHAR2(30),
    paieZad	VARCHAR2(30),
    numcnt	NUMBER(13,0),
    code_classe_horaire_ott	NUMBER(13,0),
    code_cycle_ott	NUMBER(13,0),
    dateDeb	DATE,
    dateFin	DATE,
    isGtaT1	boolean,
    HRS_SAMEDI	NUMBER(4,2),
    HRS_DIMANCHE	NUMBER(4,2)
);
--l_map_hpr map_hpr;
TYPE SituationType_arr_2 IS VARRAY(99) OF SituationType;
lst_Situation SituationType_arr_2;
 
 /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION calculateNomJourCanevas( ligneTgeRefHprType IN TgeRefHprType, dateEnCour IN DATE  ) RETURN VARCHAR;
  
  /**
  * retourne le numero de jour canevas 
  */
 FUNCTION calculateNumJourCanevas( ligneDcyCy1Cy2 IN TgeRefDcyCy1Cy2Type, local_dateEnCours IN DATE  ) RETURN NUMBER;
    
  /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION getValOfCycle( val IN VARCHAR2, obj IN TgeRefDcyCy1Cy2Type) RETURN NUMBER;
  
   FUNCTION getHprHoursNbre( val IN NUMBER, obj IN TgeRefHprType  )  RETURN NUMBER;
  
  
  /*
  * get value from DACH object selon clé
  */
 FUNCTION getValOfDACH( val IN VARCHAR2, obj IN DACH_Type  )  RETURN VARCHAR2;
  
  /*
  *   insertion d'un incident paie hors absence (a la fin de du traitement)
  */
PROCEDURE insertIncidentPaieHorsAbs( nbrHeur IN NUMBER,dateActu IN DATE, p_unIncident IN SituationType,  p_login IN VARCHAR2);
  
PROCEDURE principal( p_numpac IN VARCHAR2
 , p_pacmat IN VARCHAR2
 , p_paiezad IN VARCHAR2
 , p_numcnt IN NUMBER
 , p_date_eff IN VARCHAR2 
 , p_date_sortie_sit_bo IN VARCHAR2
 , p_login IN VARCHAR2
 ); 
 
 
END CALC_HP;

##
CALC_HP
=SQL=
create or replace PACKAGE BODY CALC_HP AS

 /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION calculateNomJourCanevas( ligneTgeRefHprType IN TgeRefHprType, dateEnCour IN DATE  )
  RETURN VARCHAR
  IS
  numJr NUMBER := 0;
  BEGIN
  select to_char(dateEnCour,'D') INTO numJr from dual;
  CASE numJr
    WHEN 1 THEN  RETURN 'Lundi';
    WHEN 2 THEN  RETURN 'Mardi';
    WHEN 3 THEN  RETURN 'Mercredi';
    WHEN 4 THEN  RETURN 'Jeudi';
    WHEN 5 THEN  RETURN 'Vendredi';
    WHEN 6 THEN  RETURN 'Samedi';
    WHEN 7 THEN  RETURN 'Dimanche';
    ELSE RETURN 'Erreur numéro jour';
  END CASE;
  
  
  END calculateNomJourCanevas;
  
  /**
  * retourne le numero de jour canevas 
  */
 FUNCTION calculateNumJourCanevas( ligneDcyCy1Cy2 IN TgeRefDcyCy1Cy2Type, local_dateEnCours IN DATE  )
  RETURN NUMBER
  IS
  local_numJourCanevas NUMBER;
  res1 NUMBER;
  res2 NUMBER;
  
  tmp NUMBER;
  tmp2 NUMBER;
  BEGIN
    IF((ligneDcyCy1Cy2.Date_debut-local_dateEnCours+ligneDcyCy1Cy2.Num_jour_entree_canevas)< ligneDcyCy1Cy2.Nombre_jours_cycle) THEN
      res1:=(ligneDcyCy1Cy2.date_debut - local_dateEnCours) / ligneDcyCy1Cy2.Nombre_jours_cycle;
      res2:=ABS((ligneDcyCy1Cy2.date_debut - local_dateEnCours)) + 1 - (TRUNC(ABS(res1)) * ligneDcyCy1Cy2.Nombre_jours_cycle); 
      
      tmp2:=TRUNC(ABS(res1));
      
     tmp:= ABS((ligneDcyCy1Cy2.date_debut - local_dateEnCours));
      
      
      IF( (res2-1) > ligneDcyCy1Cy2.Nombre_jours_cycle - ligneDcyCy1Cy2.Num_jour_entree_canevas ) THEN
        local_numJourCanevas := res2- (ligneDcyCy1Cy2.Nombre_jours_cycle - ligneDcyCy1Cy2.Num_jour_entree_canevas);
       ELSE
        local_numJourCanevas := res2 + ligneDcyCy1Cy2.Num_jour_entree_canevas-1;
      END IF;
    ELSE
        local_numJourCanevas :=ligneDcyCy1Cy2.Num_jour_entree_canevas + ABS(ligneDcyCy1Cy2.date_debut - local_dateEnCours); --
    END IF;
    
    RETURN local_numJourCanevas;
  END calculateNumJourCanevas;
    
  /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION getValOfCycle( val IN VARCHAR2, obj IN TgeRefDcyCy1Cy2Type  )
  RETURN NUMBER
  IS
  BEGIN
      IF val='NOMBRE_HEURE_1' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_1); END IF;
      IF val='NOMBRE_HEURE_2' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_2); END IF;
      IF val='NOMBRE_HEURE_3' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_3); END IF;
      IF val='NOMBRE_HEURE_4' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_4); END IF;
      IF val='NOMBRE_HEURE_5' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_5); END IF;
      IF val='NOMBRE_HEURE_6' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_6); END IF;
      IF val='NOMBRE_HEURE_7' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_7); END IF;
      IF val='NOMBRE_HEURE_8' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_8); END IF;
      IF val='NOMBRE_HEURE_9' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_9); END IF;
      IF val='NOMBRE_HEURE_10' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_10); END IF;
      IF val='NOMBRE_HEURE_11' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_11); END IF;
      IF val='NOMBRE_HEURE_12' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_12); END IF;
      IF val='NOMBRE_HEURE_13' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_13); END IF;
      IF val='NOMBRE_HEURE_14' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_14); END IF;
      IF val='NOMBRE_HEURE_15' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_15); END IF;
      IF val='NOMBRE_HEURE_16' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_16); END IF;
      IF val='NOMBRE_HEURE_17' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_17); END IF;
      IF val='NOMBRE_HEURE_18' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_18); END IF;
      IF val='NOMBRE_HEURE_19' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_19); END IF;
      IF val='NOMBRE_HEURE_20' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_20); END IF;
      IF val='NOMBRE_HEURE_21' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_21); END IF;
      RETURN NULL;
  END getValOfCycle;
  
   FUNCTION getHprHoursNbre( val IN NUMBER, obj IN TgeRefHprType  )
  RETURN NUMBER
  IS
  BEGIN
      IF val='Lundi' THEN RETURN TO_NUMBER(obj.HRS_LUNDI); END IF;
      IF val='Mardi' THEN RETURN TO_NUMBER(obj.HRS_MARDI); END IF;
      IF val='Mercredi' THEN RETURN TO_NUMBER(obj.HRS_MERCREDI); END IF;
      IF val='Jeudi' THEN RETURN TO_NUMBER(obj.HRS_JEUDI); END IF;
      IF val='Vendredi' THEN RETURN TO_NUMBER(obj.HRS_VENDREDI); END IF;
      IF val='Samedi' THEN RETURN TO_NUMBER(obj.HRS_SAMEDI); END IF;
      IF val='Dimanche' THEN RETURN TO_NUMBER(obj.HRS_DIMANCHE); END IF;
      RETURN NULL;
  END getHprHoursNbre;
  
  
  /*
  * get value from DACH object selon clé
  */
 FUNCTION getValOfDACH( val IN VARCHAR2, obj IN DACH_Type  )
  RETURN VARCHAR2
  IS
  BEGIN
    IF val='ZA996' THEN RETURN TO_CHAR(obj.ZA996); END IF;
    IF val='ZA819' THEN RETURN TO_CHAR(obj.ZA819); END IF;
    IF val='ZA820' THEN RETURN TO_CHAR(obj.ZA820); END IF;
    return '';
  END getValOfDACH;
  
  /*
  *   insertion d'un incident paie hors absence (a la fin de du traitement)
  */
PROCEDURE insertIncidentPaieHorsAbs( nbrHeur IN NUMBER,dateActu IN DATE, p_unIncident IN SituationType, p_login IN VARCHAR2 )
  IS
  seq NUMBER:='';
  BEGIN
  
  select SEQ_TGE_INCIDENTS_PAIE.NEXTVAL into seq from dual;
  
  INSERT INTO TGE_INCIDENTS_PAIE
	 (ID, NUMPAC, PAIEZAD, PERIODE, TYPE_TRAITEMENT, DATE_EFFET, TYPE_IP, CODE_IP
			, CODE_IMPUTATION, HEURES, ORIGINE, LOGIN_CREATE, DATE_CREATE, ROLE_CREATE, ORIGINE_CREATE
			, LOGIN_MAJ, DATE_MAJ, ROLE_MAJ, ORIGINE_MAJ, CLE_IMPORT, CLE_ABSENCE, IDPACMAT, ENVOYE, JOUR_OUVRABLE
			,JOUR_OUVRE , JOUR_OEUVRE, JOUR_CALENDAIRE, JOUR_HEURES )
			 values (
			  seq --ID
			  , p_unIncident.numPac --NUMPAC
			  , p_unIncident.paieZad --PAIEZAD
			  , TO_DATE((select periodeEnCours from TGE_REF_PAC where numpac=p_unIncident.numPac) , 'YYYYMM') --PERIODE
			  , (select CODETYPTRT  from (select CODETYPTRT from TGE_REF_TYPETRT where (NUMPAC=p_unIncident.numPac OR NUMPAC='*') and CODETYPTRT='TT' order by NUMPAC desc) where rownum = 1 ) --TYPE_TRAITEMENT
			  ,  dateActu --DATE_EFFET
			  , 'T' --TYPE_IP
			  , 'HP' --CODE_IP
			  , '' -- p_unIncident.code_imputation;
			  , nbrHeur --HEURES

			  , 'T' --ORIGINE
			  , p_login --LOGIN_CREATE
			  , sysdate --DATE_CREATE
			  , 'ADM' -- info non trouver :'( !!ROLE_CREATE DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , 'TRG_DIC_ADM_CONTRAT_HISTO' --ORIGINE_CREATE DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , p_login --LOGIN_MAJ
			  , sysdate --Date MAJ
			  , 'ADM' -- ROLE_MAJ
			  , 'TRG_DIC_ADM_CONTRAT_HISTO' --ORIGINE_MAJ DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , null --CLE_IMPORT

				,  null --CLE_ABSENCE
			  ,  p_unIncident.numpac||p_unIncident.pacmat --IDPACMAT
			  ,  '' --ENVOYE
			
			  ,  null -- p_unIncident.jour_ouvrable
			  ,  null -- p_unIncident.jour_ouvre
			  ,  null --p_unIncident.jour_oeuvre
			  ,  null --p_unIncident.jour_calendaire
			  ,  null --p_unIncident.jour_heures
			  );
  END;
  
  
  
   PROCEDURE principal( p_numpac IN VARCHAR2
 , p_pacmat IN VARCHAR2
 , p_paiezad IN VARCHAR2
 , p_numcnt IN NUMBER
 , p_date_eff IN VARCHAR2 
 , p_date_sortie_sit_bo IN VARCHAR2
 , p_login IN VARCHAR2
)
  IS
    cur_1 SYS_REFCURSOR; 
    cur_2 SYS_REFCURSOR; 
    cur_3 SYS_REFCURSOR; 
    cur_4 SYS_REFCURSOR; 
    debut_calcul_hp_DB DATE;
    v_period_en_cour varchar2(10);
    v_deb_retro varchar2(10);
    v_fin_per_gen_hp varchar2(10);
    m_embauche varchar2(6);
 	d_limiteMaj DATE;
 	d_dsdcn DATE;
 	v_count number;
    err_msg  VARCHAR(1000);
 	err_code VARCHAR(200);
    
  BEGIN
  
 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Begin)','Début de recalcul des HP pour la situation ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||', date_eff : '||p_date_eff||')');

      p_date_deb := TO_DATE(p_date_eff,'DD/MM/YYYY');
 	  p_date_fin := TO_DATE(p_date_sortie_sit_bo,'DD/MM/YYYY');
	  select count(*) into v_count from tge_periode_recueil_paiezad where NUMPAC=p_numpac and PAIEZAD=p_paiezad ;
  	  if  v_count<1 THEN 
 			FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La table TGE_PERIODE_RECUEIL_PAIEZAD n''est pas alimenté pour le paiezad '||p_paiezad);
 	    RETURN;
 	  END IF ; 

    /**** IS RETRO ? IS FUTUR *****/
FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup Periode)','Récupération de la période en cours, début retro et fin génération HP à partir de TGE_REF_PAC pour le numpac : '||p_numpac);
	 select pac.PERIODEENCOURS,pac.DEB_RETRO,tprp.fin_per_generation_hp INTO v_period_en_cour,v_deb_retro,v_fin_per_gen_hp
	 from tge_ref_pac pac
	 LEFT join tge_periode_recueil_paiezad tprp
	 ON (pac.PERIODEENCOURS=tprp.MOIS_PAIE and pac.NUMPAC = tprp.NUMPAC  and tprp.PAIEZAD=p_paiezad )
	 where pac.NUMPAC=p_numpac  ;
	 IF  ((v_fin_per_gen_hp is null )   and  (p_date_sortie_sit_bo= '31/12/2099'  )) THEN
	 	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La date de fin de recalcul est 20991231'); 
	 RETURN;
	 END IF;

--IF DACH FUTUR ALORS pas calcul HP
    IF ( v_fin_per_gen_hp is not null and p_date_deb>v_fin_per_gen_hp)THEN
		FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La date d''effet de la situation modifiée '||p_date_eff||' est dans le future, donc pas de recalcul des HP pour le paiezad '|| p_paiezad); RETURN;
      RETURN; 
    END IF;

/**** IS retro ***/
IF v_deb_retro IS NOT NULL AND v_period_en_cour > v_deb_retro THEN

BEGIN
 	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup mois d''embauche)','Récupération du mois d''embauche pour le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	SELECT MIN(MOIS_PAIE) INTO m_embauche FROM TGE_PERIODE_RECUEIL_PAIEZAD WHERE NUMPAC =p_numpac AND paiezad  =p_paiezad  ;
	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date d''embauche)','' );
	BEGIN
	 	SELECT DSDCN INTO d_dsdcn  FROM DIC_ADM_CONTRAT WHERE NUMPAC  =p_numpac and PACMAT = p_pacmat and NUMCNT = p_numcnt; 
	 EXCEPTION
	 WHEN OTHERS THEN
	 d_dsdcn:=  to_date ('31122099', 'ddmmyyyy');
	END; 
	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date limite retro)','Récupération de la date limite retro le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	 BEGIN 
	
	 	SELECT DEBUT_PERIODE_RECUEIL INTO d_limiteMaj FROM TGE_PERIODE_RECUEIL_PAIEZAD WHERE MOIS_PAIE=
		 (SELECT Greatest (m_embauche ,pac.deb_histo_retro,TO_CHAR(ADD_MONTHS(TO_DATE(pac.periodeencours,'YYYYMM'), - pac.nb_mois_retro),'YYYYMM'))
		 FROM tge_ref_pac pac
		 WHERE NUMPAC =p_numpac
		 )
		 AND NUMPAC  =p_numpac
		 AND PAIEZAD =p_paiezad;
	 EXCEPTION
	 WHEN others THEN
	  	d_limiteMaj := nvl (d_dsdcn,  to_date ('31122099', 'ddmmyyyy')); 
	 END;
	 IF (d_limiteMaj IS NULL)  THEN  
	 	d_limiteMaj := nvl (d_dsdcn,  to_date ('31122099', 'ddmmyyyy')); 
	 END IF;  
	 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date deb genHP)','Récupération de la date de début de génération des HP en mode retro pour le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	 SELECT
	 	debut_per_generation_hp  INTO debut_calcul_hp_DB
	 	FROM
	 tge_periode_recueil_paiezad tprp, tge_ref_pac p
	 WHERE
		 tprp.numpac = p_numpac
	 AND tprp.paiezad = p_paiezad
	 AND P.numpac = p_numpac
	 AND tprp.mois_paie = nvl (--mois_paie_hp
	 ( SELECT  MIN(tprp.mois_paie) FROM
	 tge_periode_recueil_paiezad tprp, tge_ref_pac pac
	 WHERE
	 tprp.numpac = p_numpac -- NEW.numpac
	 AND  tprp.numpac = pac.numpac
	 AND tprp.paiezad = p_paiezad -- NEW.paiezad
	 AND tprp.fin_periode_paie >=TO_DATE(p_date_deb,'DD/MM/YYYY')-- NEW.date_sortie_sit_bo
	 AND tprp.mois_paie >= greatest(pac.deb_histo_retro,TO_CHAR(ADD_MONTHS(TO_DATE(pac.periodeencours,'YYYYMM'), - pac.nb_mois_retro),'YYYYMM'))
	
	 ), p.periodeencours);
  EXCEPTION
 WHEN others THEN
 	debut_calcul_hp_DB:=null;
 END;

/**** fin retro ****/
ELSE
/*** NOT RETRO ***/
BEGIN
        select debut_per_generation_hp  INTO debut_calcul_hp_DB 
            from tge_periode_recueil_paiezad 
            where numpac=p_numpac
              and PAIEZAD=p_paiezad
              and MOIS_PAIE=(select PERIODEENCOURS from tge_ref_pac where NUMPAC=p_numpac );
EXCEPTION
 WHEN others THEN
 	debut_calcul_hp_DB:=null;
 END;
END IF; -- END test is RETRO    


p_date_deb:=GREATEST(p_date_deb,NVL(debut_calcul_hp_DB,p_date_deb),NVL(d_limiteMaj,p_date_deb) );

p_date_fin:=least (p_date_fin, NVL(v_fin_per_gen_hp,p_date_fin) );

    
   sql_1:='SELECT * 
            FROM
              ( SELECT dcy.numpac            AS numpac, dcy.code_classe_horaire_ott AS code_classe_horaire_ott, dcy.date_debut              AS date_debut,
                dcy.date_fin                AS date_fin, dcy.code_cycle_ott          AS code_cycle_ott,
                cy1.code_canevas_cycle_ott  AS code_canevas_cycle_ott, cy1.nombre_jours_cycle      AS nombre_jours_cycle,
                cy1.num_jour_entree_canevas AS num_jour_entree_canevas,    cy2.num_jour_dans_cycle     AS num_jour_dans_cycle, cy2.nombre_heure_1          AS nombre_heure
                
              FROM tge_ref_dcy dcy,  tge_ref_cy1 cy1,  tge_ref_cy2 cy2
              WHERE  dcy.numpac              IN ('''|| p_numpac /*SUBSTR(:NEW.IDPACMAT,0,6)*/ ||''')
              AND  cy1.numpac                 = dcy.numpac  AND cy2.numpac                 = cy1.numpac
              AND dcy.code_cycle_ott         = cy1.code_cycle_ott  AND cy1.code_canevas_cycle_ott = cy2.code_canevas_cycle_ott
              ORDER BY dcy.code_cycle_ott, dcy.code_classe_horaire_ott, cy1.code_canevas_cycle_ott, cy1.num_jour_entree_canevas
              ) pivot 	( MAX(nombre_heure) FOR num_jour_dans_cycle IN ( 	''1'' AS "NOMBRE_HEURE_1", ''2'' AS "NOMBRE_HEURE_2", ''3'' AS "NOMBRE_HEURE_3",
                                            ''4'' AS "NOMBRE_HEURE_4", ''5'' AS "NOMBRE_HEURE_5", ''6'' AS "NOMBRE_HEURE_6", ''7'' AS "NOMBRE_HEURE_7",
                                            ''8'' AS "NOMBRE_HEURE_8", ''9'' AS "NOMBRE_HEURE_9", ''10'' AS "NOMBRE_HEURE_10", ''11'' AS "NOMBRE_HEURE_11",
                                            ''12'' AS "NOMBRE_HEURE_12", ''13'' AS "NOMBRE_HEURE_13", ''14'' AS "NOMBRE_HEURE_14", ''15'' AS "NOMBRE_HEURE_15",
                                            ''16'' AS "NOMBRE_HEURE_16", ''17'' AS "NOMBRE_HEURE_17", ''18'' AS "NOMBRE_HEURE_18", ''19'' AS "NOMBRE_HEURE_19",
                                            ''20'' AS "NOMBRE_HEURE_20", ''21'' AS "NOMBRE_HEURE_21")
                    ) ORDER BY numpac, code_classe_horaire_ott, date_debut';
        
        
sql_2:='select numpac, code_hor_pres, date_debut, date_fin, hrs_lundi, hrs_mardi, hrs_mercredi, hrs_jeudi, hrs_vendredi, hrs_samedi, hrs_dimanche 
		  	 FROM   tge_ref_hpr 
		  	 WHERE  numpac               		IN ('''|| p_numpac ||''')
          ORDER BY numpac, code_hor_pres, date_debut';


/* A819,A820,A996 valeur alimenter manuellement dans Java*/
sql_3:='select M.NUMPAC,M.ELEMENT,M.OCCURENCE,M.DONNEEGXP,M.TABLEGXP,M.DONNFILTRE,M.OPERFILTRE,M.VALFILTRE,M.TRTPARTICULIER,M.ENVOI_SYSTEMATIQUE,M.FORCABLE_ECRAN_GENERE 
          from TGE_REF_MAPDO M  
          where ( ELEMENT IN (''A819'',''A820'',''A996'') ) 
          and  (((SELECT COUNT(1) FROM TGE_REF_MAPDO WHERE NUMPAC= '''||p_numpac||''' AND  ELEMENT = M.ELEMENT ) > 0 AND  M.NUMPAC='''||p_numpac||''')
              OR ((SELECT COUNT(1) FROM TGE_REF_MAPDO WHERE NUMPAC='''||p_numpac||''' AND ELEMENT = M.ELEMENT) = 0 AND M.NUMPAC=''*'' ))';

/* les colonne FIN_PER_GENERATION_HP et DEBUT_PER_GENERATION_HP sont null pour les alimenter manuellement lors d'itération*/
sql_4:='select PAIEZAD,MATRIC,TYPE_WRITER,ZAA91,ZAA92,ZAA93,CODE_GTA,ZA914,CMPPCS,ZAB12,ZAB13,ZAB14,ZMODCNT,ZAB15,ZAB16,ZAB17,ZAB18,ZA719,ZAB05,ZAB06,ZAB07,ZAB08,ZAB09,ZAB10,ZAB11,DATE_SORTIE_SIT_BO,DATE_CREATION,DATE_DERNIERE_MODIF,DATE_FIN_BO,ZX528,ZX734,DSA302,DSCDDCDI,COLPRES,HHDCN,REPBNDF,DSRCDDCDI,TCDDCDI,ZA996,DSA751,DSAGM,DSAGP,DSANCR,DSATO,DSDAP,DSDCP,DSDECH,DSDJTP,DSDNP,DSDPE,DSDPEN,DSDPN,DSDPP,DSEPL,DSES1,DSES2,DSFCNI,DSFCNP,DSFCP,DSFICH,DSFNP,DSFPE,DSFPN,DSFPP,DSFSUS,DSNLI,DSRNVL,DSRPCH,DSSAD,DSSCG,DSSTC,EMPLOI,ESSAI,FILIR,IFCDD,JJCNT,JJESS1,JJESS2,JJESS4,MAJHA,METIER,MMCNT,MMESS1,MMESS2,MMESS4,MNTPEN,MOTAUG,MOTAUI,MTAUG,MTAUI,NBCSP,NICSP,NIVECH,NUMAPP,NUMDUE,NUMPCS,OTT,PEREMP,PPSAL,PRAUG,PRAUI,PREAVI,PREFF,PRPAY,PRVNP,QUALPE,RECAPE,REFCG,RETRAI,RNVESS,RVCNT,SAFBA,SENET,SITADM,SSFIL,TATR,TPNAB,TXACT,TXAID,TXEMP,TYPAGM,TYSUB,VALTF,VALTR,ZA364,ZA365,ZA368,ZA380,ZA406,ZA523,ZA554,ZA557,ZA626,ZA640,ZA650,ZA656,ZA700,ZA701,ZA750,ZA754,ZA755,ZA819,ZA820,ZA962,ZAA84,ZAA85,ZB071,ZB133,ZB193,ZB224,ZB330,ZB368,ZB369,ZB647,ZB648,ZB883,ZP895,ZQ183,ZQ188,ZQ272,ZQ764,ZREACT,ZT061,NUMPAC,PACMAT,NUMCNT,DATE_EFF,DATE_FIN,AACNT,AAESS4,ACDADM,ACDALC,ACDFNE,AFFS02,AIPAT,ALSMO,APARCE,AVNAA,AVNAL,AVNAN,AVNAV,AVNTIC,CADRE,CAMSA,CASAS,CATAFP,CBUD,CE,CFE,CFEAT,CFECV,CFEDC,CFEEM,CFEES,CFEMA,CFESF,CFEVE,CFEVI,CHTYPC,CLNC,CODCPN,CODETB,CODSTE,COEFF,COFRON,COMCNT,COMURB,CSCOMP,CSRTT,CSTAPA,CVCOLL,DICDD,DRPAI2,DSA277,DSA301,TUTEUR,NUMURS_PRT,SIREN_PRT,STATUT_PRT,CODAGE_INT,CODSOC_INT,IDPACMAT,ACT_ORG,BU_ORG,DSAUI,DERUSA,DSFINC,MAAFFP,
              null as DEBUT_PER_GENERATION_HP, 
              null as FIN_PER_GENERATION_HP
            from DIC_ADM_CONTRAT_HISTO where 
                NUMPAC = '''|| p_numpac || ''''
             || ' AND PACMAT ='''|| p_pacmat || ''''
             || ' AND numcnt ='''|| p_numcnt||'''' 
             || ' AND paiezad ='''|| p_paiezad||''''             
             || ' AND date_eff =   TO_DATE('''||p_date_eff ||''',''DD/MM/YYYY'')
               
                ORDER BY matric asc, date_eff asc' ;

FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement des cycles)','' );

/*****************************************************************************/
/******************** loadCyclesGroupByPacAndClasseHorOtt ********************/
/*****************************************************************************/
cpt:=1; lst_1:=type_List_arr();
  OPEN cur_1 FOR sql_1;
  LOOP
     FETCH cur_1 INTO cur_TgeRefDcy; EXIT WHEN cur_1%NOTFOUND;
      lst_1.extend;
      lst_1(cpt) :=cur_TgeRefDcy;
      cpt:=cpt+1;
  END LOOP;

FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement des horaires)','' );

/*****************************************************************/
/******************** loadCyclesHprGroupByPac ********************/
/*****************************************************************/
cpt:=1; lst_2:=type_List_arr_2();
  OPEN cur_2 FOR sql_2;
  LOOP
     FETCH cur_2 INTO cur_TgeRefhpr; EXIT WHEN cur_2%NOTFOUND;
    lst_2.extend;
    lst_2(cpt) :=cur_TgeRefhpr;
    cpt:=cpt+1;
  END LOOP;


/*****************************************************************/
/******************** getPopulationHistoContrat ********************/
/******************** chargerInfoElementMapDo ********************/
/*****************************************************************/
cpt:=1; lst_3:=type_List_arr_3();
  OPEN cur_3 FOR sql_3;
  LOOP
     FETCH cur_3 INTO cur_TgeRefmapdo; EXIT WHEN cur_3%NOTFOUND;
    lst_3.extend;
    lst_3(cpt) :=cur_TgeRefmapdo;
    cpt:=cpt+1;
  END LOOP;
FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement info contractuelle)','Chargement de toute la situation y compris horaire de présence, horaire de rémunération et type GTA ' );
/******************** chargerHistoContrat ********************/

cpt:=1; lst_4:=type_List_arr_4();
  OPEN cur_4 FOR sql_4;
  LOOP
     FETCH cur_4 INTO cur_dachtype; 
     EXIT WHEN cur_4%NOTFOUND;
    lst_4.extend;
    lst_4(cpt) :=cur_dachtype;
    lst_4(cpt).FIN_PER_GENERATION_HP := p_date_fin; 
    lst_4(cpt).DEBUT_PER_GENERATION_HP := p_date_deb; 
    cpt:=cpt+1;
  END LOOP;
  

 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Suppression  HP )','Suppression des anciens HP entre  '||p_date_deb ||' et '||p_date_fin );
  IF lst_4.COUNT >0 THEN
    delete from TGE_INCIDENTS_PAIE 
                  WHERE 
                  NUMPAC = p_numpac
                  AND PAIEZAD = p_PAIEZAD
                  AND TYPE_IP = 'T'
                  AND CODE_IP = 'HP'
                  AND DATE_EFFET  between p_date_deb AND p_date_fin;  -- sortie du boucle pour executer une seul fois
  END IF;
  
  lst_Situation:=SituationType_arr_2();
  arrCycleSituation:=type_List_arr();
  arrCycleSituation.extend;
    
    
  FOR k IN 1..lst_4.COUNT LOOP --K LOOP DACH
          lst_Situation.extend;
          
          /****** ajusterPeriodeSituation ******/
          IF (k=1 AND lst_4(k).DATE_EFF IS NOT NULL AND lst_4(k).DATE_EFF <p_date_deb) THEN 
              lst_4(k).DATE_EFF:=p_date_deb; --lst_4(cpt).DEBUT_PER_GENERATION_HP;
          END IF;  
   
          /***** build Situation *****/
          lst_Situation(k).numpac:=lst_4(k).NUMPAC;
          lst_Situation(k).Pacmat:=lst_4(k).Pacmat;
          lst_Situation(k).PaieZad:=lst_4(k).PaieZad;
          lst_Situation(k).DateDeb:=lst_4(k).DATE_EFF;
          lst_Situation(k).DateFin:=lst_4(k).FIN_PER_GENERATION_HP;
          
          --GET Donner specifier selon parametrage MAPDO
          --LOOP MAPDO
          FOR J IN 1..lst_3.COUNT LOOP --J LOOP
          
            --A996 / TYPE_GTA
            IF(lst_3(J).ELEMENT='A996' AND lst_3(J).NUMPAC=lst_4(k).NUMPAC) THEN
              lst_Situation(k).isGtaT1:=CASE WHEN getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k))='Z' THEN TRUE ELSE FALSE END;
            END IF; 
        
            -- Horaire Remu Presence
            --ZA819 / HORAIRE_REMUNERATION
            IF(lst_3(J).ELEMENT='A819') THEN
                    HoraireRemu := getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k));
                    
                    
            END IF;
            --ZA820 / HORAIRE_PRESENCE
            IF(lst_3(J).ELEMENT='A820') THEN
                    HorairePres := getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k));
                    
		           
            END IF;
             --horairePres/horaireRemu =>Code_classe_horaire_ott
            IF(lst_3.count=J) THEN 
              IF(horairePres IS NOT NULL) THEN
                lst_Situation(k).Code_classe_horaire_ott:=TO_NUMBER(horairePres);
              ELSE
              IF(horaireRemu IS NOT NULL) THEN
                lst_Situation(k).Code_classe_horaire_ott:=TO_NUMBER(horaireRemu);
              END IF;
              END IF;
            END IF;          
            
          END LOOP; --FIN J MAPDO LOOP 
          
    cpt:=1;     
    
     FOR M IN 1..lst_1.COUNT LOOP
       IF( lst_1(M).CODE_CLASSE_HORAIRE_OTT=lst_Situation(k).Code_classe_horaire_ott)THEN
          arrCycleSituation(cpt):=lst_1(M);
          cpt:=cpt+1;
       END IF;     
     END LOOP;
     
      cpt:=1; 
     arrCycleHprSituation:=type_List_arr_2();
     arrCycleHprSituation.extend;
     FOR M IN 1..lst_2.COUNT LOOP
       IF( lst_2(M).Code_hor_pres=lst_Situation(k).Code_classe_horaire_ott)THEN
          arrCycleHprSituation(cpt):=lst_2(M);
          cpt:=cpt+1;
       END IF;     
     END LOOP;



     END LOOP; --END K LOOP DACH
     
     
  --decomposerArrCycle_DCY_SituationEnTrancheAndCreateHP
  FOR k IN 1..lst_Situation.COUNT LOOP   
     
     IF(arrCycleSituation.COUNT>0) THEN
     FOR W IN 1..arrCycleSituation.COUNT LOOP
     /* La date de début du premier cycle d'une situation doit être égale à la date de début de la situation La date de
         fin du dernier cycle d'une situation doit être égale à la  date de fin de la situation*/
        IF(lst_Situation(k).datedeb <= arrCycleSituation(W).Date_fin AND lst_Situation(k).datefin >= arrCycleSituation(W).Date_debut) THEN
          dateDebTranchSitu:=null; dateFinTranchSitu:=null;
          
          --La date d'effet du cycle est antérieure à la date de début de la situation, On se met sur la date début de la situation
          IF(arrCycleSituation(W).Date_debut <= lst_Situation(k).datedeb) THEN
            dateDebTranchSitu:=lst_Situation(k).datedeb;
           ELSE
            dateDebTranchSitu:=arrCycleSituation(W).Date_debut;
          END IF;
          
          --La date de fin d'effet du cycle est postérieur à la date de fin de la situation, On se met sur la date de fin de la situation
          IF(arrCycleSituation(W).Date_fin >= lst_Situation(k).datefin) THEN
            dateFinTranchSitu:=lst_Situation(k).datefin;
           ELSE
            dateFinTranchSitu:=arrCycleSituation(W).Date_fin;
          END IF;
          
          dateEnCours:=dateDebTranchSitu;
		  FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Début insertion HP)',' ' );
		  
		  --LOOP INSERT TGE_INCIDENTS_PAIE
          WHILE (dateEnCours <= dateFinTranchSitu) LOOP
             numJourCanevas:=calculateNumJourCanevas( arrCycleSituation(W), dateEnCours );
             nbreHeures:=getValOfCycle('NOMBRE_HEURE_'||numJourCanevas,arrCycleSituation(W));
             arrHoraireParJour(TO_CHAR(dateEnCours,'dd/mm/yyyy')):=nbreHeures;
             -- Insertion des HP
             insertIncidentPaieHorsAbs( nbreHeures ,dateEnCours, lst_Situation(k),p_login );
             dateEnCours:=dateEnCours+1;
          END LOOP; --LOOP WHILE   
          
          FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Fin insertion HP)',' ' );
          
        END IF; --FIN decomposerArrCycleDcySituationEnTrancheAndCreateHP
         
  /*******************************************************/
  
    --decomposerArrCycle_Hpr_SituationEnTrancheAndCreateHP
 
   IF(arrCycleSituation.count=0) THEN
    FOR W IN 1..arrCycleHprSituation.COUNT LOOP  
      /* La date de début du premier cycle d'une situation doit être égale à la date de début de la situation La date de
         fin du dernier cycle d'une situation doit être égale à la  date de fin de la situation*/
        IF(lst_Situation(k).datedeb <= arrCycleHprSituation(W).Date_fin AND lst_Situation(k).datefin >= arrCycleHprSituation(W).Date_debut) THEN
          dateDebTranchSitu:=null; dateFinTranchSitu:=null;
          
          --La date d'effet du cycle est antérieure à la date de début de la situation, On se met sur la date début de la situation
          IF(arrCycleHprSituation(W).Date_debut <= lst_Situation(k).datedeb) THEN
            dateDebTranchSitu:=lst_Situation(k).datedeb;
           ELSE
            dateDebTranchSitu:=arrCycleHprSituation(W).Date_debut;
          END IF;
          
          --La date de fin d'effet du cycle est postérieur à la date de fin de la situation, On se met sur la date de fin de la situation
          IF(arrCycleHprSituation(W).Date_fin >= lst_Situation(k).datefin) THEN
            dateFinTranchSitu:=lst_Situation(k).datefin;
           ELSE
            dateFinTranchSitu:=arrCycleHprSituation(W).Date_fin;
          END IF;
          
          dateEnCours:=dateDebTranchSitu;
          
          --LOOP INSERT TGE_INCIDENTS_PAIE 
          WHILE (dateEnCours <= dateFinTranchSitu) LOOP
             jourSemaine:=calculateNomJourCanevas( arrCycleHprSituation(W), dateEnCours );
             nbreHeures:=getHprHoursNbre(numJourCanevas,arrCycleHprSituation(W));
             arrHoraireParJour(TO_CHAR(dateEnCours,'dd/mm/yyyy')):=nbreHeures;
             -- Insertion des HP
             insertIncidentPaieHorsAbs( nbreHeures ,dateEnCours, lst_Situation(k), p_login );
             dateEnCours:=dateEnCours+1;
          END LOOP; --LOOP WHILE TGE_INCIDENTS_PAIE
 
        END IF; -- END IF INTO THE LOOP
    END LOOP; --FIN decomposerArrCycleHprSituationEnTrancheAndCreateHP
  END IF; --END IF arrCycleSituation vide
  END LOOP; --END LOOP parcour situation
  END IF;
  END LOOP;  --END LOOP Situation génerer
    

 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de recalcul des HP pour la situation ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||',date_eff : '||p_date_eff||')');
 
	EXCEPTION
 	WHEN others THEN
  	err_code := SQLCODE;
 	err_msg  := SQLERRM;
 	FSED.FSED_ERREUR( 147 , 'Calc_HP (Erreur) ' , 'Erreur est survenue lors du recalcul des HP pour la situation  ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||',date_eff : '||p_date_eff||') ' , err_code||'-'||err_msg );


 END;

END CALC_HP;
##
PURGE_HISTO_DIF_FSED
=SQL=
create or replace PROCEDURE PURGE_HISTO_DIF_FSED(
    p_id     IN NUMBER,
    P_NUMPAC IN VARCHAR2,
    P_PERIODEENCOURS IN TGE_REF_PAC.PERIODEENCOURS%type,
    P_DEB_RETRO IN  TGE_REF_PAC.DEB_RETRO%type,
    P_DEB_HISTO_RETRO IN TGE_REF_PAC.DEB_HISTO_RETRO%type,
    P_NB_MOIS_RETRO IN TGE_REF_PAC.NB_MOIS_RETRO%type,
    P_PERIDOE_HISTO_LIMITE IN TGE_REF_PAC.PERIODEENCOURS%type)
AS
  P_REQ     VARCHAR2(2000);
  w_isRetro NUMBER ;
  w_periode_partition TGE_REF_PAC.PERIODEENCOURS%type;
  w_subpartition_0 VARCHAR2(20);
  w_subpartition VARCHAR2(20);
  w_subpartition_del VARCHAR2(20);
BEGIN

  IF P_DEB_RETRO IS NOT NULL AND to_date(P_PERIODEENCOURS,'YYYYMM')>=to_date(P_DEB_HISTO_RETRO,'YYYYMM') THEN
      select to_char(ADD_MONTHS(TO_DATE(P_PERIODEENCOURS,'yyyymm'),1),'yyyymm') into w_periode_partition from dual;
     FSED.FSED_AVANCEMENT_PLSQL(p_id,'Partitions des HISTO (DEB CREAT PARTITION DIF_FSED_HIST_RETRO)','Début Création des partitions  de la table DIF_FSED_HIST_RETRO avant purge');
     
  IF is_number(P_NUMPAC)IS NOT NULL THEN 
     w_subpartition_0 := '"'||P_NUMPAC||'_000000"';
     w_subpartition :='"'||P_NUMPAC||'_'||P_PERIODEENCOURS||'"';
  ELSE
     w_subpartition_0 :=P_NUMPAC;
     w_subpartition :=P_NUMPAC||'_'||P_PERIODEENCOURS;
  END IF; 
    
    BEGIN     
      --p_req := 'Alter TABLE DIF_FSED_HISTO add partition NUMPAC_'||P_NUMPAC||' values ('''||P_NUMPAC||''') UPDATE INDEXES';
      p_req := 'Alter TABLE DIF_FSED_HISTO add partition NUMPAC_'||P_NUMPAC||' VALUES('''||P_NUMPAC||''')(SUBPARTITION '||w_subpartition_0||'  VALUES LESS THAN(''000000'')) UPDATE INDEXES ';
      EXECUTE_IMMEDIATE_STRING( p_req,0);
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'CREATION PARTITION DIF_FSED_HIST_RETRO','Création partition NUMPAC_'||P_NUMPAC||'sur la table DIF_FSED_HIST_RETRO ');
    EXCEPTION
    WHEN OTHERS THEN
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'CREATION PARTITION DIF_FSED_HIST_RETRO','Partition NUMPAC_'||P_NUMPAC||'de la table DIF_FSED_HIST_RETRO existe');
    END ;
    BEGIN
      --p_req := 'ALTER TABLE DIF_FSED_HISTO  MODIFY PARTITION NUMPAC_'||P_NUMPAC||' ADD SUBPARTITION '||w_subpartition||' VALUES ('''||P_PERIODEENCOURS||''') UPDATE INDEXES';
      p_req := 'ALTER TABLE DIF_FSED_HISTO  MODIFY PARTITION NUMPAC_'||P_NUMPAC||' ADD SUBPARTITION '||w_subpartition||' VALUES LESS THAN ('''||w_periode_partition||''') UPDATE INDEXES';
      EXECUTE_IMMEDIATE_STRING( p_req,0);
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'CREATION SOUS PARTITION DIF_FSED_HIST_RETRO','Création SOUS partition PERIODE_'||P_PERIODEENCOURS||' de NUMPAC_'||P_NUMPAC||'sur la table DIF_FSED_HIST_RETRO ');
    EXCEPTION
    WHEN OTHERS THEN
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'CREATION PARTITION DIF_FSED_HIST_RETRO','SOUS partition PERIODE_'||P_PERIODEENCOURS||' de NUMPAC_'||P_NUMPAC||'sur la table DIF_FSED_HIST_RETRO existe ');
    END ;
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'Partitions des HISTO (Fin CREAT PARTITION DIF_FSED_HIST_RETRO)','Fin Créatin des partitions  de la table DIF_FSED_HIST_RETRO avant purge');
  
    --purge de DIF_FSED_HIST_RETRO  
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'PURGE_HISTO_DIF_FSED (DEBUT Supp DIF_FSED_HIST_RETRO)','DEBUT Purge de la table DIF_FSED_HIST_RETRO  pour les periodes inférieurs à '||P_PERIDOE_HISTO_LIMITE);
    FOR K IN
    (SELECT DISTINCT periode
    FROM DIF_FSED_HISTO
    WHERE to_date(periode,'YYYYMM') <add_months(to_date(P_PERIODEENCOURS,'yyyymm'),-1*P_NB_MOIS_RETRO)
    AND NUMPAC                      =P_NUMPAC
    )
    LOOP
      IF is_number(P_NUMPAC)IS NOT NULL THEN 
        w_subpartition_del :='"'||P_NUMPAC||'_'||K.PERIODE||'"';
      ELSE
        w_subpartition_del :=P_NUMPAC||'_'||K.PERIODE;
      END IF;
      p_req := 'ALTER TABLE DIF_FSED_HISTO TRUNCATE SUBPARTITION '||w_subpartition_del||' DROP STORAGE';
      EXECUTE_IMMEDIATE_STRING( p_req,0);
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'PURGE_HISTO_DIF_FSED ( Supp Sous partition DIF_FSED_HIST_RETRO)','suppression sous partition '||P_NUMPAC||'_'||K.PERIODE||' de DIF_FSED_HIST_RETRO ');
    END LOOP;
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'PURGE_HISTO_DIF_FSED (FIN Supp DIF_FSED_HIST_RETRO)','FIN Purge de la table DIF_FSED_HIST_RETRO  pour les periodes inférieurs à '||P_PERIDOE_HISTO_LIMITE);
    --annule
    SELECT COUNT(*)
    INTO w_isRetro
    FROM DIF_FSED_HISTO
    WHERE numpac =P_NUMPAC
    AND to_date(periode,'yyyymm') >=to_date(P_DEB_HISTO_RETRO,'YYYYMM')
    AND to_date(periode,'yyyymm') >=add_months(to_date(P_PERIODEENCOURS,'yyyymm'),-1*P_NB_MOIS_RETRO);
    IF w_isRetro >0 THEN
      DELETE
      FROM DIF_FSED_HISTO retro
      WHERE retro.numpac=p_numpac
      AND EXISTS
        (SELECT 1
        FROM DIF_FSED z
        WHERE z.paiezad                =retro.paiezad
        AND z.pacmat                   =retro.pacmat
        AND z.numpac                   =retro.numpac
        AND z.elem                     =retro.elem
        AND z.occ                      =retro.occ
        AND TO_CHAR(z.dteffet,'yyyymm')=retro.periode
        AND z.ID_TRT                   =
          (SELECT MAX (dif.id_trt)
          FROM TGE_SCHEMA_PRODUCTION a,
            GAP_TRT b,
            DIF_FSED dif,
            GAP_TRT_SUIVI c,
            GAP_TRT_LISTE_MAT e,
            DIC_ADM_CONTRAT_SITU d
          WHERE a.numpac                 =p_numpac
          AND a.TYPE_PAIE               IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
          AND a.numpac                   =b.numpac
          AND a.modele                   =b.modele
          AND a.nature                   =b.nature
          AND a.numpac                   =dif.numpac
          AND b.id_trt                   =c.id_trt
          AND b.id_trt                   =dif.id_trt
          AND c.statut                  IN ('PA','EX','DEMSEA')
          AND NVL(c.code_retour_zpp,'00')='00'
          AND b.PERIODE_PAIE             = p_PERIODEENCOURS
          AND b.numero_echange          <>'0000'
          AND e.id_trt                   =b.id_trt
          AND d.numpac                   =e.numpac
          AND d.pacmat                   =e.pacmat
          AND z.numpac                   =e.numpac
          AND z.PAIEZAD                  =d.paiezad
          AND d.pacmat                   =dif.pacmat
          AND d.PAIEZAD                  =dif.paiezad
          AND dif.CODEOP                !='S'
          )
        );
      --remplace
      MERGE INTO DIF_FSED_HISTO T USING
      (SELECT TO_CHAR(z.dteffet,'yyyymm') AS PERIODE,
        NUMPAC ,
        CLE ,
        PACMAT ,
        PAIEZAD ,
        ELEM ,
        OCC ,
        VALEUR ,
        CODEOP ,
        TYPE_DONNEE ,
        DTEFFET
      FROM DIF_FSED z
      WHERE NUMPAC   = p_numpac
      AND z.dteffet >=to_date(P_DEB_HISTO_RETRO,'YYYYMM')
      AND z.dteffet >=add_months(to_date(P_PERIODEENCOURS,'yyyymm'),-1*P_NB_MOIS_RETRO)
      AND z.ID_TRT   =
        (SELECT MAX (dif.id_trt)
        FROM TGE_SCHEMA_PRODUCTION a,
          GAP_TRT b,
          DIF_FSED dif,
          GAP_TRT_SUIVI c,
          GAP_TRT_LISTE_MAT e,
          DIC_ADM_CONTRAT_SITU d
        WHERE a.numpac                 =p_numpac
        AND a.TYPE_PAIE               IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
        AND a.numpac                   =b.numpac
        AND a.modele                   =b.modele
        AND a.nature                   =b.nature
        AND a.numpac                   =dif.numpac
        AND b.id_trt                   =c.id_trt
        AND b.id_trt                   =dif.id_trt
        AND c.statut                  IN ('PA','EX','DEMSEA')
        AND NVL(c.code_retour_zpp,'00')='00'
        AND b.PERIODE_PAIE             = p_PERIODEENCOURS
        AND b.numero_echange          <>'0000'
        AND e.id_trt                   =b.id_trt
        AND d.numpac                   =e.numpac
        AND d.pacmat                   =e.pacmat
        AND z.numpac                   =e.numpac
        AND z.PAIEZAD                  =d.paiezad
        AND d.pacmat                   =dif.pacmat
        AND d.PAIEZAD                  =dif.paiezad
        AND dif.CODEOP                !='S'
        )
      )i ON (i.PERIODE= T.PERIODE AND i.NUMPAC=T.NUMPAC AND i.PACMAT=T.PACMAT AND i.PAIEZAD=T.PAIEZAD AND i.ELEM=T.ELEM AND i.OCC=T.OCC)
    WHEN NOT MATCHED THEN
      INSERT
        (
          PERIODE,
          NUMPAC,
          CLE,
          PACMAT,
          PAIEZAD,
          ELEM,
          OCC,
          VALEUR,
          CODEOP,
          TYPE_DONNEE,
          DTEFFET
        )
        VALUES
        (
          i.PERIODE,
          i.NUMPAC,
          i.CLE,
          i.PACMAT,
          i.PAIEZAD,
          i.ELEM,
          i.OCC,
          i.VALEUR,
          i.CODEOP,
          i.TYPE_DONNEE,
          i.DTEFFET
        );
        
        
        
    --  correction de la periode intermediare par un annule et remplace 
 -- annule 
 
 DELETE
 FROM DIF_FSED_HISTO retro
 WHERE retro.numpac=p_numpac
 AND EXISTS
 (SELECT 1
 FROM dif_fsed_partieRETRO r ,GAP_TRT_MOIS_RETRO  g
 WHERE r.paiezad                =retro.paiezad
 AND r.pacmat                   =retro.pacmat
 AND r.numpac                   =retro.numpac
 AND r.elem                     =retro.elem
 AND r.occ                      =retro.occ
 AND g.periode_retro            =retro.periode
 AND g.id_trt                   =r.id_trt
 and g.pacmat                   =retro.pacmat
 and g.numpac                   =retro.numpac
 and g.id_trt                   =p_id
 );
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'correction de la periode interm/DEL ','');
 --remplace 
 MERGE INTO DIF_FSED_HISTO T USING
 (SELECT r.PERIODE AS PERIODE,
 r.NUMPAC ,
 r.CLE ,
 r.PACMAT ,
 r.PAIEZAD ,
 r.ELEM ,
 r.OCC ,
 r.VALEUR ,
 r.CODEOP ,
 r.TYPE_DONNEE ,
 r.DTEFFET
 FROM dif_fsed_partieRETRO r ,GAP_TRT_MOIS_RETRO g
 WHERE r.NUMPAC   = p_numpac
 AND g.id_trt                   =r.id_trt
 and g.id_trt                   =p_id
 and g.pacmat                   =r.pacmat
 and g.numpac                   =r.numpac
 and g.periode_retro            =r.periode)
 i ON (i.PERIODE= T.PERIODE AND i.NUMPAC=T.NUMPAC AND i.PACMAT=T.PACMAT AND i.PAIEZAD=T.PAIEZAD AND i.ELEM=T.ELEM AND i.OCC=T.OCC)
 WHEN NOT MATCHED THEN
 INSERT
 (
 PERIODE,
 NUMPAC,
 CLE,
 PACMAT,
 PAIEZAD,
 ELEM,
 OCC,
 VALEUR,
 CODEOP,
 TYPE_DONNEE,
 DTEFFET
 )
 VALUES
 (
 i.PERIODE,
 i.NUMPAC,
 i.CLE,
 i.PACMAT,
 i.PAIEZAD,
 i.ELEM,
 i.OCC,
 i.VALEUR,
 i.CODEOP,
 i.TYPE_DONNEE,
 i.DTEFFET
 );
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'correction de la periode interm/MERGE ','');
    END IF;
    --historisation
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'PURGE_HISTO_DIF_FSED (Debut INSERT DIF_FSED_HIST_RETRO)','Remplissage  de la table DIF_FSED_HIST_RETRO avant purge');
    
    MERGE INTO DIF_FSED_HISTO T USING
    (SELECT p_PERIODEENCOURS AS PERIODE,
      NUMPAC ,
      CLE ,
      PACMAT ,
      PAIEZAD ,
      ELEM ,
      OCC ,
      VALEUR ,
      CODEOP ,
      TYPE_DONNEE ,
      DTEFFET
    FROM DIF_FSED z
    WHERE NUMPAC = p_numpac
    AND ID_TRT   =
      (SELECT MAX (dif.id_trt)
      FROM TGE_SCHEMA_PRODUCTION a,
        GAP_TRT b,
        DIF_FSED dif,
        GAP_TRT_SUIVI c,
        GAP_TRT_LISTE_MAT e,
        DIC_ADM_CONTRAT_SITU d
      WHERE a.numpac                 =p_numpac
      AND a.TYPE_PAIE               IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
      AND a.numpac                   =b.numpac
      AND a.modele                   =b.modele
      AND a.nature                   =b.nature
      AND a.numpac                   =dif.numpac
      AND b.id_trt                   =c.id_trt
      AND b.id_trt                   =dif.id_trt
      AND c.statut                  IN ('PA','EX','DEMSEA')
      AND NVL(c.code_retour_zpp,'00')='00'
      AND b.PERIODE_PAIE             = p_PERIODEENCOURS
      AND b.numero_echange          <>'0000'
      AND e.id_trt                   =b.id_trt
      AND d.numpac                   =e.numpac
      AND d.pacmat                   =e.pacmat
      AND z.numpac                   =e.numpac
      AND z.PAIEZAD                  =d.paiezad
      AND d.pacmat                   =dif.pacmat
      AND d.PAIEZAD                  =dif.paiezad
      AND dif.CODEOP                !='S'
      )
    )i ON (i.PERIODE= T.PERIODE AND i.NUMPAC=T.NUMPAC AND i.CLE=T.CLE AND i.PACMAT=T.PACMAT AND i.PAIEZAD=T.PAIEZAD AND i.ELEM=T.ELEM AND i.OCC=T.OCC)
  WHEN NOT MATCHED THEN
    INSERT
      (
        PERIODE,
        NUMPAC,
        CLE,
        PACMAT,
        PAIEZAD,
        ELEM,
        OCC,
        VALEUR,
        CODEOP,
        TYPE_DONNEE,
        DTEFFET
      )
      VALUES
      (
        i.PERIODE,
        i.NUMPAC,
        i.CLE,
        i.PACMAT,
        i.PAIEZAD,
        i.ELEM,
        i.OCC,
        i.VALEUR,
        i.CODEOP,
        i.TYPE_DONNEE,
        i.DTEFFET
      );
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'PURGE_HISTO_DIF_FSED (Fin INSERT DIF_FSED_HIST_RETRO)','Fin remplissage  de la table DIF_FSED_HIST_RETRO ');
  END IF;
  
EXCEPTION
WHEN OTHERS THEN
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'PURGE_HISTO_DIF_FSED  ', 'Une erreur est survenue lors de l historisation Rétro de DIF_FSED . Veuillez consulter la table TGE_FSED_ERREUR.');
  FSED.FSED_ERREUR(p_id,'PURGE_HISTO_DIF_FSED',P_NUMPAC,SQLCODE||'-'||SQLERRM);
  raise;
END PURGE_HISTO_DIF_FSED;
##
TGE_CLOTURE
=SQL=
create or replace PROCEDURE TGE_CLOTURE ( p_id in number, P_NUMPAC IN VARCHAR2 ) AS /********************************************************************************
 Version     : V5.05.000
 *********************************************************************************/
 P_PERIODEENCOURS TGE_REF_PAC.PERIODEENCOURS%type;
 p_dtdebMois varchar2(8);
 p_finMois varchar2(8);
 p_histoIP varchar2(1);
 
 P_DEB_RETRO TGE_REF_PAC.DEB_RETRO%type;
 P_DEB_HISTO_RETRO TGE_REF_PAC.DEB_HISTO_RETRO%type;
 P_NB_MOIS_RETRO TGE_REF_PAC.NB_MOIS_RETRO%type;
 P_PERIDOE_HISTO_LIMITE TGE_REF_PAC.PERIODEENCOURS%type;
 w_per   VARCHAR2(6);
 w_req   CLOB;
 isRetro number :=0;
 BEGIN
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin)','Début de la clôture du numpac  '||P_NUMPAC);
 
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Recup Periode + infos Rétro)','Récupération de la période en cours,date début Rétro, date début historisation Rétro et nombre de mois Rétro à partir de TGE_REF_PAC pour le numpac : '||P_NUMPAC);
 select PERIODEENCOURS ,DEB_RETRO,DEB_HISTO_RETRO,NB_MOIS_RETRO ,to_char( add_months(to_date(PERIODEENCOURS,'yyyymm'),(-1*nvl(NB_MOIS_RETRO,1))+1),'YYYYMM') PERIDOE_HISTO_LIMITE
 into P_PERIODEENCOURS,P_DEB_RETRO,P_DEB_HISTO_RETRO,P_NB_MOIS_RETRO ,P_PERIDOE_HISTO_LIMITE
 from TGE_REF_PAC where numpac=p_numpac;
 
 IF P_DEB_RETRO is not null  AND to_date(P_PERIODEENCOURS,'YYYYMM')>=to_date(P_DEB_HISTO_RETRO,'YYYYMM') THEN
 w_per := P_PERIDOE_HISTO_LIMITE;
 isRetro :=1;
 ELSE
 w_per := P_PERIODEENCOURS;
 isRetro:=0;
 END IF;
 
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant lecture REF PER)','Récupération de la date de début et de fin du mois pour le numpac '||P_NUMPAC || '  et la periode '|| p_PERIODEENCOURS );
 select DATE_DEBUT_MOIS,DATE_FIN_MOIS into p_dtdebMois,p_finMois from TGE_REF_PER where numpac=p_numpac and periodeencours=p_PERIODEENCOURS;
 --Purge et Historisation de dif_FSED
 
 BEGIN
 w_req :='Create TABLE DIF_FSED_HISTO_'||P_PERIODEENCOURS||' as select * from DIF_FSED_HISTO '  ;
 execute_immediate_string (w_req,0);
 EXCEPTION
 WHEN OTHERS THEN
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV DIF_FSED_HISTO) ','la table DIF_FSED_HISTO_'||P_PERIODEENCOURS||' existe déja ' );
 END ;
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Deb PURGE_HISTO_DIF_FSED)','Début PURGE_HISTO_DIF_FSED pour le numpac  '||P_NUMPAC );
 PURGE_HISTO_DIF_FSED ( p_id, P_NUMPAC,P_PERIODEENCOURS,P_DEB_RETRO,P_DEB_HISTO_RETRO,P_NB_MOIS_RETRO,P_PERIDOE_HISTO_LIMITE);
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Fin PURGE_HISTO_DIF_FSED)','Fin PURGE_HISTO_DIF_FSED pour le numpac  '||P_NUMPAC );
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV DIF_FSED) ',' début sauvegarde DIF_FSED'  );
 BEGIN
 w_req :='Create TABLE DIF_FSED_'||P_PERIODEENCOURS||' as select * from DIF_FSED '  ;
 execute_immediate_string (w_req,0);
 EXCEPTION 
   WHEN OTHERS THEN
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV DIF_FSED) ','la table DIF_FSED_'||P_PERIODEENCOURS||' existe déja ' );
 END ;


 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (DEBUT Supp DIF_FSED)','DEBUT Purge de la table DIF_FSED ');
 FOR C IN
 (SELECT DISTINCT to_char(id_trt) as trt FROM DIF_FSED WHERE NUMPAC =p_numpac
 )
 LOOP
 w_req :='ALTER TABLE DIF_FSED DROP PARTITION ID_'||C.trt ;
 BEGIN
 execute_immediate_string (w_req,0);
 EXCEPTION 
 when others then 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE ( Supp partition DIF_FSED)','ERREUR lors de la suppresstion partition ID_'||C.trt||' de DIF_FSED '||SQLCODE||'-'||SQLERRM);
 end ;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE ( Supp partition DIF_FSED)','suppression partition ID_'||C.trt||' de DIF_FSED ');
 END LOOP;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (FIN Supp DIF_FSED)','FIN Purge de la table DIF_FSED');
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant insert GAP TRT)','Préparation du traitement GAP_TRT pour le  '||P_NUMPAC);
 --Ajout  dans GAP_TRT
 insert into GAP_TRT (ID_TRT,NUMPAC,PERIODE_PAIE,NUMERO_ECHANGE,MODELE,NATURE,DATE_DEBUT_PAIE,DATE_FIN_PAIE,WORKFLOW_ID,DATE_PREVUE_TRT,DATE_PLANIF_TRT,DATE_DEBUT_TRT,INFO)
 values
 (p_id,P_NUMPAC,p_PERIODEENCOURS,'0000','ALP','CLOTURE',p_dtdebMois,p_finMois,'TGEPAY'||P_NUMPAC||'PACGXP'||p_PERIODEENCOURS||'0000',sysdate,sysdate,sysdate,'CLOTURE');
 
 --GAP_TRT_SUIVI
 FSED.insert_gap_trt_suivi(p_id,'PREPA_CLOTURE',null,'BATCH','CL');
 --BEGIN DIT 37805
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin Supp RELIQ)',' Début de la purge des tables  TGE_RELIQ_INCIDENTS_PAIE, TGE_RELIQ_DONNEES_PAIE, TGE_RELIQ_ELEMENTS_PAIE, TGE_RELIQ_IMPUTATIONS,TGE_RELIQ_PACMAT_TORESEND pour le numpac  '||P_NUMPAC);
 -- les tables TGE_RELIQ_* sont vidées pour le pac en question
 DELETE FROM TGE_RELIQ_INCIDENTS_PAIE  WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_DONNEES_PAIE    WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_ELEMENTS_PAIE   WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_IMPUTATIONS     WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_PACMAT_TORESEND WHERE NUMPAC = P_NUMPAC;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (End Supp RELIQ)','Fin de de la purge des tables RELIQ pour le  numpac : '||P_NUMPAC);
 --FIN  DIT 37805
 
 -- Mise à jour secupacmat
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Update SECUPACMAT)','Deuxième période de recyclage : Mise à jour de la table SECUPACMAT pour le numpac : '||p_numpac);
 update SECUPACMAT set PERIODE_RECYCLAGE=2 where numpac=p_numpac;
 FSED.insert_gap_trt_suivi(p_id,'PERIODE_RECYCLAGE_2',null,'BATCH','CL');
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant insert LISTE MAT)','Préparation de la liste des matricules');
 -- RSI  Le 20/02/2015 DIT 41197:EVOL: Ajout du type de paie 'GAPSELMA'
 insert into GAP_TRT_LISTE_MAT select distinct  p_id,b.numpac,b.pacmat,null from (
 select distinct c.id_trt
 from TGE_SCHEMA_PRODUCTION a,GAP_TRT b,GAP_TRT_SUIVI c  where a.numpac=p_numpac and a.TYPE_PAIE in ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 and a.numpac=b.numpac and a.modele=b.modele and a.nature=b.nature and b.id_trt=c.id_trt and c.statut in ('PA','EX','DEMSEA') AND NVL(c.code_retour_zpp,'00')='00' and b.PERIODE_PAIE = p_PERIODEENCOURS  and b.numero_echange<>'0000') a, GAP_TRT_LISTE_MAT b where a.id_trt=b.id_trt
 and not exists (select c.numpac,c.pacmat from GAP_RECYCL_MATRIC c where c.numpac=b.numpac and c.pacmat=b.pacmat ) ;
 -- Le 25/04/2015 ajout des mal recyclés (colonne "TRAITE"='R')
 insert into GAP_TRT_LISTE_MAT select distinct  p_id,b.numpac,b.pacmat,'R' from (
 select distinct c.id_trt
 from TGE_SCHEMA_PRODUCTION a,GAP_TRT b,GAP_TRT_SUIVI c  where a.numpac=p_numpac and a.TYPE_PAIE in ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 and a.numpac=b.numpac and a.modele=b.modele and a.nature=b.nature and b.id_trt=c.id_trt and c.statut in ('PA','EX','DEMSEA') AND NVL(c.code_retour_zpp,'00')='00' and b.PERIODE_PAIE = p_PERIODEENCOURS  and b.numero_echange<>'0000') a, GAP_TRT_LISTE_MAT b where a.id_trt=b.id_trt
 and exists (select c.numpac,c.pacmat from GAP_RECYCL_MATRIC c where c.numpac=b.numpac and c.pacmat=b.pacmat ) ;
 -- photos
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant génération photo)','Début de la génération de la photo pour le numpac '||P_NUMPAC||'  à la date '||p_dtdebMois);
 tge_generation_photo(p_id,p_numpac,p_dtdebMois);
 FSED.insert_gap_trt_suivi(p_id,'PHOTO',null,'BATCH','CL');
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (après génération photo)','Fin de la génération de la photo pour le numpac '||P_NUMPAC||'  à la date '||p_dtdebMois);
 
 
 insert into bypass_trg_recycl_on_session(date_event, message) values (sysdate, 'Cloture en cours pour le NUMPAC : ' || p_numpac);
 
 -- lecture de la valeur de HISTO_IP dans TGE_REF_PAC
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant lecture REF PER)','Récupération de la valeur de HISTO_IP dans TGE_REF_PAC pour le numpac '||P_NUMPAC );
 select nvl(HISTO_IP,'N') into p_histoIP from TGE_REF_PAC where NUMPAC = p_numpac;
 
 -- purge saisies quai
 FSED.insert_gap_trt_suivi(p_id,'PURGE_QUAIS',null,'BATCH','CL');
 delete from TGE_IMPUTATIONS where numpac=p_numpac and to_date(PERIODE,'YYYYMM')<=to_date(p_PERIODEENCOURS,'YYYYMM') and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt=p_id
 and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null );
 
 IF p_histoIP = 'N' THEN
 
 w_req :='DELETE FROM TGE_INCIDENTS_PAIE z WHERE z.numpac='''||p_numpac||''' AND  ';
 if isRetro=1 then
 w_req := w_req || ' ( z.PERIODE <greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
 w_req := w_req || ' ( z.PERIODE           <=to_date('''||w_per||''',''yyyymm'')';
 end if;
 w_req := w_req||')'||' AND (z.numpac,z.paiezad) IN (SELECT DISTINCT b.numpac,
 d.paiezad FROM GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d,TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE b.id_trt ='||p_id||' AND d.numpac =b.numpac AND d.pacmat =b.pacmat AND d.numpac  =t.numpac AND d.pacmat  =t.pacmat
 AND d.paiezad   =t.paiezad AND ';
 if isRetro=1 then
 w_req := w_req || ' to_date(t.MOIS_PAIE,''YYYYMM'') <= greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
  w_req := w_req ||' to_date(t.MOIS_PAIE,''YYYYMM'') = to_date('''||p_PERIODEENCOURS||''',''YYYYMM'')';
 end if;
 w_req := w_req ||' AND (z.date_effet <= t.FIN_PERIODE_RECUEIL OR z.TYPE_IP       = ''T'')AND b.traite      IS NULL)';
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge incidents )',w_req);
 execute_immediate_string (w_req,0);
 if isRetro=1 then
 update TGE_INCIDENTS_PAIE z
 set    ACTION_RETRO='H',ACTION_RETRO_DATE=null
 WHERE  z.numpac           =p_numpac
 AND z.PERIODE >to_date(P_PERIDOE_HISTO_LIMITE,'yyyymm')
 AND z.PERIODE<=to_date(p_PERIODEENCOURS,'yyyymm')
 AND (z.numpac,z.paiezad) IN
 (SELECT DISTINCT b.numpac,
 d.paiezad
 FROM GAP_TRT_LISTE_MAT b,
 DIC_ADM_CONTRAT_SITU d,
 TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE b.id_trt     =p_id
 AND d.numpac       =b.numpac
 AND d.pacmat       =b.pacmat
 AND d.numpac       =t.numpac
 AND d.pacmat       =t.pacmat
 AND d.paiezad      =t.paiezad
 AND to_date(t.MOIS_PAIE,'yyyymm') = to_date(p_PERIODEENCOURS,'yyyymm')
 AND (z.date_effet <= t.FIN_PERIODE_RECUEIL
 OR z.TYPE_IP       = 'T')
 AND b.traite      IS NULL
 );
 end if;
 END IF;
 
 w_req :='delete from TGE_DONNEES_PAIE where numpac='''||p_numpac||''' and ' ;
 if isRetro=1 then
 w_req := w_req || '( to_date(PERIODE,''YYYYMM'') < greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
 w_req := w_req ||' (  to_date(PERIODE,''YYYYMM'') <= to_date('''||p_PERIODEENCOURS||''',''YYYYMM'')';
 end if;
 w_req := w_req ||') and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt='||p_id||
 ' and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null)';
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge donnes )',w_req);
 execute_immediate_string (w_req,0);
 if isRetro=1 then
 update TGE_DONNEES_PAIE
 set    ACTION_RETRO ='H',
 ACTION_RETRO_DATE =null
 where numpac=p_numpac 
 and to_date(PERIODE,'YYYYMM')>to_date(P_PERIDOE_HISTO_LIMITE,'yyyymm') 
 AND to_date(PERIODE,'YYYYMM')<=to_date(p_PERIODEENCOURS,'yyyymm')
 and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt=p_id
 and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null);
 end if;
 w_req :='delete from TGE_ELEMENTS_PAIE where numpac='''||p_numpac||''' and  ' ;
 if isRetro=1 then
 w_req := w_req || '( to_date(PERIODE,''YYYYMM'') < greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
 w_req := w_req ||' (  to_date(PERIODE,''YYYYMM'') <= to_date('''||p_PERIODEENCOURS||''',''YYYYMM'')';
 end if;
 w_req := w_req ||')  and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt='||p_id||
 ' and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null )';
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge elements )',w_req);
 execute_immediate_string (w_req,0);
 if isRetro=1 then
 update TGE_ELEMENTS_PAIE
 set    ACTION_RETRO ='H',
 ACTION_RETRO_DATE =null
 where numpac=p_numpac 
 and to_date(PERIODE,'YYYYMM')>to_date(P_PERIDOE_HISTO_LIMITE,'yyyymm') 
 AND to_date(PERIODE,'YYYYMM')<=to_date(p_PERIODEENCOURS,'yyyymm')
 and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt=p_id
 and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null);
 END IF;
 
 --Nettoyage des annulations de périodes d'emploi si la suppression a été faite avant le dernier passage de paie 

 delete from DELETED_PAIEZAD z where numpac=p_numpac AND DATE_SUPPRESSION <
 ( SELECT max (b.DATE_DEBUT_TRT)
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c, GAP_TRT_LISTE_MAT e
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 and e.id_trt=b.id_trt  
 AND z.pacmat       =e.pacmat
 AND z.numpac       =e.numpac
 ) ; 
 -- purge saisies quai des matricules mal recyclés
 FSED.insert_gap_trt_suivi(p_id,'PURGE_QUAIS_RECY',null,'BATCH','CL');
 delete from TGE_IMPUTATIONS z where numpac=p_numpac AND to_date(date_maj,'yyyymmddHH24MI')<
 
 ( SELECT max (b.DATE_DEBUT_TRT)
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c, GAP_TRT_LISTE_MAT e, DIC_ADM_CONTRAT_SITU d
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 and e.id_trt=b.id_trt
 AND EXISTS
 (SELECT f.numpac,
 f.pacmat
 FROM GAP_RECYCL_MATRIC f
 WHERE f.numpac=e.numpac
 AND f.pacmat  =e.pacmat
 )  AND d.numpac       =e.numpac
 AND d.pacmat       =e.pacmat
 AND z.numpac       =e.numpac
 AND z.PAIEZAD      =d.paiezad
 )  and PERIODE<=p_PERIODEENCOURS ;
 
 IF p_histoIP='N' THEN
 DELETE
 FROM TGE_INCIDENTS_PAIE z
 WHERE z.numpac            =p_numpac
 AND (z.numpac,z.paiezad) IN
 (SELECT DISTINCT t.numpac,
 t.paiezad
 FROM TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE z.numpac     =t.numpac
 AND z.paiezad      =t.paiezad
 AND t.MOIS_PAIE = p_PERIODEENCOURS
 AND (z.date_effet <= t.FIN_PERIODE_RECUEIL
 OR z.TYPE_IP       = 'T')
 )
 AND z.date_maj<
 (SELECT MAX (b.DATE_DEBUT_TRT)
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c,
 GAP_TRT_LISTE_MAT e,
 DIC_ADM_CONTRAT_SITU d
 WHERE a.numpac                 =p_numpac
 AND a.TYPE_PAIE               IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac                   =b.numpac
 AND a.modele                   =b.modele
 AND a.nature                   =b.nature
 AND b.id_trt                   =c.id_trt
 AND c.statut                  IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE             = p_PERIODEENCOURS
 AND b.numero_echange          <>'0000'
 AND e.id_trt                   =b.id_trt
 AND EXISTS
 (SELECT f.numpac,
 f.pacmat
 FROM GAP_RECYCL_MATRIC f
 WHERE f.numpac=e.numpac
 AND f.pacmat  =e.pacmat
 )
 AND d.numpac  =e.numpac
 AND d.pacmat  =e.pacmat
 AND z.numpac  =e.numpac
 AND z.PAIEZAD =d.paiezad
 )
 AND to_date(z.PERIODE)<=to_date(p_PERIODEENCOURS,'YYYYMM');
 END IF;
 
 delete from TGE_DONNEES_PAIE z where numpac=p_numpac AND to_date(date_maj,'yyyymmddHH24MI')<
 
 ( SELECT max (b.DATE_DEBUT_TRT)
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c, GAP_TRT_LISTE_MAT e, DIC_ADM_CONTRAT_SITU d
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 and e.id_trt=b.id_trt
 AND EXISTS
 (SELECT f.numpac,
 f.pacmat
 FROM GAP_RECYCL_MATRIC f
 WHERE f.numpac=e.numpac
 AND f.pacmat  =e.pacmat
 )  AND d.numpac       =e.numpac
 AND d.pacmat       =e.pacmat
 AND z.numpac       =e.numpac
 AND z.PAIEZAD      =d.paiezad
 ) and PERIODE<=p_PERIODEENCOURS ;
 
 delete from TGE_ELEMENTS_PAIE z where numpac=p_numpac AND to_date(date_maj,'yyyymmddHH24MI')<
 
 ( SELECT max (b.DATE_DEBUT_TRT)
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c, GAP_TRT_LISTE_MAT e, DIC_ADM_CONTRAT_SITU d
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 and e.id_trt=b.id_trt
 AND EXISTS
 (SELECT f.numpac,
 f.pacmat
 FROM GAP_RECYCL_MATRIC f
 WHERE f.numpac=e.numpac
 AND f.pacmat  =e.pacmat
 )  AND d.numpac       =e.numpac
 AND d.pacmat       =e.pacmat
 AND z.numpac       =e.numpac
 AND z.PAIEZAD      =d.paiezad
 )  and PERIODE<=p_PERIODEENCOURS ;
 
 -- M+1 sur TGE_REF_PAC
 update TGE_REF_PAC set periodeencours=to_char(add_months(to_date(periodeencours,'yyyymm'), 1),'yyyymm') where numpac=p_numpac;
 
 merge into TGE_REF_PER a using (select p_numpac as numpac,to_char(add_months(to_date(p_PERIODEENCOURS,'yyyymm'), 1),'yyyymm') as periodeencours from dual) b on (a.numpac=b.numpac and a.periodeencours=b.periodeencours)
 when matched then
 update set a.DATE_DEBUT_MOIS=b.periodeencours||'01',a.DATE_FIN_MOIS= to_char(last_day(to_date(b.periodeencours,'yyyymm')),'yyyymmdd'),a.DERNIER_NUM_ECHANGE=nvl(a.DERNIER_NUM_ECHANGE,'0000')
 when not matched then
 insert (a.numpac,a.periodeencours,a.DATE_DEBUT_MOIS,a.DATE_FIN_MOIS,a.DERNIER_NUM_ECHANGE) values (b.numpac,b.periodeencours,b.periodeencours||'01', to_char(last_day(to_date(b.periodeencours,'yyyymm')),'yyyymmdd') ,'0000'      )
 ;
 -- purge histo technique
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant purge histo)','Début de la purge pour le numpac : '||P_NUMPAC);
 tge_purge_histo(p_numpac,to_char(add_months(to_date(p_PERIODEENCOURS,'yyyymm'), 1),'yyyymm'));
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (après purge histo)','Fin de la purge pour le numpac : '||P_NUMPAC);
 
 --BEGIN DIT 37805
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin Insert RELIQ)','Début d insertion dans les tables RELIQ_  pour le numpac : '||P_NUMPAC);
 
 -- les tables TGE_RELIQ_* sont vidées pour le pac en question
 tge_insert_reliq (p_id,p_numpac,p_PERIODEENCOURS);
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (End Insert RELIQ)','Fin d insertion dans les tables RELIQ_  pour le numpac : '||P_NUMPAC);
 
 -- Mise à jour secupacmat
 update SECUPACMAT set PERIODE_RECYCLAGE=0 where numpac=p_numpac;
 FSED.insert_gap_trt_suivi(p_id,'PERIODE_RECYCLAGE_0',null,'BATCH','CL');
 -- purger table matricules en recyclage
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge RECYCL)','Purger table matricules en recyclage  pour le numpac : '||P_NUMPAC);
 DELETE from GAP_RECYCL_MATRIC where numpac=p_numpac ;
 DELETE from TGE_MODIF_PACMAT_TORESEND where numpac=p_numpac ;
 DELETE from GAP_SELECTION_PACMAT where nomtraitement='RECYCLAG' and numpac=p_numpac;
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge RETRO)','Purger table matricules Rétro  pour le numpac : '||P_NUMPAC);
 -- purger table matricules  RETRO
 if P_DEB_RETRO is not null AND to_date(P_PERIODEENCOURS,'YYYYMM')>=to_date(P_DEB_RETRO,'YYYYMM') then
 DELETE from GAP_RETRO_MATRIC where numpac=p_numpac ;
 DELETE from GAP_RETRO_MATRIC_TRAITE where numpac=p_numpac ;
 DELETE from TGE_MODIF_PACMAT_RETRO where numpac=p_numpac ;
 DELETE from GAP_SELECTION_RETRO where  numpac=p_numpac;
 DELETE FROM GAP_TRT_MOIS_RETRO where  numpac=p_numpac;
 END IF;
 -- RSI Le 20/02/2015 DIT 41197 : Supprimer pour le pac en cours des matricules
 -- sélectionnés dans GAP_SELECTION_PACMAT pour les natures de traitements associés à GAPSELMA dans TGE_SCHEMA_PRODUCTION
 DELETE from GAP_SELECTION_PACMAT
 where numpac= p_numpac
 and nomtraitement in (select distinct NATURE from TGE_SCHEMA_PRODUCTION where type_paie =  'GAPSELMA' and date_fin is null and numpac=p_numpac);
  
 --On réactive les triggers pour que la colonne période de paie des incidents soit recalculée
 delete bypass_trg_recycl_on_session;
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant alimentation période recueil)','Début de la procédure d''alimentation des périodes de recueil pour le numpac '||P_NUMPAC);
 IF to_char(add_months(to_date(p_PERIODEENCOURS,'yyyymm'), 1),'yyyymm') = P_DEB_RETRO THEN
 	TGE_ALIM_PERIODE_INDIV(p_id, p_numpac, greatest(P_PERIDOE_HISTO_LIMITE,P_DEB_HISTO_RETRO), NULL);
 ELSE
 	TGE_ALIM_PERIODE_INDIV(p_id, p_numpac, TO_CHAR(ADD_MONTHS(TO_DATE(p_periodeencours,'yyyymm'), 1),'YYYYMM'), NULL);
 END IF;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (après alimentation période recueil)','Fin de la procédure d''alimentation des périodes de recueil pour le numpac '||P_NUMPAC);
 
 --On désactive à nouveau les triggers
 insert into bypass_trg_recycl_on_session(date_event, message) values (sysdate, 'Cloture en cours pour le NUMPAC : ' || p_numpac);
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (end)','Fin de la clôture pour le numpac '||P_NUMPAC);
 FSED.insert_gap_trt_suivi(p_id,'CLOTURE_OK',null,'BATCH','CL');
 
 exception
 when others then
 FSED.FSED_ERREUR(p_id,'TGE_CLOTURE (raise)',P_NUMPAC,SQLCODE||'-'||SQLERRM);
 update SECUPACMAT set PERIODE_RECYCLAGE=1 where numpac=p_numpac;
 raise;
 END TGE_CLOTURE;
##
TGE_GENERATION_PHOTO
=SQL=
create or replace PROCEDURE TGE_GENERATION_PHOTO(
    p_id          IN NUMBER,
    p_numpac      IN VARCHAR2,
    p_periodepaie IN VARCHAR2)
/********************************************************************************
Version     : V5.05.000
*********************************************************************************/
AS
  CURSOR cur_mapta
  IS
    SELECT a.*
    FROM tge_ref_mapta a,
      (SELECT * FROM user_tables
      ) b
  WHERE a.numpac     =p_numpac
  AND b.table_name   =a.tablephy
  AND a.allerretour IN ('A','2')
  UNION ALL
  SELECT a.*
  FROM tge_ref_mapta a,
    (SELECT * FROM user_tables
    ) b
  WHERE a.numpac        ='*'
  AND b.table_name      =a.tablephy
  AND a.allerretour    IN ('A','2')
  AND (tableparam) NOT IN
    (SELECT tableparam
    FROM tge_ref_mapta a,
      (SELECT * FROM user_tables
      ) b
    WHERE a.numpac  =p_numpac
    AND b.table_name=a.tablephy
    ) ;
  lig_mapta cur_mapta%rowtype;
  v_typeTable VARCHAR(1);
  clinsert CLOB;
  clinsertsel CLOB;
  clinsertcols CLOB;
  requete CLOB;
  nbpart NUMBER;
  cldate VARCHAR2(500):='';
  p_nb_mois_paie_init number;
BEGIN
   
BEGIN
      SELECT TO_NUMBER(NVL(VALVAR,'0'))
      INTO p_nb_mois_paie_init
      FROM SYS_VARSYS
      WHERE MODULE = 'GAP'
      AND CODVAR   = 'NB_MOIS_PAIE_INIT';
EXCEPTION
  WHEN NO_DATA_FOUND THEN
      p_nb_mois_paie_init :=1;
END ;
p_nb_mois_paie_init := p_nb_mois_paie_init-1;


  OPEN cur_mapta;
  LOOP
  BEGIN
    FETCH cur_mapta
    INTO lig_mapta ;
    EXIT
  WHEN cur_mapta%NOTFOUND ;
    -- on regarde les clés pour savoir si table datée
    cldate:='';
    FOR colonne IN
    (SELECT a.column_name,
      b.data_type
    FROM user_cons_columns a,
      USER_TAB_COLUMNS b
    WHERE a.table_name   =lig_mapta.tablephy
    AND a.table_name     =b.table_name
    AND a.column_name    =b.column_name
    AND constraint_name IN
      (SELECT c.constraint_name
      FROM user_constraints c
      WHERE c.table_name =a.table_name
      AND CONSTRAINT_TYPE='P'
      )
    )
    LOOP
    IF colonne.data_type='DATE'  THEN
       cldate  :=' AND  a.'||colonne.column_name||'<=last_day(to_date('''||p_periodepaie||''',''yyyymmdd''))';
    END IF;
    END LOOP;
    IF lig_mapta.tablephy='DIC_ADM_CONTRAT' THEN
    cldate  :=' AND  a.DSDCN <=last_day(to_date('''||p_periodepaie||''',''yyyymmdd''))';
    END IF;
    -- requête de sélection des données à faire selon le type de table
    v_typeTable   :=fsed.getTypeTable(lig_mapta.tablephy);
    IF v_typeTable ='z' THEN
      clinsertsel :='';
      clinsertcols:='NUMPAC,PACMAT';
      FOR colonne IN
      (SELECT a.column_name
      FROM user_tab_columns a,
        user_tab_columns b
      WHERE a.table_name = lig_mapta.tablephy
      AND b.table_name   ='PHOTO_'
        ||a.table_name
      AND a.column_name=b.column_name
      AND a.column_name NOT LIKE '%IDPACMAT%'
      ORDER BY a.column_id
      )
      LOOP
        IF colonne.column_name <>'NUMPAC' AND colonne.column_name<>'PACMAT' THEN
          clinsertsel          :=clinsertsel||',a.'||colonne.column_name;
          clinsertcols         :=clinsertcols||','||colonne.column_name;
        END IF;
      END LOOP;

      clinsert      :='select distinct '''||p_numpac;
      clinsert      := clinsert||''',b.pacmat'||clinsertsel;
      clinsert      := clinsert||' from '||lig_mapta.tablephy;
      clinsert:= clinsert||' a,DIC_ADM_CONTRAT_SITU b where b.paiezad=a.paiezad and a.numpac=b.numpac and a.numpac= '''||p_numpac;
      clinsert:= clinsert||'''  and a.pacmat in (select c.pacmat from GAP_TRT_LISTE_MAT c where c.id_trt='||p_id||')';     
      clinsert:= clinsert||' and a.pacmat not in (select f.pacmat from TGE_MODIF_PACMAT_TORESEND f where b.numpac=f.numpac and f.numpac='''||p_numpac||''' and  f.table_to_send='''||lig_mapta.tablephy||''')'||cldate;
    elsif v_typeTable='p' THEN
      clinsertsel   :='';
      clinsertcols  :='';
      FOR colonne IN
      (SELECT a.column_name
      FROM user_tab_columns a,
        user_tab_columns b
      WHERE a.table_name = lig_mapta.tablephy
      AND b.table_name   ='PHOTO_'
        ||a.table_name
      AND a.column_name=b.column_name
      AND a.column_name NOT LIKE '%IDPACMAT%'
      ORDER BY a.column_id
      )
      LOOP
        IF clinsertsel IS NOT NULL THEN
          clinsertsel  :=clinsertsel||',';
        END IF;
        clinsertsel     :=clinsertsel||'a.'||colonne.column_name;
        IF clinsertcols IS NOT NULL THEN
          clinsertcols  :=clinsertcols||',';
        END IF;
        clinsertcols:=clinsertcols||colonne.column_name;
      END LOOP;

      clinsert      :='select distinct '||clinsertsel;
      clinsert      := clinsert||' from '||lig_mapta.tablephy;
      clinsert      := clinsert||' a  where  a.numpac= '''||p_numpac||''' AND    a.pacmat in (select c.pacmat from GAP_TRT_LISTE_MAT c where c.id_trt='||p_id||')';
      clinsert      := clinsert||' and a.pacmat not in (select f.pacmat from TGE_MODIF_PACMAT_TORESEND f where f.numpac=a.numpac and f.numpac='''||p_numpac||''' and  f.table_to_send='''||lig_mapta.tablephy||''')'||cldate;
    elsif v_typeTable='m' THEN
      clinsertsel   :='';
      clinsertcols  :='NUMPAC,PACMAT';
      FOR colonne IN
      (SELECT a.column_name
      FROM user_tab_columns a,
        user_tab_columns b
      WHERE a.table_name = lig_mapta.tablephy
      AND b.table_name   ='PHOTO_'
        ||a.table_name
      AND a.column_name=b.column_name
      AND a.column_name NOT LIKE '%IDPACMAT%'
      ORDER BY a.column_id
      )
      LOOP
        IF colonne.column_name <>'NUMPAC' AND colonne.column_name<>'PACMAT' THEN
          clinsertsel          :=clinsertsel||',a.'||colonne.column_name;
          clinsertcols         :=clinsertcols||','||colonne.column_name;
        END IF;
      END LOOP;

      clinsert:='select distinct '''||p_numpac;
      clinsert:= clinsert||''',b.pacmat'||clinsertsel;
      clinsert:= clinsert||' from '||lig_mapta.tablephy;
      clinsert:= clinsert||' a,SECUPACMAT b, GAP_TRT_LISTE_MAT c where b.matric=a.matric and b.numpac= '''||p_numpac;
      clinsert:= clinsert||'''  and b.pacmat=c.pacmat and c.numpac='''||p_numpac||''' and c.id_trt='||p_id;
      clinsert:= clinsert||' and b.pacmat not in (select f.pacmat from TGE_MODIF_PACMAT_TORESEND f where b.numpac=f.numpac and f.numpac='''||p_numpac||''' and  f.table_to_send='''||lig_mapta.tablephy||''')'||cldate;
    END IF;
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_GENERATION_PHOTO *** '||p_numpac||' *** Begin *** '||lig_mapta.tablephy||' (type='||v_typeTable||')',null);

    -- 1)	Sauvegarde de PHOTO dans PH_PH des mal recyclés non déjà présents dans PH_PH
    IF instr(clinsertsel,'a.PACMAT')>0 THEN
      requete:= 'insert into PH_PH_'||lig_mapta.tablephy||'('||clinsertcols||') (select '||clinsertsel ||' from PHOTO_'||lig_mapta.tablephy||' a, TGE_MODIF_PACMAT_TORESEND b where a.numpac=b.numpac and a.pacmat=b.pacmat and b.table_to_send='''||lig_mapta.tablephy||''' and a.numpac='''||p_numpac||''' AND  b.pacmat not in (select c.pacmat from PH_PH_'||lig_mapta.tablephy||' c where c.numpac='''||p_numpac||'''))';
    ELSE    
      requete:= 'insert into PH_PH_'||lig_mapta.tablephy||'('||clinsertcols||') (select a.numpac,a.pacmat'||clinsertsel ||' from PHOTO_'||lig_mapta.tablephy||' a, TGE_MODIF_PACMAT_TORESEND b where a.numpac=b.numpac and a.pacmat=b.pacmat and b.table_to_send='''||lig_mapta.tablephy||''' and a.numpac='''||p_numpac||''' AND  b.pacmat not in (select c.pacmat from PH_PH_'||lig_mapta.tablephy||' c where c.numpac='''||p_numpac||'''))';
    END IF;
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'Copie de PHOTO vers PH_PH des Toresend (mal recyclés) non présents dans PH_PH',requete);
    EXECUTE_IMMEDIATE_STRING( requete,0);
    
    -- 2)	On efface la PHOTO
    -- Contrôle de l'existence de partitionnement (son nom sera aussi une garantie de mode LIST)
    SELECT COUNT(*)
    INTO nbpart
    FROM user_tab_partitions
    WHERE table_name = 'PHOTO_'||lig_mapta.tablephy and partition_name = 'P_'||p_numpac;
    IF nbpart >0 THEN
      BEGIN
      -- Suppression de la partition
      requete:= 'ALTER TABLE PHOTO_'||lig_mapta.tablephy||' TRUNCATE PARTITION P_'||p_numpac||' DROP STORAGE UPDATE GLOBAL INDEXES';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Partition PHOTO détectée : suppression',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);
      -- Création de la partition
      EXCEPTION
        WHEN OTHERS THEN
         BEGIN
      requete:= 'ALTER TABLE PHOTO_'||lig_mapta.tablephy||' ADD PARTITION P_'||p_numpac||' values ('''||p_numpac||''')';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Création de partition PHOTO',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);
         EXCEPTION 
             WHEN OTHERS THEN 
                requete:= 'delete from  PHOTO_'||lig_mapta.tablephy||' where numpac='''||p_numpac||'''';
                FSED.FSED_AVANCEMENT_PLSQL(p_id,'Effacement de PHOTO',requete);
                EXECUTE_IMMEDIATE_STRING( requete,0);
        END;
      END;
    ELSE
      -- Cas des tables non partitionnées ou partitionnées en mode HASH
      requete:= 'delete from PHOTO_'||lig_mapta.tablephy||' where numpac='''||p_numpac||'''';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Effacement de PHOTO',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);
    END IF;
    
    -- 3)	On met à jour la PHOTO avec la table DIC sauf pour les mal recyclés de ce dictionnaire
    requete:= 'insert into PHOTO_'||lig_mapta.tablephy||'('||clinsertcols||') '||clinsert; 
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'Copie de DIC vers PHOTO sauf les mal recyclés',requete);
    EXECUTE_IMMEDIATE_STRING( requete,0);
    
    -- 4)	On copie PH_PH dans PHOTO uniquement pour les mal recyclés
    requete:= 'insert into PHOTO_'||lig_mapta.tablephy||'('||clinsertcols||')  (select '||clinsertcols||' from PH_PH_'||lig_mapta.tablephy||'  where numpac='''||p_numpac||''' and pacmat in (select pacmat from TGE_MODIF_PACMAT_TORESEND where numpac='''||p_numpac||''' and table_to_send='''||lig_mapta.tablephy||''' ) )';
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'Copie de PH_PH dans PHOTO pour les mal recyclés',requete);
    EXECUTE_IMMEDIATE_STRING( requete,0);
    
    -- 5)	On efface PH_PH
    -- Contrôle de l'existence de partitionnement (son nom sera aussi une garantie de mode LIST)
    SELECT COUNT(*)
    INTO nbpart
    FROM user_tab_partitions
    WHERE table_name = 'PH_PH_'||lig_mapta.tablephy and partition_name = 'P_'||p_numpac;
    IF nbpart >0 THEN
     BEGIN
      requete:= 'ALTER TABLE PH_PH_'||lig_mapta.tablephy||' TRUNCATE PARTITION P_'||p_numpac||' DROP STORAGE UPDATE GLOBAL INDEXES';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Partition PH_PH détectée : suppression',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);
      EXCEPTION
      WHEN OTHERS THEN
        BEGIN   
      -- Création de la partition
      requete:= 'ALTER TABLE PH_PH_'||lig_mapta.tablephy||' ADD PARTITION P_'||p_numpac||' values ('''||p_numpac||''')';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Création de partition PH_PH',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);
     EXCEPTION 
         WHEN OTHERS THEN 
      requete:= 'delete from PH_PH_'||lig_mapta.tablephy||' where numpac='''||p_numpac||'''';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Effacement de PH_PH',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);        END;
      END;
    ELSE
      -- Cas des tables non partitionnées ou partitionnées en mode HASH
      requete:= 'delete from PH_PH_'||lig_mapta.tablephy||' where numpac='''||p_numpac||'''';
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Effacement de PH_PH',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);
    END IF;

    -- 6)	On copie dans PH_PH la table DIC des matricules mal recyclés
    IF instr(clinsertsel,'a.PACMAT')>0 THEN
      requete:= 'insert into PH_PH_'||lig_mapta.tablephy||'('||clinsertcols||') (select '||clinsertsel ||' from '||lig_mapta.tablephy||' a, TGE_MODIF_PACMAT_TORESEND b where a.numpac=b.numpac and a.pacmat=b.pacmat and b.table_to_send='''||lig_mapta.tablephy||''' and a.numpac='''||p_numpac||''')';
    ELSE
      requete:= 'insert into PH_PH_'||lig_mapta.tablephy||'('||clinsertcols||') (select b.numpac,b.pacmat'||clinsertsel ||' from '||lig_mapta.tablephy||' a, TGE_MODIF_PACMAT_TORESEND b ,SECUPACMAT s where s.numpac=b.numpac  and s.pacmat=b.pacmat and s.MATRIC = a.MATRIC and b.table_to_send='''||lig_mapta.tablephy||''' and b.numpac='''||p_numpac||''')';
    END IF;
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'Copie de DIC vers PH_PH des Toresend (mal recyclés)',requete);
    EXECUTE_IMMEDIATE_STRING( requete,0);

      -- 7)	On supprime les DRPAIE2='B' de la photo DIT 82467
      
      IF v_typeTable ='z' THEN
         requete:= 'DELETE from PHOTO_'||lig_mapta.tablephy||' PH where PH.numpac='''||p_numpac||''' AND EXISTS ( select 1 from ( ';
         requete:=requete||' SELECT DISTINCT DACH2.NUMPAC,DACH2.paiezad, DACH2.NUMCNT ,DACH2.DRPAI2, MAX(DATE_EFF) OVER (PARTITION BY DACH2.paiezad, DACH2.NUMCNT) FROM DIC_ADM_CONTRAT_HISTO DACH2 ';
         requete:=requete||' WHERE DACH2.NUMPAC = '''||p_numpac||''' and DACH2.DATE_EFF <= LAST_DAY(TO_DATE('''||p_periodepaie||''',''yyyymmdd'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS(TO_DATE('''||p_periodepaie||''',''yyyymmdd''),-'||p_nb_mois_paie_init||') ';         
         if lig_mapta.tablephy in ('DIC_ADM_CONTRAT','DIC_ADM_CONTRAT_HISTO','DIC_ADM_CONTRAT_SITU') THEN 
            requete:=requete||' ) DACH   where  PH.paiezad=DACH.paiezad and NVL(DACH.DRPAI2,''B'')=''B'' AND PH.NUMPAC=DACH.NUMPAC AND PH.NUMCNT = DACH.NUMCNT) ' ;
         ELSE
            requete:=requete||' ) DACH   where  PH.paiezad=DACH.paiezad and NVL(DACH.DRPAI2,''B'')=''B'' AND PH.NUMPAC=DACH.NUMPAC ) ' ;
         END IF;
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Suppression des DRPAIE2=''B'' de la PHOTO',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);  
      ELSIF v_typeTable='p' THEN
         requete:= 'DELETE from PHOTO_'||lig_mapta.tablephy||' PH where PH.numpac='''||p_numpac||''' AND EXISTS ( select 1 from ( ';
         requete:=requete||' SELECT DISTINCT DACH2.NUMPAC,DACH2.pacmat, DACH2.NUMCNT ,DACH2.DRPAI2, MAX(DATE_EFF) OVER (PARTITION BY DACH2.pacmat, DACH2.NUMCNT) FROM DIC_ADM_CONTRAT_HISTO DACH2 ';
         requete:=requete||' WHERE DACH2.NUMPAC = '''||p_numpac||''' and DACH2.DATE_EFF <= LAST_DAY(TO_DATE('''||p_periodepaie||''',''yyyymmdd'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS(TO_DATE('''||p_periodepaie||''',''yyyymmdd''),-'||p_nb_mois_paie_init||') ';         
         if lig_mapta.tablephy in ('DIC_ADM_CONTRAT','DIC_ADM_CONTRAT_HISTO','DIC_ADM_CONTRAT_SITU') THEN 
           requete:=requete||' ) DACH   where PH.pacmat=DACH.pacmat and NVL(DACH.DRPAI2,''B'')=''B'' AND PH.NUMPAC=DACH.NUMPAC AND PH.NUMCNT=DACH.NUMCNT ) ' ;
         ELSE
           requete:=requete||' ) DACH   where PH.pacmat=DACH.pacmat and NVL(DACH.DRPAI2,''B'')=''B'' AND PH.NUMPAC=DACH.NUMPAC ) ' ;
         END IF;
      FSED.FSED_AVANCEMENT_PLSQL(p_id,'Suppression des DRPAIE2=''B'' de la PHOTO',requete);
      EXECUTE_IMMEDIATE_STRING( requete,0);  
      END IF;      
    -- Fin
    FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_GENERATION_PHOTO *** '||p_numpac||' *** End *** '||lig_mapta.tablephy,null);

 EXCEPTION
 WHEN OTHERS THEN
  	FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_GENERATION_PHOTO : '||lig_mapta.tablephy ||' )' , 'Une erreur est survenue lors de la génération photo de la table '||lig_mapta.tablephy||'. Veuillez consulter la table TGE_FSED_ERREUR.');
    FSED.FSED_ERREUR(p_id,'TGE_GENERATION_PHOTO:'||lig_mapta.tablephy,P_NUMPAC,SQLCODE||'-'||SQLERRM);
    -- pour pouvoir suivre le traitement de génération photo sur le reste des tables après le catch de l'exception
    -- il suffit de commenter le 'raise'
    raise;
  END ;  
  END LOOP;
  CLOSE cur_mapta;

END TGE_GENERATION_PHOTO;
##
META_REGLES_CROISES
=SQL=
CREATE OR REPLACE VIEW META_REGLES_CROISES AS
  SELECT
    a.id_reglegestion,
    a.libelle,
    CASE
      WHEN a.flag_specif_type_regle = 'M'
      THEN 'Masque les données et les vide'
      WHEN a.flag_specif_type_regle = 'C'
      THEN 'Masque les données sans les vider'
      WHEN a.flag_specif_type_regle = 'V'
      THEN 'Rend les données non saisissables'
      WHEN a.flag_specif_type_regle = 'O'
      THEN 'Activée en temps réel'
      WHEN a.flag_specif_type_regle = 'N'
      THEN 'Non activée en temps réel'
      ELSE ''
    END TYPE_REGLE2 ,
    z.type_regle,
    NVL(z.TYPE_OBJET,'NON UTILISE') AS TYPE_OBJET,
    z.info1,
    z.type_objet2,
    z.info2 ,
    a.description,
    a.regle_synthetique,
    a.est_supprime
  FROM
    (
      SELECT
        'DONNEE'               AS TYPE_OBJET,
        'AUTOMATISME RD '      AS TYPE_REGLE,
        NOM_DONNEE             AS INFO1,
        'NOM_PAGE'             AS TYPE_OBJET2,
        NOM_PAGE               AS INFO2 ,
        ID_REGLEGESTION_AUT_RD AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      UNION ALL
      SELECT
        'DONNEE'                AS TYPE_OBJET,
        'AUTOMATISME CLI '      AS TYPE_REGLE,
        NOM_DONNEE              AS INFO1,
        'NOM_PAGE'              AS TYPE_OBJET2,
        NOM_PAGE                AS INFO2 ,
        ID_REGLEGESTION_AUT_CLI AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      UNION ALL
      SELECT
        'DONNEE'               AS TYPE_OBJET,
        'AFFICHAGE RD '        AS TYPE_REGLE,
        NOM_DONNEE             AS INFO1,
        'NOM_PAGE'             AS TYPE_OBJET2,
        NOM_PAGE               AS INFO2 ,
        ID_REGLEGESTION_AFF_RD AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      UNION ALL
      SELECT
        'DONNEE'                AS TYPE_OBJET,
        'AFFICHAGE CLI '        AS TYPE_REGLE,
        NOM_DONNEE              AS INFO1,
        'NOM_PAGE'              AS TYPE_OBJET2,
        NOM_PAGE                AS INFO2 ,
        ID_REGLEGESTION_AFF_CLI AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      UNION ALL
      SELECT
        'DONNEE'               AS TYPE_OBJET,
        'CONTROLE RD  '        AS TYPE_REGLE,
        NOM_DONNEE             AS INFO1,
        'NOM_PAGE'             AS TYPE_OBJET2,
        NOM_PAGE               AS INFO2 ,
        ID_REGLEGESTION_CTL_RD AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      UNION ALL
      SELECT
        'DONNEE'                AS TYPE_OBJET,
        'CONTROLE CLI '         AS TYPE_REGLE,
        NOM_DONNEE              AS INFO1,
        'NOM_PAGE'              AS TYPE_OBJET2,
        NOM_PAGE                AS INFO2 ,
        ID_REGLEGESTION_CTL_CLI AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      UNION ALL
      SELECT
        'DONNEE'               AS TYPE_OBJET,
        'OBLIGATOIRE '        AS TYPE_REGLE,
        NOM_DONNEE             AS INFO1,
        'NOM_PAGE'             AS TYPE_OBJET2,
        NOM_PAGE               AS INFO2 ,
        SUBSTR(EST_OBLIGATOIRE,3) AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      WHERE
        EST_OBLIGATOIRE LIKE 'R_%'
      UNION ALL
      SELECT
        'DONNEE'               AS TYPE_OBJET,
        'VALEUR PAR DEFAUT '   AS TYPE_REGLE,
        NOM_DONNEE             AS INFO1,
        'NOM_PAGE'             AS TYPE_OBJET2,
        NOM_PAGE               AS INFO2 ,
        SUBSTR(VALEUR_DEFAUT,10) AS ID_REGLE
      FROM
        META_DONNEE_ECRAN
      WHERE
        VALEUR_DEFAUT LIKE 'ID_REGLE=%'
      UNION ALL
      SELECT
        'TABLEAU SUPP'              AS TYPE_OBJET,
        'CONTROLE RD  '             AS TYPE_REGLE,
        ID_GROUPE                   AS INFO1,
        ''                          AS TYPE_OBJET2,
        ''                          AS INFO2 ,
        ID_REGLEGESTION_CTL_RD_SUPP AS ID_REGLE
      FROM
        META_GROUPE_DONNEES
      WHERE
        NOM_DONNEE LIKE '#TABLEAU%'
      UNION ALL
      SELECT
        'TABLEAU SUPP'               AS TYPE_OBJET,
        'CONTROLE CLI '              AS TYPE_REGLE,
        ID_GROUPE                    AS INFO1,
        ''                           AS TYPE_OBJET2,
        ''                           AS INFO2 ,
        ID_REGLEGESTION_CTL_CLI_SUPP AS ID_REGLE
      FROM
        META_GROUPE_DONNEES
      WHERE
        NOM_DONNEE LIKE '#TABLEAU%'
      UNION ALL
      SELECT
        'AFF RECONDUCTION DONNEES'  AS TYPE_OBJET,
        'AFFICHAGE RD  '            AS TYPE_REGLE,
        ID_GROUPE                   AS INFO1,
        ''                          AS TYPE_OBJET2,
        ''                          AS INFO2 ,
        ID_REGLEGESTION_CTL_RD_SUPP AS ID_REGLE
      FROM
        META_GROUPE_DONNEES
      WHERE
        NOM_DONNEE LIKE '#RECONDUCTION_DONNEES%'
      UNION ALL
      SELECT
        'AFF RECONDUCTION DONNEES'   AS TYPE_OBJET,
        'AFFICHAGE CLI '             AS TYPE_REGLE,
        ID_GROUPE                    AS INFO1,
        ''                           AS TYPE_OBJET2,
        ''                           AS INFO2 ,
        ID_REGLEGESTION_CTL_CLI_SUPP AS ID_REGLE
      FROM
        META_GROUPE_DONNEES
      WHERE
        NOM_DONNEE LIKE '#RECONDUCTION_DONNEES%'
      UNION ALL
      SELECT
        'GROUPE'               AS TYPE_OBJET,
        'AFFICHAGE RD '        AS TYPE_REGLE,
        ID_GROUPE              AS INFO1,
        ''                     AS TYPE_OBJET2,
        ''                     AS INFO2 ,
        ID_REGLEGESTION_AFF_RD AS ID_REGLE
      FROM
        META_GROUPE_DONNEES_INFO
      UNION ALL
      SELECT
        'GROUPE'                AS TYPE_OBJET,
        'AFFICHAGE CLI '        AS TYPE_REGLE,
        ID_GROUPE               AS INFO1,
        ''                      AS TYPE_OBJET2,
        ''                      AS INFO2 ,
        ID_REGLEGESTION_AFF_CLI AS ID_REGLE
      FROM
        META_GROUPE_DONNEES_INFO
      UNION ALL
      SELECT
        'ECRAN'                    AS TYPE_OBJET,
        'CONDITION ECRAN WORKFLOW' AS TYPE_REGLE,
        ECRAN_NOM_PAGE             AS INFO1,
        'OP_NUM'                   AS TYPE_OBJET2,
        TO_CHAR(OP_NUM)
        ||' '
        ||
        (
          SELECT
            w.op_libelle
          FROM
            wkf_operations w
          WHERE
            w.op_num=META_WKF_OPERATION_ECRANS.op_num
          AND rownum=1
        )                          AS INFO2 ,
        ECRAN_ID_REGLEGESTION_COND AS ID_REGLE
      FROM
        META_WKF_OPERATION_ECRANS
      UNION ALL
      SELECT
        'ECRAN'             AS TYPE_OBJET,
        'CONTROLE WORKFLOW' AS TYPE_REGLE,
        ECRAN_NOM_PAGE      AS INFO1,
        'OP_NUM'            AS TYPE_OBJET2,
        TO_CHAR(OP_NUM)
        ||' '
        ||
        (
          SELECT
            w.op_libelle
          FROM
            wkf_operations w
          WHERE
            w.op_num=META_WKF_OPERATION_ECRANS.op_num
          AND rownum=1
        )                             AS INFO2 ,
        RECHERCHE_ID_REGLEGESTION_CTL AS ID_REGLE
      FROM
        META_WKF_OPERATION_ECRANS
      UNION ALL
      SELECT
        'ECRAN'                AS TYPE_OBJET,
        'AUTOMATISME RD '      AS TYPE_REGLE,
        NOM_PAGE               AS INFO1,
        ''                     AS TYPE_OBJET2,
        ''                     AS INFO2 ,
        ID_REGLEGESTION_AUT_RD AS ID_REGLE
      FROM
        META_ECRAN
      UNION ALL
      SELECT
        'ECRAN'                 AS TYPE_OBJET,
        'AUTOMATISME CLI '      AS TYPE_REGLE,
        NOM_PAGE                AS INFO1,
        ''                      AS TYPE_OBJET2,
        ''                      AS INFO2 ,
        ID_REGLEGESTION_AUT_CLI AS ID_REGLE
      FROM
        META_ECRAN
      UNION ALL
      SELECT
        'ECRAN'                AS TYPE_OBJET,
        'CONTROLE RD  '        AS TYPE_REGLE,
        NOM_PAGE               AS INFO1,
        ''                     AS TYPE_OBJET2,
        ''                     AS INFO2 ,
        ID_REGLEGESTION_CTL_RD AS ID_REGLE
      FROM
        META_ECRAN
      UNION ALL
      SELECT
        'ECRAN'                 AS TYPE_OBJET,
        'CONTROLE CLI '         AS TYPE_REGLE,
        NOM_PAGE                AS INFO1,
        ''                      AS TYPE_OBJET2,
        ''                      AS INFO2 ,
        ID_REGLEGESTION_CTL_CLI AS ID_REGLE
      FROM
        META_ECRAN
    )
    Z,
    meta_reglegestion_desc A
  WHERE
    Z.id_regle(+) = a.id_reglegestion
##
META_UTILISATION
=SQL=
CREATE OR REPLACE VIEW META_UTILISATION as
SELECT
  G.NOM_DONNEE,
  G.LIBELLE_DONNEE,
  G.NOM_DICTIONNAIRE,
  G.TYPE_DONNEE,
  G.LONGUEUR_MASQUE_NB_ENTIERS,
  G.NB_DECIMAUX,
  G.UTILISATION,
  G.ACTIF,
  G.ID_PROJET,
  NVL(U.TYPE_OBJET,'aucun') AS TYPE_OBJET,
  NVL(U.CODE_OBJET,'aucun') AS CODE_OBJET
FROM
  meta_donnee_generale G
LEFT JOIN
  (
    SELECT DISTINCT
      'GROUPE' AS TYPE_OBJET,
      dg.nom_donnee,
      gd.id_groupe AS CODE_OBJET
    FROM
      meta_donnee_generale dg,
      meta_groupe_donnees gd
    WHERE
      dg.company_id   ='*'
    AND gd.company_id =dg.company_id
    AND dg.nom_donnee =gd.nom_donnee
    UNION ALL
    SELECT DISTINCT
      'REGLE' AS TYPE_OBJET,
      dg.nom_donnee,
      rg.id_reglegestion AS CODE_OBJET
    FROM
      meta_donnee_generale dg,
      meta_reglegestion rg
    WHERE
      dg.company_id   ='*'
    AND rg.company_id =dg.company_id
    AND
      (
        upper(operande1) = 'DONNEE£'
        ||upper(nom_donnee)
        ||'£'
      OR upper(operande2) = 'DONNEE£'
        ||upper(nom_donnee)
        ||'£'
      OR upper(operateur) LIKE '%DONNEE£'
        ||upper(nom_donnee)
        ||'µ%'
      OR upper(operande2) LIKE '%=DONNEE^'
        ||upper(nom_donnee)
      OR upper(operande2) LIKE '%=DONNEE^'
        ||upper(nom_donnee)
        ||'§%'
      OR upper(resultat) = 'DONNEE£'
        ||upper(nom_donnee)
      OR upper(operateur) LIKE '%DONNEE£'
        ||upper(nom_donnee)
        ||'£%'
      OR upper(operateur) LIKE '%µDONNEE£'
        ||upper(nom_donnee)
        ||'£%'
      OR upper(operateur) LIKE '%=DONNEE^'
        ||upper(nom_donnee)
        ||'µ%'
      OR upper(operateur) LIKE '%=DONNEE^'
        ||upper(nom_donnee)
        ||'§%'
      )
    UNION ALL
    SELECT DISTINCT
      'APPELTABLE_PARAM' AS TYPE_OBJET,
      dg.nom_donnee,
      appeltable_parametres AS CODE_OBJET
    FROM
      meta_donnee_generale dg,
      meta_donnee_ecran de
    WHERE
      dg.company_id            ='*'
    AND de.company_id          =dg.company_id
    AND NOT dg.nom_donnee      =de.nom_donnee
    AND appeltable_parametres IS NOT NULL
    AND ','
      ||upper(REPLACE(appeltable_parametres,' ',''))
      ||',' LIKE '%,'
      ||upper(dg.nom_donnee)
      ||',%'
    UNION ALL
    SELECT DISTINCT
      'APPELTABLE_CHAMP' AS TYPE_OBJET,
      dg.nom_donnee,
      appeltable_listechamps AS CODE_OBJET
    FROM
      meta_donnee_generale dg,
      meta_donnee_ecran de
    WHERE
      dg.company_id             ='*'
    AND de.company_id           =dg.company_id
    AND NOT dg.nom_donnee       =de.nom_donnee
    AND appeltable_listechamps IS NOT NULL
    AND ','
      ||upper(REPLACE(appeltable_listechamps,' ',''))
      ||',' LIKE '%,'
      ||upper(dg.nom_donnee)
      ||',%'
  )
  U
ON
  G.nom_donnee = U.NOM_DONNEE
WHERE
  company_id='*'
##
TAG_CHARSET=@€éèç
##
MP_REF_API
==
CREATE OR REPLACE FORCE VIEW MP_REF_API AS SELECT * FROM MP_REF_API@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_APP_OWNER
==
CREATE OR REPLACE FORCE VIEW MP_REF_APP_OWNER AS SELECT * FROM MP_REF_APP_OWNER@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_CONSUMERAPPOID
==
CREATE OR REPLACE FORCE VIEW MP_REF_CONSUMERAPPOID AS SELECT * FROM MP_REF_CONSUMERAPPOID@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_DATA
==
CREATE OR REPLACE FORCE VIEW MP_REF_DATA AS SELECT * FROM MP_REF_DATA@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_DATA_BY_URI
==
CREATE OR REPLACE FORCE VIEW MP_REF_DATA_BY_URI AS SELECT * FROM MP_REF_DATA_BY_URI@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_LEVEL
==
CREATE OR REPLACE FORCE VIEW MP_REF_LEVEL AS SELECT * FROM MP_REF_LEVEL@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_SECU_DATA
==
CREATE OR REPLACE FORCE VIEW MP_REF_SECU_DATA AS SELECT * FROM MP_REF_SECU_DATA@GLOBAL_DATA 
##
TAG_CHARSET=@€éèç
##
MP_REF_SECU_URI
==
CREATE OR REPLACE FORCE VIEW MP_REF_SECU_URI AS SELECT * FROM MP_REF_SECU_URI@GLOBAL_DATA
##
TAG_CHARSET=@€éèç
##
MP_REF_URI
==
CREATE OR REPLACE FORCE VIEW MP_REF_URI AS SELECT * FROM MP_REF_URI@GLOBAL_DATA
##
DEL_FONCTIONMETIER
==
DELETE FROM DEL_FONCTIONMETIER WHERE CODE_FCTMETIER =-2 AND ID_ECRANPROCESSUS in ('Modules/AdpUx/UxTimesheetMgr.jsp','Modules/AdpUx/UxCalendarMgr.jsp')
-2,'Modules/AdpUx/UxTimesheetMgr.jsp','E'
-2,'Modules/AdpUx/UxCalendarMgr.jsp','E'
##
TAG_CHARSET=@€éèç
##
EDI_FAMILLE
==
DELETE FROM EDI_FAMILLE WHERE FAMEDI = 'IDD'
'IDD','Comptabilisation de l''IDD','0','O'
##
EDI_REQ_SQL
==
DELETE FROM EDI_REQ_SQL WHERE NOMREQ = 'IDD'
'IDD','FROM SYS_TRC_MODIF STM LEFT JOIN TGE_REF_PAC TRP ON STM.NUMPAC = TRP.NUMPAC WHERE FUNCTIONNALITY =''CALCUL_IDD'' GROUP BY PACMS,STM.NUMPAC , STM.LOGIN','~',';','-','N','0',null
##
EDI_REQ_SQL_CF
==
DELETE FROM EDI_REQ_SQL_CF WHERE NOMREQ = 'IDD'
'IDD','Type','CASE  WHEN PACMS= 1 THEN ''CONSO_MS'' WHEN PACMS= 0 THEN ''CONSO_PRO'' END',null,'1','T','Type','8'
'IDD',' STM.NUMPAC',' STM.NUMPAC',null,'2','T','Pac','8'
'IDD',' STM.LOGIN',' STM.LOGIN',null,'3','T','Utilisateur ','12'
'IDD','COUNT(*)','COUNT(*)',null,'4','T','Nombre d''appel','16'
##
EDI_VISU_VIA_REQ
==
DELETE FROM EDI_VISU_VIA_REQ WHERE CODEDI = '1' AND NOMEDI ='Comptabilisation de l''IDD' AND FAMEDI ='IDD'
'1','Comptabilisation de l''IDD','IDD','IDD','Comptabilisation de l''IDD',null,'Nombre de clics sur le lien de calcul de l''indemnité de départ','XLS','O','20200413','20200413','20200413','L',null,null,null
##
TAG_CHARSET=@€éèç
##
MP_CLI_CONSUMERAPPOID
=SQL IFNOTEXIST=MP_CLI_CONSUMERAPPOID=
CREATE TABLE "MP_CLI_CONSUMERAPPOID" (CONSUMER_APP_OID VARCHAR(50) NOT NULL ENABLE ,LABEL VARCHAR(250),PRIMARY KEY (CONSUMER_APP_OID))
INSERT INTO MP_CLI_CONSUMERAPPOID (select ID_PARTENAIRE,LIBELLE from DEX_PARTENAIRES)
##
TAG_CHARSET=@€éèç
##
MP_CONSUMERAPPOID
=SQL IFNOTEXIST=MP_CONSUMERAPPOID=
CREATE TABLE "MP_CONSUMERAPPOID" (CONSUMER_APP_OID VARCHAR(50) NOT NULL ENABLE ,LABEL VARCHAR(250) ,ASSOCIATE_OID VARCHAR(32) NOT NULL ENABLE, PRIMARY KEY (CONSUMER_APP_OID))
INSERT INTO MP_CONSUMERAPPOID (select  P.ID_PARTENAIRE, P.LIBELLE, V.VALVAR from SYS_VARSYS V , DEX_PARTENAIRES P where CODVAR='NS_CLIENT_ID')
##
TAG_CHARSET=@€éèç
##
MP_DATA
=SQL IFNOTEXIST=MP_DATA=
CREATE TABLE "MP_DATA" (DATA_NAME_MP_ALP VARCHAR(50) NOT NULL ENABLE ,REGROUPEMENT VARCHAR(20),PRIMARY KEY (DATA_NAME_MP_ALP)) 
INSERT INTO MP_DATA (select NOM_DONNEE_UX, REGROUPEMENT from UX_DATA)
##
TAG_CHARSET=@€éèç
##
MP_REF_DATA_ALP
=SQL IFNOTEXIST=MP_REF_DATA_ALP=
CREATE TABLE "MP_REF_DATA_ALP" (DATA_NAME_MP VARCHAR(250) NOT NULL ENABLE ,DATA_NAME_MP_ALP VARCHAR(50),PRIMARY KEY (DATA_NAME_MP))
##
TAG_CHARSET=@€éèç
##
MP_SECU_DATA
=SQL IFNOTEXIST=MP_SECU_DATA=
CREATE TABLE "MP_SECU_DATA" (CONSUMER_APP_OID VARCHAR(50) NOT NULL ENABLE ,DATA_NAME_MP_ALP VARCHAR(50) NOT NULL ENABLE,URI_ID VARCHAR(50) NOT NULL ENABLE ,PRIMARY KEY (CONSUMER_APP_OID,DATA_NAME_MP_ALP,URI_ID))
INSERT INTO MP_SECU_DATA (select ID_PARTENAIRE, NOM_DONNEE_UX, '*' as URI_ID from DEX_SECU_DATA , Dual )
##
TAG_CHARSET=@€éèç
##
MP_SECU_URI
=SQL IFNOTEXIST=MP_SECU_URI=
CREATE TABLE "MP_SECU_URI" (CONSUMER_APP_OID VARCHAR(50) NOT NULL ENABLE ,URI_ID VARCHAR(50) NOT NULL ENABLE,PRIMARY KEY (CONSUMER_APP_OID,URI_ID))
INSERT INTO MP_SECU_URI (select ID_PARTENAIRE,'*' as URI_ID from DEX_PARTENAIRES , Dual )
##
SYS_AIDE_DYN_2_SAVE
=SQL IFEXIST=SYS_AIDE_DYN_2_SAVE=
drop table SYS_AIDE_DYN_2_SAVE
##
SYS_AIDE_DYN_2_SAVE
=SQL IFNOTEXIST=SYS_AIDE_DYN_2_SAVE=
create table SYS_AIDE_DYN_2_SAVE as (select * from SYS_AIDE_DYN_2)
##
SYS_AIDE_DYN_2
=SQL IFEXIST=SYS_AIDE_DYN_2=
delete from SYS_AIDE_DYN_2 where SUJET not in (select upper(NOM_PAGE) from SYS_SCH_ELEMENT where NOM_PAGE is not null)
##
SYS_DEF_ERREURS
==
DELETE FROM SYS_DEF_ERREURS WHERE CODERR = 'STD00111' AND CODMOD = 'STD' AND CODLANG = 'fr_fr' AND NIV_DEFINITION = '0'
'STD00111','STD','fr_fr','0','Inscription impossible car aucun train de paie n''est planifié.','1'
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and CODERR in ('ADMPD170','ADMPD171','ADMPD172','ADMPD173','ADMPD174')
'ADMPD170','STD','fr_fr',0,'Vérifiez que les boutons du tableau multiple sont renseignés.',1
'ADMPD171','STD','fr_fr',0,'Le libellé bouton est obligatoire.',1
'ADMPD172','STD','fr_fr',0,'Le code opération est obligatoire.',1
'ADMPD173','STD','fr_fr',0,'Le code opération ne doit contenir que des chiffres, des lettres (majuscules ou minuscules) et des underscores.',1
'ADMPD174','STD','fr_fr',0,'Le même libellé bouton ou code opération est utilisé plus qu''une fois.',1
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and CODERR in ('GENWKF64','GENWKF94','GENWKF95')
'GENWKF64','GEN','fr_fr',0,'L''embauche étant présente dans les fichiers paie, la date de début de contrat doit être supérieure ou égale au "#1" (Date limite rétro).',1
'GENWKF94','GEN','fr_fr',0,'Le salarié sélectionné n''a pas de période d''emploi correspondant à la demande car l''embauche n''est pas incluse dans la profondeur de rétro.',1
'GENWKF95','GEN','fr_fr',0,'Le salarié sélectionné n''a pas de période d''emploi correspondant à la demande car soit le départ est présent dans les fichiers de paie et il n''est pas inclus dans la profondeur de rétro, soit le type de réembauche est consécutif.',1
##
TAG_CHARSET=@€éèç
##
SYS_EXTERN_SCHEMA
=SQL IFNOTEXIST=SYS_EXTERN_SCHEMA=
CREATE TABLE SYS_EXTERN_SCHEMA   (	"CODE_SCHEMA" VARCHAR2(200 BYTE), 	"CLASS_NAME" VARCHAR2(2000 BYTE), 	 CONSTRAINT "SYSETERNSCHEMAPK" PRIMARY KEY ("CODE_SCHEMA", "CLASS_NAME"))
##
SYS_GRAPH_PARAM
=SQL IFNOTEXIST=SYS_GRAPH_PARAM=GRAPH_LOADER_CLASS=
alter table SYS_GRAPH_PARAM ADD GRAPH_LOADER_CLASS VARCHAR2(900)
##
SYS_GRAPH_PARAM
=SQL IFNOTEXIST=SYS_GRAPH_PARAM=HIDE_ON_FAIL=
alter table SYS_GRAPH_PARAM ADD HIDE_ON_FAIL VARCHAR2(1)
##
SYS_REQUETES_JSP
==
delete from SYS_REQUETES_JSP where NOMPAGE='REG_RD_WKF_PERIODE_EMPLOI_RETRO' and IDREQUETE='1'
'REG_RD_WKF_PERIODE_EMPLOI_RETRO',1,'Utilisateur','DIC_ADM_CONTRAT_HISTO H INNER JOIN DIC_ADM_CONTRAT C ON C.NUMPAC =H.NUMPAC AND C.PACMAT =H.PACMAT AND C.NUMCNT = H.NUMCNT AND NVL(C.DSFCN,TO_DATE(''31.12.2099'',''dd.MM.yyyy'')) = NVL(H.DATE_FIN,TO_DATE(''31.12.2099'',''dd.MM.yyyy'')) INNER JOIN TGE_REF_PAC P ON P.NUMPAC = C.NUMPAC AND P.DEB_HISTO_RETRO IS NOT NULL AND P.NB_MOIS_RETRO IS NOT NULL LEFT JOIN TGE_REF_TDR T ON C.TYPE_REEMBAUCHE = T.TYPE_REEMBAUCHE AND C.NUMPAC = T.NUMPAC','C.NUMCNT, TO_CHAR(C.DSDCN^''dd.MM.yyyy''), TO_CHAR(C.DSFCN^''dd.MM.yyyy''), H.ZT061, C.TYPE_REEMBAUCHE, T.LIBELLE','C.NUMCNT, TO_CHAR(C.DSDCN^''dd.MM.yyyy''), TO_CHAR(C.DSFCN^''dd.MM.yyyy''), H.ZT061, C.TYPE_REEMBAUCHE,TO_CHAR(H.DATE_EFF^''dd.MM.yyyy''),H.PAIEZAD','( C.DSDCN &gt;= TO_DATE(GREATEST(DEB_HISTO_RETRO, TO_CHAR(ADD_MONTHS(TO_DATE(PERIODEENCOURS, ''YYYYMM''), -NB_MOIS_RETRO), ''YYYYMM'')) || ''01'', ''YYYYMMDD'') OR ( C.DSDCN &lt; TO_DATE(GREATEST(DEB_HISTO_RETRO, TO_CHAR(ADD_MONTHS(TO_DATE(PERIODEENCOURS, ''YYYYMM''), -NB_MOIS_RETRO), ''YYYYMM'')) || ''01'', ''YYYYMMDD'') AND NOT EXISTS (SELECT 1 FROM PHOTO_DIC_ADM_CONTRAT PH WHERE PH.NUMPAC=C.NUMPAC AND PH.PACMAT =C.PACMAT AND PH.NUMCNT =C.NUMCNT AND PH.DSDCN =C.DSDCN ) )) AND H.MATRIC = ''%1''',0,'false','C.DSDCN ASC',NULL,'Périodes d''emploi dont la date d''embauche est incluse dans la profondeur de rétro','numéro de contrat, date début contrat, date fin contrat, nature de contrat, type de réembauche, libellé type de réembauche'
##
SYS_REQUETES_JSP
==
delete from SYS_REQUETES_JSP where NOMPAGE='REG_RD_REEMBAUCHE' and IDREQUETE='5'
'REG_RD_REEMBAUCHE','5','Utilisateur','TGE_REF_TDR','STC','STC','NUMPAC = ''%1'' AND TYPE_REEMBAUCHE = ''%2''','0','false',NULL,NULL,'Récupération du code STC en fonction du type de réembauche'
##
SYS_SCH_ELEMENT
==
UPDATE SYS_SCH_ELEMENT SET TAGS='_PAS_VISIBLE_' WHERE niveau = '99' and nom_page='Modules/AdpUx/UxTimesheetMgr.jsp'
##
SYS_SCH_ELEMENT
==
UPDATE SYS_SCH_ELEMENT SET TAGS='_PAS_VISIBLE_' WHERE niveau = '99' and nom_page='Modules/AdpUx/UxCalendarMgr.jsp'
##
SYS_SCH_ELEMENT
==
UPDATE SYS_SCH_ELEMENT SET TAGS='_PAS_VISIBLE_' WHERE niveau = '99' and nom_page='Modules/AdpUx/UxBenefitsCoverage.jsp'
##
SYS_VARSYS
=SQL IFEXIST=SYS_VARSYS=
DELETE SYS_VARSYS WHERE MODULE = 'SYS' AND CODVAR = 'USER_TAB_COLS_IN_MEMORY'
##
SYS_VARSYS
=SQL IFEXIST=SYS_VARSYS=
INSERT INTO SYS_VARSYS ( MODULE, CODVAR, VALVAR, TYPVAR, DESCRIPTION ) VALUES ('SYS', 'USER_TAB_COLS_IN_MEMORY', 'true', 'Booléen', 'true = charger la structure de toutes les tables en mémoire pour optimiser le temps d''exécution de certaines requêtes SQL / false = ne rien faire')
##
TAG_CHARSET=@€éèç
##
TGE_REF_CARTE_FSED
=SQL IFEXIST=TGE_REF_CARTE_FSED=FORMATAGE_SQL=
ALTER TABLE TGE_REF_CARTE_FSED MODIFY FORMATAGE_SQL VARCHAR2(3500 BYTE)
##
TGE_REF_CARTE_FSED
==
DELETE from TGE_REF_CARTE_FSED where CODE_CARTE in ('00','00_ALP','11','29_30_DIF_FSED','29_30_DIF_FSED_RETRO','29_30_TGE_ELEMENT_PAIE','29_30_TGE_ELEMENT_PAIE_RETRO','309','309_RETRO','30_SIMULATION_PAIE','40','40_RETRO','409','409_RETRO','40_SIMULATION_PAIE','50','509','60','60_RETRO','609','609_RETRO','60_ABSENCES','60_SIMULATION_PAIE','70','70_RETRO','70_SIMULATION_PAIE','99','ANNULATION','ANNULATION_RETRO','ANNULATION_PERIODE_EMPLOI','IJEDI','W566','W566_RETRO','WL70','WL70_RETRO') and ORIGINE_CARTE='RD'
##
TGE_REF_CARTE_FSED
'00','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'00','RD','SELECT','002','00',NULL,NULL,'2','0','FALSE',NULL,NULL
'00','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','004',NULL,'TGE_REF_PAC','STATION_WEB','6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','005','TGE',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','006',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','007','5.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','009',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','010','Z2M',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','012','4.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'PARAM_ORIGINE(NUMERO_ECHANGE)'
'00','RD','SELECT','015',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'00','RD','SELECT','016',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'00','RD','SELECT','017',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,'FORMATAGE_TYPE_PASSAGE'
'00','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'00','RD','SELECT','019','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','020','1.00',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','021','181',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','022',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','023',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','024',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','026',NULL,NULL,NULL,'153',NULL,'FALSE',NULL,NULL
'00','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'00','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC =  @@@NUMPAC@@@',NULL
'00_ALP','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'00_ALP','RD','SELECT','002','00',NULL,NULL,'2','0','FALSE',NULL,NULL
'00_ALP','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','004',NULL,'TGE_REF_PAC','STATION_WEB','6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','005','ALP',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','006',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','007','5.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','009',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','010','Z2M',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','012','4.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'PARAM_ORIGINE(NUMERO_ECHANGE)'
'00_ALP','RD','SELECT','015',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'00_ALP','RD','SELECT','016',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'00_ALP','RD','SELECT','017',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,'FORMATAGE_TYPE_PASSAGE'
'00_ALP','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'00_ALP','RD','SELECT','019','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','020','1.00',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','021','181',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','022',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','023',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','024',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','026',NULL,NULL,NULL,'153',NULL,'FALSE',NULL,NULL
'00_ALP','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'00_ALP','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC =  @@@NUMPAC@@@',NULL
'11','RD','SELECT','001',NULL,'TGE_REF_VRVAL','NUMERO_DE_PAC','6','0','FALSE',NULL,NULL
'11','RD','SELECT','002','11',NULL,NULL,'2','0','FALSE',NULL,NULL
'11','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','004',NULL,'TGE_REF_VRVAL','CODE_TABLE','3',NULL,'TRUE',NULL,'FORMATAGE_SUBSTRING(CODE_TABLE,0,3)'
'11','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,'FORMATAGE_SUBSTRING(CODE_TABLE,4,2)'
'11','RD','SELECT','007',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','008','V',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','009',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','011',NULL,'TGE_REF_VRVAL','NUMERO_DE_LIGNE','1',NULL,'FALSE','SUBSTR(@COLONNE_CIBLE@,9,1)',NULL
'11','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','013',NULL,'TGE_REF_VRVAL','LONGUEUR_INFO','3','0','FALSE',NULL,NULL
'11','RD','SELECT','014',NULL,'TGE_REF_VRVAL','ENREGISTREMENT','86',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','015',NULL,NULL,NULL,'66',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','016',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','018','3',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','019',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(LOGIN)'
'11','RD','SELECT','020',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'11','RD','SELECT','021',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','023',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','024',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','025',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'11','RD','SELECT','026',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'11','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRVAL',NULL
'11','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRREP',NULL
'11','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRVAL.NUMERO_DE_PAC = @@@NUMPAC@@@',NULL
'11','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRREP.NUMERO_DE_PAC = @@@NUMPAC@@@',NULL
'11','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRVAL.NUMERO_DE_PAC = TGE_REF_VRREP.NUMERO_DE_PAC',NULL
'11','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRVAL.CODE_TABLE = TGE_REF_VRREP.CODE_TABLE',NULL
'11','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRREP.TEMOIN_VR_BASE in(''O'',''K'')',NULL
'29_30_DIF_FSED','RD','SELECT','001',NULL,'DIF_FSED','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','001',NULL,'DIF_FSED_PARTIERETRO','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','004',NULL,'DIF_FSED','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','004',NULL,'DIF_FSED_PARTIERETRO','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','007',NULL,'DIF_FSED','ELEM','4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','007',NULL,'DIF_FSED_PARTIERETRO','ELEM','4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','009',NULL,'DIF_FSED','OCC','16',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','009',NULL,'DIF_FSED_PARTIERETRO','OCC','16',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','012',NULL,'DIF_FSED','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_DONNEE_VALEUR'
'29_30_DIF_FSED_RETRO','RD','SELECT','012',NULL,'DIF_FSED_PARTIERETRO','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_DONNEE_VALEUR'
'29_30_DIF_FSED','RD','SELECT','013',NULL,'DIF_FSED','TYPE_DONNEE','1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','013',NULL,'DIF_FSED_PARTIERETRO','TYPE_DONNEE','1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE_DONNEE'
'29_30_DIF_FSED','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'29_30_DIF_FSED','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'29_30_DIF_FSED','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'29_30_DIF_FSED','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','021','DIF_FSED_PARTIERETRO',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_DIF_FSED','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'29_30_DIF_FSED','RD','SELECT','024',NULL,'DIF_FSED','DTEFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')','FORMATAGE_DATE_EFFET'
'29_30_DIF_FSED_RETRO','RD','SELECT','024',NULL,'DIF_FSED_PARTIERETRO','DTEFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')','FORMATAGE_DATE_EFFET'
'29_30_DIF_FSED','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'29_30_DIF_FSED_RETRO','RD','SELECT','025',NULL,'DIF_FSED_PARTIERETRO','PERIODE','6',0,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'29_30_DIF_FSED','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','/*+ FULL(DIF_FSED)*/ TGE_REF_DICOZ.MASQUE',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','/*+ FULL(DIF_FSED_PARTIERETRO)*/ TGE_REF_DICOZ.MASQUE',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED.CODEOP',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED_PARTIERETRO.CODEOP',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED.CLE',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED_PARTIERETRO.CLE',NULL
'29_30_DIF_FSED','RD','FROM_WITH','001',NULL,'DAC',NULL,NULL,NULL,NULL,'WITH DAC AS (select /*+ MATERIALIZE */ C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') group by C.MATRIC,C.PACMAT,DACH.PAIEZAD)',NULL
'29_30_DIF_FSED','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED',NULL
'29_30_DIF_FSED_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED_PARTIERETRO',NULL
'29_30_DIF_FSED','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'29_30_DIF_FSED','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED_PARTIERETRO.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.ID_TRT = @@@ID_TRT@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.ID_TRT = @@@ID_TRT@@@',NULL
'29_30_DIF_FSED','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.PAIEZAD = DAC.PAIEZAD',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.PAIEZAD = DAC.PAIEZAD',NULL
'29_30_DIF_FSED','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.ELEM = TGE_REF_DICOZ.ELEMENT',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.ELEM = TGE_REF_DICOZ.ELEMENT',NULL
'29_30_DIF_FSED','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC = @@@NUMPAC@@@)',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC = @@@NUMPAC@@@)',NULL
'29_30_DIF_FSED','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'PAIEZAD,ELEM,CLE,CODEOP,OCC',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','001',NULL,'TGE_ELEMENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','004',NULL,'TGE_ELEMENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','007',NULL,'TGE_ELEMENTS_PAIE','CODE_ELEMENT','4',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','009',NULL,'TGE_ELEMENTS_PAIE','INDICATIF','16',NULL,'FALSE',NULL,'FORMATAGE_INDICATIF'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','011',NULL,'TGE_ELEMENTS_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','012',NULL,'TGE_ELEMENTS_PAIE','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_VALEUR'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','019',NULL,'TGE_ELEMENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','020',NULL,'TGE_ELEMENTS_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE','CASE WHEN TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT = ''*'' THEN '''' ELSE TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT END',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','021',NULL,'TGE_ELEMENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','022',NULL,'TGE_ELEMENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','023',NULL,'TGE_ELEMENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','024',NULL,'TGE_ELEMENTS_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'29_30_TGE_ELEMENT_PAIE_RETRO','RD','SELECT','025',NULL,'TGE_ELEMENTS_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ELEMENTS_PAIE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ELEMENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.PAIEZAD = DAC.PAIEZAD ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.CODE_ELEMENT = TGE_REF_DICOZ.ELEMENT ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_ELEMENTS_PAIE.ORIGINE is null or TGE_ELEMENTS_PAIE.ORIGINE = ''T'' or TGE_ELEMENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT is not null) ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ @@@PERIODE_PAIE@@@ and TGE_ELEMENTS_PAIE.ACTION_RETRO is null ',NULL
'29_30_TGE_ELEMENT_PAIE_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,' AND TGE_ELEMENTS_PAIE.PERIODE in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_ELEMENTS_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_ELEMENTS_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_ELEMENTS_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_ELEMENTS_PAIE.idpacmat) AND TGE_ELEMENTS_PAIE.ACTION_RETRO is not null ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD, TGE_ELEMENTS_PAIE.CODE_ELEMENT',NULL
'309','RD','SELECT','001',NULL,'MAJELEM','PAC','6','0','FALSE',NULL,NULL
'309','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'309','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','004',NULL,'MAJELEM','MATPAIE','8','0','FALSE',NULL,NULL
'309','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'309','RD','SELECT','007',NULL,'MAJELEM','NUMERO','4','0','FALSE',NULL,NULL
'309','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','009',NULL,'MAJELEM','INDICATI','16',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','011',NULL,'MAJELEM','SENS','1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','012',NULL,'MAJELEM','INFORMAT','40',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','015',NULL,NULL,NULL,'76',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','016',NULL,'MAJELEM','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'309','RD','SELECT','017',NULL,'MAJELEM','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'309','RD','SELECT','018',NULL,'MAJELEM','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'309','RD','SELECT','019',NULL,'MAJELEM','CODR','1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','020','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','021',NULL,'MAJELEM','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'309','RD','SELECT','022',NULL,'MAJELEM','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'309','RD','SELECT','023',NULL,'MAJELEM','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'309','RD','SELECT','024',NULL,'MAJELEM','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'309','RD','SELECT','025',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','026','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','029',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','030','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','031',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'309','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM',NULL
'309','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'309_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'309','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'309_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO = TO_CHAR(TO_DATE(MAJELEM.PERIODE,''MMYYYY''),''YYYYMM'')',NULL
'309','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'309_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT ',NULL
'309','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'309_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'309','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'309_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'309','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM.MATRICUL,MAJELEM.NUMERO',NULL
'30_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_ELEMENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_ELEMENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_ELEMENTS_PAIE','CODE_ELEMENT','4',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_ELEMENTS_PAIE','INDICATIF','16',NULL,'FALSE',NULL,'FORMATAGE_INDICATIF'
'30_SIMULATION_PAIE','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_ELEMENTS_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_ELEMENTS_PAIE','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_VALEUR'
'30_SIMULATION_PAIE','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'30_SIMULATION_PAIE','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'30_SIMULATION_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'30_SIMULATION_PAIE','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'30_SIMULATION_PAIE','RD','SELECT','019',NULL,'SIMU_TGE_ELEMENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'30_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_ELEMENTS_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE','CASE WHEN SIMU_TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT = ''*'' THEN '''' ELSE SIMU_TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT END',NULL
'30_SIMULATION_PAIE','RD','SELECT','021',NULL,'SIMU_TGE_ELEMENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'30_SIMULATION_PAIE','RD','SELECT','023',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'30_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'30_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_ELEMENTS_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'30_SIMULATION_PAIE','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','SIMU_TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'30_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'30_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_ELEMENTS_PAIE',NULL
'30_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'30_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_ELEMENTS_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'30_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'30_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_ELEMENTS_PAIE.PAIEZAD = DAC.PAIEZAD ',NULL
'30_SIMULATION_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_ELEMENTS_PAIE.CODE_ELEMENT = TGE_REF_DICOZ.ELEMENT ',NULL
'30_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD, SIMU_TGE_ELEMENTS_PAIE.CODE_ELEMENT',NULL
'40','RD','SELECT','001',NULL,'TGE_INCIDENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'40','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'40','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','004',NULL,'TGE_INCIDENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'40','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','007',NULL,'TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40','RD','SELECT','008',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','012',NULL,'TGE_INCIDENTS_PAIE','TYPE_IP','1',NULL,'FALSE','CASE WHEN @COLONNE_CIBLE@ = ''R'' THEN ''R'' WHEN @COLONNE_CIBLE@ = ''T'' THEN ''T'' ELSE '' '' END',NULL
'40','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','014','F',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','016',NULL,'TGE_INCIDENTS_PAIE','HEURES_T','5','0','TRUE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN '' '' ELSE nvl(TO_CHAR(TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_TRAVAILLEES'
'40','RD','SELECT','017',NULL,'TGE_INCIDENTS_PAIE','TEMOIN_HT','1','0','FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') and TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' ELSE ''0'' END',NULL
'40','RD','SELECT','018',NULL,'TGE_INCIDENTS_PAIE','HEURES_I','5','0','TRUE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') THEN '' '' ELSE nvl(TO_CHAR(TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_INCIDENT'
'40','RD','SELECT','019',NULL,'TGE_INCIDENTS_PAIE','TEMOIN_HI','1','0','FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') and TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') and CODE_IP is not null THEN ''1'' ELSE ''0'' END',NULL
'40','RD','SELECT','020',NULL,'TGE_INCIDENTS_PAIE','CODE_IP','5',NULL,'FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN to_char(TGE_INCIDENTS_PAIE.CODE_IP) ELSE '' '' END',NULL
'40','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','022',NULL,'TGE_INCIDENTS_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,'FORMATAGE_40_IMPUTATION'
'40','RD','SELECT','023',NULL,'TGE_INCIDENTS_PAIE','DOM_IMPUTATION','1',NULL,'FALSE','CASE WHEN TGE_INCIDENTS_PAIE.CODE_IMPUTATION is null THEN '''' ELSE CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') THEN ''1'' WHEN TGE_INCIDENTS_PAIE.TYPE_IP = ''R'' THEN ''H'' ELSE '' '' END END',NULL
'40','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','027',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'40','RD','SELECT','028',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'40','RD','SELECT','029',NULL,'TGE_INCIDENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'40','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','031',NULL,'TGE_INCIDENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','032',NULL,'TGE_INCIDENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'40','RD','SELECT','033',NULL,'TGE_INCIDENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'40','RD','SELECT','034',NULL,'TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40','RD','SELECT','035',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'40_RETRO','RD','SELECT','035',NULL,'TGE_INCIDENTS_PAIE','PERIODE','6',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')',NULL
'40','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','037',NULL,'TGE_INCIDENTS_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'40','RD','SELECT','041',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'40','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.TYPE_IP as TYPE_IP_FROM_TABLE',NULL
'40','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.CODE_IP as CODE_IP_FROM_TABLE',NULL
'40','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'40','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'40','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE',NULL
'40','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'40','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_PERIODE_RECUEIL_PAIEZAD',NULL
'40','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'40','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'40','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD  ',NULL
'40','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC',NULL
'40','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = TGE_PERIODE_RECUEIL_PAIEZAD.PAIEZAD',NULL
'40','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.ORIGINE is null or TGE_INCIDENTS_PAIE.ORIGINE = ''T'' or TGE_INCIDENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_T2 = ''W'' or ( MODE_T2 = ''R'' and ENVOI_MODE_R = ''O'' )))) ',NULL
'40','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' or (TGE_INCIDENTS_PAIE.TYPE_IP=''T'' and TGE_REF_PAC.ENVOI_HP = ''O''))',NULL
'40','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') @@@OPERATEUR_RETRO@@@ TGE_REF_PAC.PERIODEENCOURS and TGE_INCIDENTS_PAIE.ACTION_RETRO is null ',NULL
'40_RETRO','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,' and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_INCIDENTS_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_INCIDENTS_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_INCIDENTS_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_INCIDENTS_PAIE.idpacmat ) and NVL(TGE_INCIDENTS_PAIE.DERNIER_CODE_OPE,''M'')!=''S'' ',NULL
'40','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE = TGE_REF_PAC.PERIODEENCOURS',NULL
'40_RETRO','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') = TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE',NULL
'40','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_INCIDENTS_PAIE.TYPE_IP = ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_GENERATION_HP and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_GENERATION_HP and tge_ref_pac.envoi_hp =''O'')',NULL
'40','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET <= TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'40_RETRO','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PERIODE_RECUEIL and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'40','RD','WHERE','012',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_RECUEIL_RETRO and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_RECUEIL_RETRO and tge_ref_pac.gc_retro =''O'' AND RETRO_GC is not null))',NULL
'40','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_INCIDENTS_PAIE.DATE_EFFET',NULL
'409','RD','SELECT','001',NULL,'POINTAGE','PAC','6','0','FALSE',NULL,NULL
'409','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'409','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','004',NULL,'POINTAGE','MATPAIE','8','0','FALSE',NULL,NULL
'409','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'409','RD','SELECT','007',NULL,'POINTAGE','PTJDEB','8',NULL,'FALSE','TO_CHAR(PTJDEB,''YYYYMMDD'')',NULL
'409','RD','SELECT','008',NULL,'POINTAGE','PTJFIN','8',NULL,'FALSE','TO_CHAR(PTJFIN,''YYYYMMDD'')',NULL
'409','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','016',NULL,'POINTAGE','PTJHT','5','0','TRUE',NULL,'FORMATAGE_40_HEURES_TRAVAILLEES'
'409','RD','SELECT','017',NULL,'POINTAGE','PTJHT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'409','RD','SELECT','018',NULL,'POINTAGE','PTJHI','5','0','TRUE',NULL,'FORMATAGE_40_HEURES_INCIDENT'
'409','RD','SELECT','019',NULL,'POINTAGE','PTJHI','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'409','RD','SELECT','020',NULL,'POINTAGE','PTJCI','5',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','022',NULL,'POINTAGE','IMP','18',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','023',NULL,'POINTAGE','DOMIMP','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','024',NULL,'POINTAGE','REF','6',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','025',NULL,'POINTAGE','DOMREF','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','027',NULL,'POINTAGE','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'409','RD','SELECT','028',NULL,'POINTAGE','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'409','RD','SELECT','029',NULL,'POINTAGE','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'409','RD','SELECT','030',NULL,'POINTAGE','CODR','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','031','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','032',NULL,'POINTAGE','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'409','RD','SELECT','033',NULL,'POINTAGE','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'409','RD','SELECT','034',NULL,'POINTAGE','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'409','RD','SELECT','035',NULL,'POINTAGE','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'409','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','037','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','041','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE',''' '' as TYPE_IP_FROM_TABLE',NULL
'409','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE',''' '' as CODE_IP_FROM_TABLE',NULL
'409','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE',NULL
'409','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'409_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'409','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'409_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO = TO_CHAR(TO_DATE(POINTAGE.PERIODE,''MMYYYY''),''YYYYMM'')',NULL
'409','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'409_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT',NULL
'409','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'409_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'409','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'409_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'409','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE.MATRICUL',NULL
'40_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_INCIDENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_INCIDENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_INCIDENTS_PAIE','TYPE_IP','1',NULL,'FALSE','CASE WHEN @COLONNE_CIBLE@ = ''R'' THEN ''R'' WHEN @COLONNE_CIBLE@ = ''T'' THEN ''T'' ELSE '' '' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','014','F',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_INCIDENTS_PAIE','HEURES_T','5','0','TRUE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN '' '' ELSE nvl(TO_CHAR(SIMU_TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_TRAVAILLEES'
'40_SIMULATION_PAIE','RD','SELECT','017',NULL,'SIMU_TGE_INCIDENTS_PAIE','TEMOIN_HT','1','0','FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') and SIMU_TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' ELSE ''0'' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_INCIDENTS_PAIE','HEURES_I','5','0','TRUE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') THEN '' '' ELSE nvl(TO_CHAR(SIMU_TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_INCIDENT'
'40_SIMULATION_PAIE','RD','SELECT','019',NULL,'SIMU_TGE_INCIDENTS_PAIE','TEMOIN_HI','1','0','FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') and SIMU_TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') and CODE_IP is not null THEN ''1'' ELSE ''0'' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_INCIDENTS_PAIE','CODE_IP','5',NULL,'FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN to_char(SIMU_TGE_INCIDENTS_PAIE.CODE_IP) ELSE '' '' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_INCIDENTS_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,'FORMATAGE_40_IMPUTATION'
'40_SIMULATION_PAIE','RD','SELECT','023',NULL,'SIMU_TGE_INCIDENTS_PAIE','DOM_IMPUTATION','1',NULL,'FALSE','CASE WHEN SIMU_TGE_INCIDENTS_PAIE.CODE_IMPUTATION is null THEN '''' ELSE CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') THEN ''1'' WHEN SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'' THEN ''H'' ELSE '' '' END END',NULL
'40_SIMULATION_PAIE','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','027',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'40_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'40_SIMULATION_PAIE','RD','SELECT','029',NULL,'SIMU_TGE_INCIDENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'40_SIMULATION_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_INCIDENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'40_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'40_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_INCIDENTS_PAIE','PERIODE','6',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','037',NULL,'SIMU_TGE_INCIDENTS_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'40_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.TYPE_IP as TYPE_IP_FROM_TABLE',NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.CODE_IP as CODE_IP_FROM_TABLE',NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'40_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'40_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE',NULL
'40_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'40_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'40_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'40_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD  ',NULL
'40_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_INCIDENTS_PAIE.DATE_EFFET',NULL
'50','RD','SELECT','001',NULL,'TGE_IMPUTATIONS','NUMPAC','6','0','FALSE',NULL,NULL
'50','RD','SELECT','002','50',NULL,NULL,'2','0','FALSE',NULL,NULL
'50','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','004',NULL,'TGE_IMPUTATIONS','PAIEZAD','8','0','TRUE',NULL,NULL
'50','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','007',NULL,'TGE_IMPUTATIONS','NB_UNITE','15','0','TRUE',NULL,'FORMATAGE_NBRE_IMPUTATION'
'50','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','009',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','011',NULL,'TGE_IMPUTATIONS','IMPUTATION','18',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','015',NULL,NULL,NULL,'106',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','016',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'50','RD','SELECT','017',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'50','RD','SELECT','018',NULL,'TGE_IMPUTATIONS','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'50','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','020',NULL,'TGE_IMPUTATIONS','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','021',NULL,'TGE_IMPUTATIONS','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'50','RD','SELECT','022',NULL,'TGE_IMPUTATIONS','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'50','RD','SELECT','023',NULL,'TGE_IMPUTATIONS','PERIODE','8',NULL,'FALSE','@COLONNE_CIBLE@||''01''',NULL
'50','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'50','RD','SELECT','025',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','026',NULL,'TGE_IMPUTATIONS','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','029',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'50','RD','SELECT','030',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'50','RD','SELECT','031',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'50','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'50','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'50','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_IMPUTATIONS',NULL
'50','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_IMPUTATIONS.NUMPAC = @@@NUMPAC@@@',NULL
'50','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.PAIEZAD = DAC.PAIEZAD',NULL
'50','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.DERNIER_CODE_OPE <> ''S''',NULL
'50','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_IMPUTATIONS.ORIGINE is null or TGE_IMPUTATIONS.ORIGINE = ''T'' or TGE_IMPUTATIONS.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( (MODE_3060 = ''R'' or MODE_3060 = ''F'') and ENVOI_MODE_R = ''O'' ))))',NULL
'50','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.PERIODE <= @@@PERIODE_PAIE@@@',NULL
'50','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'509','RD','SELECT','001',NULL,'MAJIMPU','PAC','6','0','FALSE',NULL,NULL
'509','RD','SELECT','002','50',NULL,NULL,'2','0','FALSE',NULL,NULL
'509','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','004',NULL,'MAJIMPU','MATPAIE','8','0','FALSE',NULL,NULL
'509','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'509','RD','SELECT','007',NULL,'MAJIMPU','NOMBRE','15','0','FALSE',NULL,NULL
'509','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','009',NULL,'MAJIMPU','CODEUTIL','3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','011',NULL,'MAJIMPU','IMPUTATI','18',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','014',NULL,NULL,NULL,'106',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','015',NULL,'MAJIMPU','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'509','RD','SELECT','016',NULL,'MAJIMPU','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'509','RD','SELECT','017',NULL,'MAJIMPU','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'509','RD','SELECT','018',NULL,'MAJIMPU','CODR','1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','019','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','020',NULL,'MAJIMPU','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'509','RD','SELECT','021',NULL,'MAJIMPU','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'509','RD','SELECT','022',NULL,'MAJIMPU','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'509','RD','SELECT','023',NULL,'MAJIMPU','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'509','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','025','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','026',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','028','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','029',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'509','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU',NULL
'509','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'509','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'509','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJIMPU.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'509','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'509','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJIMPU.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'509','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU.MATRICUL',NULL
'60','RD','SELECT','001',NULL,'TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'60','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','007',NULL,'TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','009',NULL,'TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'60','RD','SELECT','010',NULL,'TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','011',NULL,'TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60','RD','SELECT','012',NULL,'TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','013',NULL,'TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60','RD','SELECT','014',NULL,'TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','015',NULL,'TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'60','RD','SELECT','016',NULL,'TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','018',NULL,'TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','020',NULL,'TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','022',NULL,'TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'60','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','024',NULL,'TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','025',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','026',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','027',NULL,NULL,NULL,'9',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60','RD','SELECT','030',NULL,'TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'60','RD','SELECT','031',NULL,'TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','032',NULL,'TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','033',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60','RD','SELECT','034',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60','RD','SELECT','035',NULL,'TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60','RD','SELECT','036',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'60_RETRO','RD','SELECT','036',NULL,'TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','038',NULL,'TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'60','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'60','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE',NULL
'60','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'60','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.TYPE_DONNEE = ''1''',NULL
'60','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'60','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_DONNEES_PAIE.ORIGINE is null or TGE_DONNEES_PAIE.ORIGINE = ''T'' or TGE_DONNEES_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_DONNEES_PAIE.CODE_REMPLACEMENT is not null)',NULL
'60','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ (SELECT PERIODEENCOURS FROM TGE_REF_PAC WHERE NUMPAC = @@@NUMPAC@@@) and TGE_DONNEES_PAIE.ACTION_RETRO is null',NULL
'60_RETRO','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_DONNEES_PAIE.PERIODE in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_DONNEES_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_DONNEES_PAIE.idpacmat) AND TGE_DONNEES_PAIE.ACTION_RETRO is not null ',NULL
'60','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'609','RD','SELECT','001',NULL,'RUBDV','PAC','6','0','FALSE',NULL,NULL
'609','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,'FORMATAGE_NUMERO_CARTE_609'
'609','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','004',NULL,'RUBDV','MATPAIE','8','0','FALSE',NULL,NULL
'609','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'609','RD','SELECT','007',NULL,'RUBDV','RUBCOD','4','0','FALSE',NULL,NULL
'609','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','009',NULL,'RUBDV','RUBMTS','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'609','RD','SELECT','010',NULL,'RUBDV','RUBMTS','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','011',NULL,'RUBDV','RUBNBR','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'609','RD','SELECT','012',NULL,'RUBDV','RUBNBR','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','013',NULL,'RUBDV','RUBTAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'609','RD','SELECT','014',NULL,'RUBDV','RUBTAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','015',NULL,'RUBDV','RUBPCT','6',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','016',NULL,'RUBDV','RUBDOM','1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','018',NULL,'RUBDV','RUBSIGNE','1',NULL,'FALSE',NULL,'FORMATAGE_RUBSIGNE'
'609','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','020',NULL,'RUBDV','RUBIMPU','18',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','022',NULL,NULL,NULL,'10',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','023',NULL,NULL,NULL,'55',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','024',NULL,'RUBDV','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'609','RD','SELECT','025',NULL,'RUBDV','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'609','RD','SELECT','026',NULL,'RUBDV','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'609','RD','SELECT','027',NULL,'RUBDV','CODR','1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','028','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','029',NULL,'RUBDV','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'609','RD','SELECT','030',NULL,'RUBDV','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'609','RD','SELECT','031',NULL,'RUBDV','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'609','RD','SELECT','032',NULL,'RUBDV','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'609','RD','SELECT','033',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','034','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','035',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','036',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','037',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','039','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','040',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'609','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV',NULL
'609','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'609_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'609','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'609_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO =  TO_CHAR(TO_DATE(RUBDV.PERIODE,''MMYYYY''),''YYYYMM'') ',NULL
'609','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'609_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT',NULL
'609','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'609_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'609','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'609_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'609','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV.MATRICUL,RUBDV.RUBCOD',NULL
'60_ABSENCES','RD','SELECT','001',NULL,'TGE_ABSENCES','NUMPAC','6','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60_ABSENCES','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','007',NULL,'TGE_REF_PRE','RUB_ECHANGE','4',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','008',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','009',NULL,'TGE_ABSENCES','DUREE_CALC','15','0','TRUE','CASE WHEN TGE_REF_PRE.UNITE_TENUE = ''H'' THEN to_char(TGE_ABSENCES.DUREE_CALC_HEURES) WHEN TGE_REF_PRE.UNITE_TENUE = ''C'' THEN to_char(TGE_ABSENCES.DUREE_CALC_CALENDAIRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''O'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''S'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRABLE) WHEN TGE_REF_PRE.UNITE_TENUE = ''U'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OEUVRE) ELSE '''' END','FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_ABSENCES','RD','SELECT','010',NULL,'TGE_ABSENCES','TEMOIN_DUREE_CALC','1',NULL,'FALSE','CASE WHEN TGE_REF_PRE.UNITE_TENUE = ''H'' THEN to_char(TGE_ABSENCES.DUREE_CALC_HEURES) WHEN TGE_REF_PRE.UNITE_TENUE = ''C'' THEN to_char(TGE_ABSENCES.DUREE_CALC_CALENDAIRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''O'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''S'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRABLE) WHEN TGE_REF_PRE.UNITE_TENUE = ''U'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OEUVRE) ELSE '''' END','VALEUR_CONDITIONEE(NULL;0;1)'
'60_ABSENCES','RD','SELECT','011',NULL,NULL,NULL,'110',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','012',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60_ABSENCES','RD','SELECT','013',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60_ABSENCES','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','016',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(LOGIN)'
'60_ABSENCES','RD','SELECT','017',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60_ABSENCES','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60_ABSENCES','RD','SELECT','019',NULL,'TGE_ABSENCES','DATE_DEBUT','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_ABSENCES','RD','SELECT','020',NULL,'TGE_REF_PAC','PERIODEENCOURS','6',NULL,'FALSE','@COLONNE_CIBLE@||''01''',NULL
'60_ABSENCES','RD','SELECT','021',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','022','TT',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','023',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','024',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60_ABSENCES','RD','SELECT','026',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','027',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','distinct TGE_INCIDENTS_PAIE.CLE_ABSENCE',NULL
'60_ABSENCES','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60_ABSENCES','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'60_ABSENCES','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE',NULL
'60_ABSENCES','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES',NULL
'60_ABSENCES','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PRE',NULL
'60_ABSENCES','RD','FROM','005',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'60_ABSENCES','RD','FROM','006',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_PERIODE_RECUEIL_PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.NUMPAC = TGE_REF_PRE.NUMPAC',NULL
'60_ABSENCES','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MATRIC = DAC.MATRIC',NULL
'60_ABSENCES','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.ID = TGE_INCIDENTS_PAIE.CLE_ABSENCE',NULL
'60_ABSENCES','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC',NULL
'60_ABSENCES','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = TGE_PERIODE_RECUEIL_PAIEZAD.PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MOTIF = TGE_REF_PRE.CODE_INCIDENT',NULL
'60_ABSENCES','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.RUB_ECHANGE is not null',NULL
'60_ABSENCES','RD','WHERE','012',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.ORIGINE is null or TGE_INCIDENTS_PAIE.ORIGINE = ''T'' or TGE_INCIDENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_T2 = ''W'' or ( MODE_T2 = ''R'' and ENVOI_MODE_R = ''O'' )))) ',NULL
'60_ABSENCES','RD','WHERE','013',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' or (TGE_INCIDENTS_PAIE.TYPE_IP=''T'' and TGE_REF_PAC.ENVOI_HP = ''O''))',NULL
'60_ABSENCES','RD','WHERE','014',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') <= TGE_REF_PAC.PERIODEENCOURS',NULL
'60_ABSENCES','RD','WHERE','015',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') = TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE',NULL
'60_ABSENCES','RD','WHERE','016',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_INCIDENTS_PAIE.TYPE_IP = ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_GENERATION_HP and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_GENERATION_HP and tge_ref_pac.envoi_hp =''O'')',NULL
'60_ABSENCES','RD','WHERE','017',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PERIODE_RECUEIL and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'60_ABSENCES','RD','WHERE','018',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_RECUEIL_RETRO and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_RECUEIL_RETRO and tge_ref_pac.gc_retro =''O'' AND RETRO_GC is not null))',NULL
'60_ABSENCES','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_REF_PRE.RUB_ECHANGE',NULL
'60_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'60_SIMULATION_PAIE','RD','SELECT','010',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','013',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_SIMULATION_PAIE','RD','SELECT','014',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','015',NULL,'SIMU_TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'60_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'60_SIMULATION_PAIE','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','026',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','027',NULL,NULL,NULL,'9',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60_SIMULATION_PAIE','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60_SIMULATION_PAIE','RD','SELECT','030',NULL,'SIMU_TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'60_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','036',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','038',NULL,'SIMU_TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'60_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'60_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE',NULL
'60_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'60_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE = ''1''',NULL
'60_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70','RD','SELECT','001',NULL,'TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'70','RD','SELECT','002','70',NULL,NULL,'2','0','FALSE',NULL,NULL
'70','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','004',NULL,'TGE_DONNEES_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'70','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','007',NULL,'TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','009',NULL,'TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'70','RD','SELECT','010',NULL,'TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','011',NULL,'TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70','RD','SELECT','012',NULL,'TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','013',NULL,'TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70','RD','SELECT','014',NULL,'TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','015',NULL,'TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'70','RD','SELECT','016',NULL,'TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','018',NULL,'TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','020',NULL,'TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','022',NULL,'TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'70','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','024',NULL,'TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','025',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','026',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','027',NULL,'TGE_DONNEES_PAIE','PERIODE_AFFECTATION','9',NULL,'FALSE','CASE WHEN ( nvl(TO_CHAR(@COLONNE_CIBLE@,''YYYYMM''),'''') is null) THEN '''' ELSE CASE WHEN (TGE_REF_PAC.MPE=''S'') THEN TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||'' '' ELSE TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')||''001'' END END',NULL
'70','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'70','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'70','RD','SELECT','030',NULL,'TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'70','RD','SELECT','031',NULL,'TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','032',NULL,'TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','033',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70','RD','SELECT','034',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'70','RD','SELECT','035',NULL,'TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70','RD','SELECT','036',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'70_RETRO','RD','SELECT','036',NULL,'TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','038',NULL,'TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'70','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'70','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'70','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'70','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'70','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'70','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE',NULL
'70','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'70','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'70','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'70','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.TYPE_DONNEE in (''2'',''3'')',NULL
'70','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'70','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'70','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_DONNEES_PAIE.ORIGINE is null or TGE_DONNEES_PAIE.ORIGINE = ''T'' or TGE_DONNEES_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_DONNEES_PAIE.CODE_REMPLACEMENT is not null)',NULL
'70','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ (SELECT PERIODEENCOURS FROM TGE_REF_PAC WHERE NUMPAC = @@@NUMPAC@@@) and TGE_DONNEES_PAIE.ACTION_RETRO is null',NULL
'70_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_DONNEES_PAIE.PERIODE in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_DONNEES_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_DONNEES_PAIE.idpacmat) AND TGE_DONNEES_PAIE.ACTION_RETRO is not null ',NULL
'70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','002','70',NULL,NULL,'2','0','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_DONNEES_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'70_SIMULATION_PAIE','RD','SELECT','010',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','013',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70_SIMULATION_PAIE','RD','SELECT','014',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','015',NULL,'SIMU_TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'70_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'70_SIMULATION_PAIE','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','026',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','027',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_AFFECTATION','9',NULL,'FALSE','CASE WHEN ( nvl(TO_CHAR(@COLONNE_CIBLE@,''YYYYMM''),'''') is null) THEN '''' ELSE CASE WHEN (TGE_REF_PAC.MPE=''S'') THEN TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||'' '' ELSE TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')||''001'' END END',NULL
'70_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'70_SIMULATION_PAIE','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'70_SIMULATION_PAIE','RD','SELECT','030',NULL,'SIMU_TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'70_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'70_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','036',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','038',NULL,'SIMU_TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'70_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'70_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'70_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'70_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE',NULL
'70_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'70_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'70_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'70_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE in (''2'',''3'')',NULL
'70_SIMULATION_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'70_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'99','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'99','RD','SELECT','002','99',NULL,NULL,'2','0','FALSE',NULL,NULL
'99','RD','SELECT','003',NULL,NULL,NULL,'12',NULL,'FALSE',NULL,NULL
'99','RD','SELECT','004',NULL,NULL,NULL,'7','0','TRUE',NULL,'FORMATAGE_NBRE_LIGNE'
'99','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'99','RD','SELECT','006',NULL,NULL,NULL,'8','0','TRUE',NULL,'FORMATAGE_NBRE_CARACTERE'
'99','RD','SELECT','007',NULL,NULL,NULL,'204',NULL,'FALSE',NULL,NULL
'99','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'99','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'ANNULATION','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','007','££££',NULL,NULL,'4','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','012',NULL,NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'ANNULATION','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'ANNULATION','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'ANNULATION','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'ANNULATION','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'ANNULATION_RETRO','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'ANNULATION_RETRO','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'ANNULATION','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'ANNULATION','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'ANNULATION_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ), TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO)AS((select PACMAT,NUMPAC,PERIODE_RETRO from GAP_RETRO_MATRIC mat where mat.NUMPAC = @@@NUMPAC@@@)union all(select distinct PACMAT,NUMPAC ,PERIODE_RETRO from GAP_SELECTION_RETRO sel where sel.NUMPAC = @@@NUMPAC@@@ and not exists (select 1  from GAP_RETRO_MATRIC gap where gap.NUMPAC =sel.numpac and gap.pacmat=sel.pacmat  and gap.periode_retro=sel.periode_retro ))UNION ALL (select pacmat,numpac,periode_retro from(SELECT numpac,pacmat,TO_CHAR(date_R.mois,''YYYYMM'') AS periode_retro FROM(SELECT TRUNC(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois FROM dual CONNECT BY TRUNC (ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''))date_R ,(SELECT numpac,pacmat,min( periode_retro) as periode_retro FROM GAP_TRT_MOIS_RETRO WHERE id_trt =@@@ID_TRT@@@ and numpac=@@@NUMPAC@@@ group by numpac,pacmat) gap Where date_R.mois>=to_date(gap.periode_retro,''YYYYMM''))interm WHERE NOT EXISTS (SELECT 1 FROM GAP_RETRO_MATRIC gap WHERE gap.NUMPAC     =interm.numpac AND gap.pacmat       =interm.pacmat AND gap.periode_retro=interm.periode_retro )AND NOT EXISTS (SELECT 1 FROM GAP_SELECTION_RETRO gap WHERE gap.NUMPAC     =interm.numpac AND gap.pacmat       =interm.pacmat AND gap.periode_retro=interm.periode_retro )))SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC,RETRO.PERIODE_RETRO AS PERIODE, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,TABLE_RETRO RETRO WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND RETRO.NUMPAC =C.NUMPAC  AND RETRO.PACMAT =C.PACMAT AND to_date(RETRO.PERIODE_RETRO,''yyyymm'') >= trunc(DACS.dsdsc,''month'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ,RETRO.PERIODE_RETRO) DAC',NULL
'ANNULATION','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and DAC.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC=@@@NUMPAC@@@)',NULL
'ANNULATION','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','001',NULL,'DELETED_PAIEZAD','NUMPAC','6','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','004',NULL,'DELETED_PAIEZAD','PAIEZAD','8','0','TRUE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','007','$$$$',NULL,NULL,'4','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','012',NULL,NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','017',NULL,'DELETED_PAIEZAD','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','018',NULL,'DELETED_PAIEZAD','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD',NULL
'ANNULATION_PERIODE_EMPLOI','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION_PERIODE_EMPLOI','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION_PERIODE_EMPLOI','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC=@@@NUMPAC@@@ and (TGE_REF_PAC.MPE is not null and TGE_REF_PAC.MPE <> ''N'')',NULL
'ANNULATION_PERIODE_EMPLOI','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD.PAIEZAD',NULL
'IJEDI','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'IJEDI','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'IJEDI','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'IJEDI','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','007','T653',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','009',NULL,'TGE_ABSENCES','DATE_DEBUT','16',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||MOTIF',NULL
'IJEDI','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','012',NULL,'TGE_ABSENCES','DATE_FIN','40',NULL,'FALSE','least(TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD''),nvl(TO_CHAR(DAC.DATE_SORTIE_SIT_BO,''YYYYMMDD''),''20991231''))',NULL
'IJEDI','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'IJEDI','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'IJEDI','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'IJEDI','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'IJEDI','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','021',NULL,'TGE_ABSENCES','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','022',NULL,'TGE_ABSENCES','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'IJEDI','RD','SELECT','023',NULL,'TGE_ABSENCES','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'IJEDI','RD','SELECT','024',NULL,'TGE_REF_PAC','PERIODEENCOURS','8',NULL,'FALSE','@COLONNE_CIBLE@||''01''','FORMATAGE_DATE_EFFET'
'IJEDI','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'IJEDI','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'IJEDI','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'IJEDI','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'IJEDI','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'IJEDI','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'IJEDI','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ABSENCES.MOTIF',NULL
'IJEDI','RD','SELECT_EN_PLUS','005',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ABSENCES.ID',NULL
'IJEDI','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'IJEDI','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES',NULL
'IJEDI','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'IJEDI','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'IJEDI','RD','FROM','005',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PRE',NULL
'IJEDI','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.IJEDI in (''M'',''E'')',NULL
'IJEDI','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MOTIF = TGE_REF_PRE.CODE_INCIDENT',NULL
'IJEDI','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MATRIC = DAC.MATRIC',NULL
'IJEDI','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.MOTIF_ABS is not null',NULL
'IJEDI','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.OPTION_CONSERV_HISTO = ''A''',NULL
'IJEDI','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.ELEMENT = ''T653''',NULL
'IJEDI','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_ABSENCES.DATE_DEBUT <= DAC.DSDCN and (DAC.DSDCN is null or (TGE_ABSENCES.DATE_FIN >= DAC.DSDCN))) or (TGE_ABSENCES.DATE_DEBUT >= DAC.DSDCN and (DAC.DATE_SORTIE_SIT_BO is null or (TGE_ABSENCES.DATE_DEBUT <= DAC.DATE_SORTIE_SIT_BO))))',NULL
'IJEDI','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'W566','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'W566','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'W566','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'W566','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','007','W566',NULL,NULL,'4','0','FALSE',NULL,NULL
'W566','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','012','200',NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','013','N',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'W566','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'W566','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'W566','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'W566','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'W566','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'W566_RETRO','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'W566','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'W566_RETRO','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'W566','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'W566','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'W566','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'W566_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO)AS ((SELECT PACMAT,NUMPAC,PERIODE_RETRO FROM GAP_RETRO_MATRIC mat WHERE mat.NUMPAC = @@@NUMPAC@@@)UNION ALL(SELECT PACMAT,NUMPAC,PERIODE_RETRO FROM GAP_SELECTION_RETRO sel WHERE sel.NUMPAC = @@@NUMPAC@@@)) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') as periode, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'')  AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois >=trunc(DACS.dsdsc,''month'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') ) DAC',NULL
'W566','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'W566','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'W566','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'W566_RETRO','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
'WL70','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'WL70','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'WL70','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'WL70','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','007','WL70',NULL,NULL,'4','0','FALSE',NULL,NULL
'WL70','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','012',NULL,'DAC','DTRETRO','40',NULL,'FALSE',NULL,NULL
'WL70_RETRO','RD','SELECT','012',NULL,'DAC','DSDSC','40',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'WL70','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'WL70','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'WL70','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'WL70','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'WL70','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'WL70','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'WL70','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'WL70','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'WL70','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT, DACH2.PAIEZAD) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )<= TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO) AS (SELECT PACMAT,NUMPAC,min(PERIODE_RETRO) over (partition by PACMAT, NUMPAC) FROM GAP_RETRO_MATRIC_ALL WHERE NUMPAC = @@@NUMPAC@@@) SELECT C.PACMAT, DACS.PAIEZAD, C.MATRIC, to_char(D.mois,''yyyymm'') as periode,  MIN(DACS.DSDSC) DSDSC, MAX(DACS.DSFSC) DSFSC, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO, TO_CHAR(trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month''),''ddmmyyyy'') DTRETRO   FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D, TABLE_RETRO R WHERE C.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and R.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'')  AND DACS.PACMAT= R.PACMAT AND DACS.DSDSC <= trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month'') AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois <=trunc(DACS.dsfsc,''month'') GROUP BY C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm''),R.PERIODE_RETRO ) DAC',NULL
'WL70_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT, DACH2.PAIEZAD) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )<= TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO) AS (SELECT PACMAT,NUMPAC,min(PERIODE_RETRO) over (partition by PACMAT, NUMPAC) FROM GAP_RETRO_MATRIC_ALL WHERE NUMPAC = @@@NUMPAC@@@) SELECT C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') as periode,  TO_CHAR(MIN(DACS.DSDSC),''ddmmyyyy'') DSDSC, MAX(DACS.DSFSC) DSFSC,MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO, TO_CHAR(MIN(DACS.DSDSC),''yyyymm'') MOISCOMP FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D, TABLE_RETRO R WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and R.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT AND DACS.PACMAT= R.PACMAT and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND DACS.DSDSC >= trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month'') AND DACS.DSFSC >= LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')) AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois <=trunc(DACS.dsfsc,''month'') GROUP BY C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm''),R.PERIODE_RETRO ) DAC',NULL
'WL70','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'WL70','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'WL70_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@ AND DAC.PERIODE >=DAC.MOISCOMP',NULL
'WL70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
'WL70_RETRO','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
##
TAG_CHARSET=@€éèç
##
TGE_REF_ENVOI_PAI
=SQL IFNOTEXIST=TGE_REF_ENVOI_PAI=
CREATE TABLE TGE_REF_ENVOI_PAI (ORIGINE VARCHAR2(10), CODE_REQ VARCHAR2(10), ORDRE_REQ VARCHAR2(10), REQUETE CLOB, PRIMARY KEY (ORIGINE,CODE_REQ,ORDRE_REQ))
##
TGE_REF_ENVOI_PAI
==
DELETE FROM TGE_REF_ENVOI_PAI
##
TGE_REF_ENVOI_PAI (ORIGINE,CODE_REQ,ORDRE_REQ,REQUETE)
'RD','PAI2','1','SELECT R.pacmat, R.paiezad, C.numcnt, R.entree AS DEB_EMP, NVL(R.sortie, to_date(''31.12.2099'', ''dd.MM.yyyy'')) AS FIN_EMP, NVL(R.DEBUT_PERIODE_RECUEIL, to_date(''19000101'',''yyyymmdd'')) AS DEB_REC, NVL(R.FIN_PERIODE_RECUEIL, to_date(''19000102'',''yyyymmdd'')) AS FIN_REC, CS.CODE_CHRONO AS CODE_CHRONO FROM tge_periode_recueil_paiezad R JOIN (SELECT numpac, mois_paie, debut_periode_recueil, fin_periode_recueil FROM (SELECT S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil, COUNT(paiezad) AS nb_Dossier FROM gap_trt_liste_mat T JOIN tge_periode_recueil_paiezad S ON S.numpac = T.numpac AND S.pacmat = T.pacmat WHERE T.id_trt = @@@ID_TRT@@@ AND S.mois_paie = @@@PERIODE_PAIE@@@ GROUP BY S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil ORDER BY COUNT(paiezad) DESC ) WHERE rownum = 1 ) P ON P.mois_paie = R.mois_paie AND P.numpac = R.numpac AND (P.debut_periode_recueil IS NULL OR P.debut_periode_recueil = NVL(R.debut_periode_recueil, to_date(''19000101'',''yyyymmdd''))) AND (P.fin_periode_recueil IS NULL OR P.fin_periode_recueil = NVL(R.fin_periode_recueil, to_date(''19000102'',''yyyymmdd''))) JOIN dic_adm_contrat_histo H ON H.numpac = R.numpac AND H.pacmat = R.pacmat AND H.paiezad =R.paiezad AND H.za996 = ''W'' JOIN dic_adm_contrat C ON C.numpac= R.numpac AND C.pacmat= R.pacmat AND C.numcnt= H.numcnt AND C.dsdcn = R.entree JOIN dic_adm_contrat_situ CS ON CS.numpac = C.numpac AND CS.pacmat = C.pacmat AND CS.numcnt = C.numcnt AND CS.paiezad = C.current_paiezad JOIN gap_trt_liste_mat T ON T.numpac = R.numpac AND R.pacmat = T.pacmat WHERE (P.fin_periode_recueil IS NULL OR NVL(R.fin_periode_recueil,P.fin_periode_recueil) BETWEEN H.date_eff AND H.DATE_SORTIE_SIT_BO) AND T.id_trt = @@@ID_TRT@@@ AND NOT EXISTS (SELECT 1 FROM TGE_PERIODE_RECUEIL_PAIEZAD S WHERE S.paiezad = R.paiezad AND S.RETOUR_SUSPENSION >= S.sortie AND S.mois_paie =R.mois_paie AND S.numpac =T.numpac )'
'RD','PAI2_RETRO','1','SELECT R.pacmat, R.paiezad, C.numcnt, R.entree AS DEB_EMP, NVL(R.sortie, to_date(''31.12.2099'', ''dd.MM.yyyy'')) AS FIN_EMP, NVL(R.DEBUT_PERIODE_RECUEIL, to_date(''19000101'',''yyyymmdd'')) AS DEB_REC, NVL(R.FIN_PERIODE_RECUEIL, to_date(''19000102'',''yyyymmdd'')) AS FIN_REC, CS.CODE_CHRONO AS CODE_CHRONO FROM tge_periode_recueil_paiezad R JOIN ( SELECT numpac, mois_paie, debut_periode_recueil, fin_periode_recueil FROM ( SELECT S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil, COUNT(paiezad) AS nb_Dossier FROM ( SELECT NUMPAC, PACMAT FROM GAP_RETRO_MATRIC where periode_retro = @@@PERIODE_RETRO@@@ UNION SELECT NUMPAC, PACMAT FROM GAP_SELECTION_RETRO where periode_retro = @@@PERIODE_RETRO@@@ ) T JOIN gap_trt_liste_mat L ON L.numpac = T.numpac AND L.pacmat = L.pacmat JOIN tge_periode_recueil_paiezad S ON S.numpac = T.numpac AND S.pacmat = T.pacmat  JOIN TGE_MODIF_PACMAT_RETRO PR ON PR.NUMPAC = L.numpac AND PR.pacmat = L.pacmat AND Pr.Periode_Retro = @@@PERIODE_RETRO@@@ AND Pr.Table_Maj = ''PRD_PP_RETRO_INFOPAIE''  WHERE L.id_trt = @@@ID_TRT@@@ AND S.mois_paie = @@@PERIODE_RETRO@@@ GROUP BY S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil ORDER BY COUNT(paiezad) DESC ) WHERE rownum = 1 ) P ON P.mois_paie = R.mois_paie AND P.numpac = R.numpac AND ( P.debut_periode_recueil IS NULL OR P.debut_periode_recueil = NVL(R.debut_periode_recueil, to_date(''19000101'', ''yyyymmdd'')) ) AND ( P.fin_periode_recueil IS NULL OR P.fin_periode_recueil = NVL(R.fin_periode_recueil, to_date(''19000102'', ''yyyymmdd'')) ) JOIN dic_adm_contrat_histo H ON H.numpac = R.numpac AND H.pacmat = R.pacmat AND H.paiezad =R.paiezad AND H.za996 = ''W'' JOIN dic_adm_contrat C ON C.numpac = R.numpac AND C.pacmat= R.pacmat AND C.numcnt= H.numcnt AND C.dsdcn = R.entree JOIN dic_adm_contrat_situ CS ON CS.numpac = C.numpac AND CS.pacmat = C.pacmat AND CS.numcnt = C.numcnt AND CS.paiezad = C.current_paiezad JOIN gap_trt_liste_mat L ON L.numpac = R.numpac AND R.pacmat = L.pacmat JOIN ( SELECT NUMPAC, PACMAT FROM GAP_RETRO_MATRIC where periode_retro = @@@PERIODE_RETRO@@@ UNION SELECT NUMPAC, PACMAT FROM GAP_SELECTION_RETRO where periode_retro = @@@PERIODE_RETRO@@@ ) T ON T.numpac = R.numpac AND R.pacmat = T.pacmat  JOIN TGE_MODIF_PACMAT_RETRO PR ON PR.NUMPAC = L.numpac AND PR.pacmat = L.pacmat AND Pr.Periode_Retro = @@@PERIODE_RETRO@@@ AND Pr.Table_Maj = ''PRD_PP_RETRO_INFOPAIE''  WHERE ( P.fin_periode_recueil IS NULL OR NVL(R.fin_periode_recueil,P.fin_periode_recueil) BETWEEN H.date_eff AND H.DATE_SORTIE_SIT_BO ) AND L.id_trt = @@@ID_TRT@@@ AND NOT EXISTS ( SELECT 1 FROM TGE_PERIODE_RECUEIL_PAIEZAD S WHERE S.paiezad = R.paiezad AND S.RETOUR_SUSPENSION >= S.sortie AND S.mois_paie =R.mois_paie AND S.numpac =T.numpac )'
'RD','PAI3','1','SELECT R.pacmat, R.paiezad, C.numcnt, R.entree AS DEB_EMP, NVL(R.sortie, to_date(''31.12.2099'', ''dd.MM.yyyy'')) AS FIN_EMP, NVL(R.DEBUT_PERIODE_RECUEIL, P.DEBUT_PERIODE_RECUEIL) AS DEB_REC, NVL(R.FIN_PERIODE_RECUEIL, R.sortie) AS FIN_REC , A.CODE_CHRONO AS CODE_CHRONO FROM tge_periode_recueil_paiezad R JOIN (SELECT numpac, mois_paie, debut_periode_recueil, fin_periode_recueil FROM (SELECT S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil, COUNT(paiezad) AS nb_Dossier FROM gap_trt_liste_mat T JOIN tge_periode_recueil_paiezad S ON S.numpac = T.numpac AND S.pacmat = T.pacmat WHERE T.id_trt = @@@ID_TRT@@@ AND S.mois_paie = @@@PERIODE_PAIE@@@ GROUP BY S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil ORDER BY COUNT(paiezad) DESC ) WHERE rownum = 1 ) P ON P.mois_paie = R.mois_paie AND P.numpac = R.numpac AND ((P.debut_periode_recueil IS NULL OR P.debut_periode_recueil <> NVL(R.debut_periode_recueil, to_date(''19000101'',''yyyymmdd''))) OR (P.fin_periode_recueil IS NULL OR P.fin_periode_recueil <> NVL(R.fin_periode_recueil, to_date(''19000102'',''yyyymmdd'')))) JOIN dic_adm_contrat_histo H ON H.numpac = R.numpac AND H.pacmat = R.pacmat AND H.paiezad =R.paiezad AND H.za996 = ''W'' JOIN dic_adm_contrat C ON C.numpac= R.numpac AND C.pacmat= R.pacmat AND C.numcnt= H.numcnt AND C.dsdcn = R.entree JOIN gap_trt_liste_mat T ON T.numpac = R.numpac AND t.pacmat = R.pacmat JOIN situation_paie A ON A.numpac = R.numpac AND A.paiezad = R.paiezad AND A.PERIODEENCOURS = R.mois_paie WHERE (P.fin_periode_recueil IS NULL OR NVL(R.fin_periode_recueil,P.fin_periode_recueil) BETWEEN H.date_eff AND H.DATE_SORTIE_SIT_BO OR R.entree BETWEEN P.fin_periode_recueil AND R.fin_periode_paie) AND (NVL(R.sortie,to_date(''20991231'',''yyyymmdd''))>= R.debut_periode_paie OR A.RETRO_SORTIE = ''O'') AND T.id_trt = @@@ID_TRT@@@ AND EXISTS (SELECT 1 FROM TGE_PERIODE_RECUEIL_PAIEZAD S WHERE S.paiezad = R.paiezad AND S.RETOUR_SUSPENSION >= S.sortie AND S.mois_paie =R.mois_paie AND S.numpac =T.numpac )'
'RD','PAI3','2','SELECT R.pacmat, R.paiezad, C.numcnt, R.entree AS DEB_EMP, NVL(R.sortie, to_date(''31.12.2099'', ''dd.MM.yyyy'')) AS FIN_EMP, NVL(R.DEBUT_PERIODE_RECUEIL, to_date(''19000101'',''yyyymmdd'')) AS DEB_REC, NVL(R.FIN_PERIODE_RECUEIL, to_date(''19000102'',''yyyymmdd'')) AS FIN_REC , A.CODE_CHRONO AS CODE_CHRONO FROM tge_periode_recueil_paiezad R JOIN (SELECT numpac, mois_paie, debut_periode_recueil, fin_periode_recueil FROM (SELECT S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil, COUNT(paiezad) AS nb_Dossier FROM gap_trt_liste_mat T JOIN tge_periode_recueil_paiezad S ON S.numpac = T.numpac AND S.pacmat = T.pacmat WHERE T.id_trt = @@@ID_TRT@@@ AND S.mois_paie = @@@PERIODE_PAIE@@@ GROUP BY S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil ORDER BY COUNT(paiezad) DESC ) WHERE rownum = 1 ) P ON P.mois_paie = R.mois_paie AND P.numpac = R.numpac AND ((P.debut_periode_recueil IS NULL OR P.debut_periode_recueil <> NVL(R.debut_periode_recueil, to_date(''19000101'',''yyyymmdd''))) OR (P.fin_periode_recueil IS NULL OR P.fin_periode_recueil <> NVL(R.fin_periode_recueil, to_date(''19000102'',''yyyymmdd'')))) JOIN dic_adm_contrat_histo H ON H.numpac = R.numpac AND H.pacmat = R.pacmat AND H.paiezad =R.paiezad AND H.za996 = ''W'' JOIN dic_adm_contrat C ON C.numpac= R.numpac AND C.pacmat= R.pacmat AND C.numcnt= H.numcnt AND C.dsdcn = R.entree JOIN gap_trt_liste_mat T ON T.numpac = R.numpac AND t.pacmat = R.pacmat JOIN situation_paie A ON A.numpac = R.numpac AND A.paiezad = R.paiezad AND A.PERIODEENCOURS = R.mois_paie WHERE (P.fin_periode_recueil IS NULL OR NVL(R.fin_periode_recueil,P.fin_periode_recueil) BETWEEN H.date_eff AND H.DATE_SORTIE_SIT_BO OR R.entree BETWEEN P.fin_periode_recueil AND R.fin_periode_paie) AND (NVL(R.sortie,to_date(''20991231'',''yyyymmdd''))>= R.debut_periode_paie OR A.RETRO_SORTIE = ''O'') AND T.id_trt = @@@ID_TRT@@@ AND NOT EXISTS (SELECT 1 FROM TGE_PERIODE_RECUEIL_PAIEZAD S WHERE S.paiezad = R.paiezad AND S.RETOUR_SUSPENSION >= S.sortie AND S.mois_paie =R.mois_paie AND S.numpac =T.numpac ) AND NOT EXISTS (SELECT 1 FROM tge_periode_recueil_paiezad s WHERE s.paiezad = r.paiezad AND s.fin_periode_recueil >= r.sortie AND s.mois_paie < r.mois_paie AND s.numpac = t.numpac )'
'RD','PAI3_RETRO','1','SELECT R.pacmat, R.paiezad, C.numcnt, R.entree AS DEB_EMP, NVL(R.sortie, to_date(''31.12.2099'', ''dd.MM.yyyy'')) AS FIN_EMP, NVL(R.DEBUT_PERIODE_RECUEIL, P.DEBUT_PERIODE_RECUEIL) AS DEB_REC, NVL(R.FIN_PERIODE_RECUEIL, R.sortie) AS FIN_REC , A.CODE_CHRONO AS CODE_CHRONO FROM tge_periode_recueil_paiezad R JOIN ( SELECT numpac, mois_paie, debut_periode_recueil, fin_periode_recueil FROM ( SELECT S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil, COUNT(paiezad) AS nb_Dossier FROM ( SELECT NUMPAC, PACMAT FROM GAP_RETRO_MATRIC where periode_retro = @@@PERIODE_RETRO@@@ UNION SELECT NUMPAC, PACMAT FROM GAP_SELECTION_RETRO where periode_retro = @@@PERIODE_RETRO@@@ ) T JOIN gap_trt_liste_mat L ON L.numpac = T.numpac AND L.pacmat = L.pacmat JOIN tge_periode_recueil_paiezad S ON S.numpac = T.numpac AND S.pacmat = T.pacmat  JOIN TGE_MODIF_PACMAT_RETRO PR ON PR.NUMPAC = L.numpac AND PR.pacmat = L.pacmat AND Pr.Periode_Retro = @@@PERIODE_RETRO@@@ AND Pr.Table_Maj = ''PRD_PP_RETRO_INFOPAIE'' WHERE L.id_trt = @@@ID_TRT@@@ AND S.mois_paie = @@@PERIODE_RETRO@@@ GROUP BY S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil ORDER BY s.mois_paie, COUNT(paiezad) DESC ) WHERE rownum = 1 ) P ON P.mois_paie = R.mois_paie AND P.numpac = R.numpac AND ( ( P.debut_periode_recueil IS NULL OR P.debut_periode_recueil <> NVL(R.debut_periode_recueil, to_date( ''19000101'',''yyyymmdd'')) ) OR ( P.fin_periode_recueil IS NULL OR P.fin_periode_recueil <> NVL(R.fin_periode_recueil, to_date(''19000102'', ''yyyymmdd'')) ) ) JOIN dic_adm_contrat_histo H ON H.numpac = R.numpac AND H.pacmat = R.pacmat AND H.paiezad =R.paiezad AND H.za996 = ''W'' JOIN dic_adm_contrat C ON C.numpac = R.numpac AND C.pacmat= R.pacmat AND C.numcnt= H.numcnt AND C.dsdcn = R.entree JOIN gap_trt_liste_mat L ON L.numpac = R.numpac AND R.pacmat = L.pacmat JOIN ( SELECT NUMPAC, PACMAT FROM GAP_RETRO_MATRIC where periode_retro = @@@PERIODE_RETRO@@@ UNION SELECT NUMPAC, PACMAT FROM GAP_SELECTION_RETRO where periode_retro = @@@PERIODE_RETRO@@@ ) T ON T.numpac = R.numpac AND t.pacmat = R.pacmat JOIN situation_paie A ON A.numpac = R.numpac AND A.paiezad = R.paiezad AND A.PERIODEENCOURS = R.mois_paie  JOIN TGE_MODIF_PACMAT_RETRO PR ON PR.NUMPAC = L.numpac AND PR.pacmat = L.pacmat AND Pr.Periode_Retro = @@@PERIODE_RETRO@@@ AND Pr.Table_Maj = ''PRD_PP_RETRO_INFOPAIE'' WHERE ( P.fin_periode_recueil IS NULL OR NVL(R.fin_periode_recueil,P.fin_periode_recueil) BETWEEN H.date_eff AND H.DATE_SORTIE_SIT_BO OR R.entree BETWEEN P.fin_periode_recueil AND R.fin_periode_paie ) AND ( NVL(R.sortie,to_date(''20991231'',''yyyymmdd''))>= R.debut_periode_paie OR A.RETRO_SORTIE = ''O'' ) AND L.id_trt = @@@ID_TRT@@@ AND EXISTS ( SELECT 1 FROM TGE_PERIODE_RECUEIL_PAIEZAD S WHERE S.paiezad = R.paiezad AND S.RETOUR_SUSPENSION >= S.sortie AND S.mois_paie =R.mois_paie AND S.numpac =T.numpac )'
'RD','PAI3_RETRO','2','SELECT R.pacmat, R.paiezad, C.numcnt, R.entree AS DEB_EMP, NVL(R.sortie, to_date(''31.12.2099'', ''dd.MM.yyyy'')) AS FIN_EMP, NVL(R.DEBUT_PERIODE_RECUEIL, to_date(''19000101'',''yyyymmdd'')) AS DEB_REC, NVL(R.FIN_PERIODE_RECUEIL, to_date(''19000102'',''yyyymmdd'')) AS FIN_REC , A.CODE_CHRONO AS CODE_CHRONO FROM tge_periode_recueil_paiezad R JOIN ( SELECT numpac, mois_paie, debut_periode_recueil, fin_periode_recueil FROM ( SELECT S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil, COUNT(paiezad) AS nb_Dossier FROM ( SELECT NUMPAC, PACMAT FROM GAP_RETRO_MATRIC where periode_retro = @@@PERIODE_RETRO@@@ UNION SELECT NUMPAC, PACMAT FROM GAP_SELECTION_RETRO where periode_retro = @@@PERIODE_RETRO@@@ ) T JOIN gap_trt_liste_mat L ON L.numpac = T.numpac AND L.pacmat = L.pacmat JOIN tge_periode_recueil_paiezad S ON S.numpac = T.numpac AND S.pacmat = T.pacmat  JOIN TGE_MODIF_PACMAT_RETRO PR ON PR.NUMPAC = L.numpac AND PR.pacmat = L.pacmat AND Pr.Periode_Retro = @@@PERIODE_RETRO@@@ AND Pr.Table_Maj = ''PRD_PP_RETRO_INFOPAIE'' WHERE L.id_trt = @@@ID_TRT@@@ AND S.mois_paie = @@@PERIODE_RETRO@@@ GROUP BY S.numpac, S.mois_paie, S.debut_periode_recueil, S.fin_periode_recueil ORDER BY COUNT(paiezad) DESC ) WHERE rownum = 1 ) P ON P.mois_paie = R.mois_paie AND P.numpac = R.numpac AND ( ( P.debut_periode_recueil IS NULL OR P.debut_periode_recueil <> NVL(R.debut_periode_recueil, to_date( ''19000101'',''yyyymmdd'')) ) OR ( P.fin_periode_recueil IS NULL OR P.fin_periode_recueil <> NVL(R.fin_periode_recueil, to_date(''19000102'', ''yyyymmdd'')) ) ) JOIN dic_adm_contrat_histo H ON H.numpac = R.numpac AND H.pacmat = R.pacmat AND H.paiezad =R.paiezad AND H.za996 = ''W'' JOIN dic_adm_contrat C ON C.numpac = R.numpac AND C.pacmat= R.pacmat AND C.numcnt= H.numcnt AND C.dsdcn = R.entree JOIN gap_trt_liste_mat L ON L.numpac = R.numpac AND R.pacmat = L.pacmat JOIN ( SELECT NUMPAC, PACMAT FROM GAP_RETRO_MATRIC where periode_retro = @@@PERIODE_RETRO@@@ UNION SELECT NUMPAC, PACMAT FROM GAP_SELECTION_RETRO where periode_retro = @@@PERIODE_RETRO@@@ ) T ON T.numpac = R.numpac AND t.pacmat = R.pacmat JOIN situation_paie A ON A.numpac = R.numpac AND A.paiezad = R.paiezad AND A.PERIODEENCOURS = R.mois_paie  JOIN TGE_MODIF_PACMAT_RETRO PR ON PR.NUMPAC = L.numpac AND PR.pacmat = L.pacmat AND Pr.Periode_Retro = @@@PERIODE_RETRO@@@ AND Pr.Table_Maj = ''PRD_PP_RETRO_INFOPAIE'' WHERE ( P.fin_periode_recueil IS NULL OR NVL(R.fin_periode_recueil,P.fin_periode_recueil) BETWEEN H.date_eff AND H.DATE_SORTIE_SIT_BO OR R.entree BETWEEN P.fin_periode_recueil AND R.fin_periode_paie ) AND ( NVL(R.sortie,to_date(''20991231'',''yyyymmdd''))>= R.debut_periode_paie OR A.RETRO_SORTIE = ''O'' ) AND L.id_trt = @@@ID_TRT@@@ AND NOT EXISTS ( SELECT 1 FROM TGE_PERIODE_RECUEIL_PAIEZAD S WHERE S.paiezad = R.paiezad AND S.RETOUR_SUSPENSION >= S.sortie AND S.mois_paie =R.mois_paie AND S.numpac =T.numpac ) AND NOT EXISTS ( SELECT 1 FROM tge_periode_recueil_paiezad s WHERE s.paiezad = r.paiezad AND s.fin_periode_recueil >= r.sortie AND s.mois_paie < r.mois_paie AND s.numpac = t.numpac )'
##
TGE_REF_ENVOI_PAI
==
DELETE FROM TGE_REF_ENVOI_PAI
##
TGE_REF_ENVOI_PAI (ORIGINE,CODE_REQ,ORDRE_REQ,REQUETE)
'RD','PAI','1','SELECT G.ID_TRT, T.NUMPAC, ''NORMAL'' AS TYPE_ENVOIE, T.MOIS_PAIE as PERIODE_PAIE, T.MOIS_PAIE as PERIODE_RETRO, T.PAIEZAD, T.PACMAT, T.DEBUT_PERIODE_PAIE, T.FIN_PERIODE_PAIE, T.ENTREE, T.SORTIE, T.DEBUT_PERIODE_RECUEIL, T.FIN_PERIODE_RECUEIL, CASE WHEN ( (T.ENTREE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE) AND (T.SORTIE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE) ) THEN ''PAI2'' ELSE ''PAI3'' END AS TYPEPAI , ( SELECT COUNT(*) FROM DIC_ADM_CONTRAT DAC WHERE T.NUMPAC =DAC.NUMPAC AND T.PACMAT =DAC.PACMAT AND DAC.CURRENT_PAIEZAD=T.PAIEZAD AND ( T.DEBUT_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) ) ) AS NB_CONTRAT , ( SELECT CODE_CHRONO FROM DIC_ADM_CONTRAT_SITU DACS WHERE T.NUMPAC =DACS.NUMPAC AND T.PACMAT =DACS.PACMAT AND DACS.PAIEZAD=T.PAIEZAD AND (T.DEBUT_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) ) ) AS CODE_CHRONO FROM GAP_TRT_LISTE_MAT G , TGE_PERIODE_RECUEIL_PAIEZAD T WHERE G.NUMPAC = ? AND T.numpac = G.NUMPAC AND T.PACMAT =G.PACMAT AND G.ID_TRT = ? AND t.mois_paie = ? '
'RD','PAI_RETRO','1','SELECT G.ID_TRT, T.NUMPAC, ''RETRO'' AS TYPE_ENVOIE, ? AS PERIODE_PAIE, PR.PERIODE_RETRO AS PERIODE_RETRO, T.PAIEZAD, T.PACMAT, T.DEBUT_PERIODE_PAIE, T.FIN_PERIODE_PAIE, T.ENTREE, T.SORTIE, T.DEBUT_PERIODE_RECUEIL, T.FIN_PERIODE_RECUEIL, CASE WHEN ( ( T.ENTREE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) AND ( T.SORTIE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) ) THEN ''PAI2'' ELSE ''PAI3'' END AS TYPEPAI , ( SELECT COUNT(*) FROM DIC_ADM_CONTRAT DAC WHERE T.NUMPAC =DAC.NUMPAC AND T.PACMAT =DAC.PACMAT AND DAC.CURRENT_PAIEZAD=T.PAIEZAD AND ( T.DEBUT_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) ) ) AS NB_CONTRAT , ( SELECT CODE_CHRONO FROM DIC_ADM_CONTRAT_SITU DACS WHERE T.NUMPAC =DACS.NUMPAC AND T.PACMAT =DACS.PACMAT AND DACS.PAIEZAD=T.PAIEZAD AND ( T.DEBUT_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) ) ) AS CODE_CHRONO FROM GAP_TRT_LISTE_MAT G , TGE_PERIODE_RECUEIL_PAIEZAD T , TGE_MODIF_PACMAT_RETRO PR WHERE T.NUMPAC =? AND T.numpac = G.NUMPAC AND T.PACMAT = G.PACMAT AND T.MOIS_PAIE = PR.PERIODE_RETRO AND PR.PERIODE_RETRO >= ? AND PR.NUMPAC = G.NUMPAC AND PR.Pacmat = G.PACMAT AND G.ID_TRT = ? AND PR.TABLE_MAJ = ''PRD_PP_RETRO_INFOPAIE'' AND ( G.NUMPAC,G.PACMAT,PR.PERIODE_RETRO ) IN ( SELECT NUMPAC, PACMAT, PERIODE_RETRO FROM GAP_RETRO_MATRIC UNION ALL SELECT NUMPAC, PACMAT, PERIODE_RETRO FROM GAP_SELECTION_RETRO ) '
##
TGE_REF_ENVOI_PAI
==
DELETE FROM TGE_REF_ENVOI_PAI
##
TGE_REF_ENVOI_PAI (ORIGINE,CODE_REQ,ORDRE_REQ,REQUETE)
'RD','PAI','1','SELECT G.ID_TRT, T.NUMPAC, ''NORMAL'' AS TYPE_ENVOIE, T.MOIS_PAIE as PERIODE_PAIE, T.MOIS_PAIE as PERIODE_RETRO, T.PAIEZAD, T.PACMAT, T.DEBUT_PERIODE_PAIE, T.FIN_PERIODE_PAIE, T.ENTREE, T.SORTIE, T.DEBUT_PERIODE_RECUEIL, T.FIN_PERIODE_RECUEIL, CASE WHEN ( (T.ENTREE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE) AND (T.SORTIE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE) ) THEN ''PAI2'' ELSE ''PAI3'' END AS TYPEPAI , ( SELECT COUNT(*) FROM DIC_ADM_CONTRAT DAC WHERE T.NUMPAC =DAC.NUMPAC AND T.PACMAT =DAC.PACMAT AND DAC.CURRENT_PAIEZAD=T.PAIEZAD AND ( T.DEBUT_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) OR DSDCN BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) ) AS NB_CONTRAT , ( SELECT CODE_CHRONO FROM DIC_ADM_CONTRAT_SITU DACS WHERE T.NUMPAC =DACS.NUMPAC AND T.PACMAT =DACS.PACMAT AND DACS.PAIEZAD=T.PAIEZAD AND (T.DEBUT_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'',''DD.MM.YYYY'')) OR DSDSC BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) ) AS CODE_CHRONO FROM GAP_TRT_LISTE_MAT G , TGE_PERIODE_RECUEIL_PAIEZAD T WHERE G.NUMPAC = ? AND T.numpac = G.NUMPAC AND T.PACMAT =G.PACMAT AND G.ID_TRT = ? AND t.mois_paie = ? '
'RD','PAI_RETRO','1','SELECT G.ID_TRT, T.NUMPAC, ''RETRO'' AS TYPE_ENVOIE, ? AS PERIODE_PAIE, PR.PERIODE_RETRO AS PERIODE_RETRO, T.PAIEZAD, T.PACMAT, T.DEBUT_PERIODE_PAIE, T.FIN_PERIODE_PAIE, T.ENTREE, T.SORTIE, T.DEBUT_PERIODE_RECUEIL, T.FIN_PERIODE_RECUEIL, CASE WHEN ( ( T.ENTREE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) AND ( T.SORTIE NOT BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) ) THEN ''PAI2'' ELSE ''PAI3'' END AS TYPEPAI , ( SELECT COUNT(*) FROM DIC_ADM_CONTRAT DAC WHERE T.NUMPAC =DAC.NUMPAC AND T.PACMAT =DAC.PACMAT AND DAC.CURRENT_PAIEZAD=T.PAIEZAD AND ( T.DEBUT_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDCN AND NVL(DSFCN,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) OR DSDCN BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) ) AS NB_CONTRAT , ( SELECT CODE_CHRONO FROM DIC_ADM_CONTRAT_SITU DACS WHERE T.NUMPAC =DACS.NUMPAC AND T.PACMAT =DACS.PACMAT AND DACS.PAIEZAD=T.PAIEZAD AND ( T.DEBUT_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) OR T.FIN_PERIODE_PAIE BETWEEN DSDSC AND NVL(DSFSC,TO_DATE(''31.12.2099'', ''DD.MM.YYYY'')) OR DSDSC BETWEEN T.DEBUT_PERIODE_PAIE AND T.FIN_PERIODE_PAIE ) ) AS CODE_CHRONO FROM GAP_TRT_LISTE_MAT G , TGE_PERIODE_RECUEIL_PAIEZAD T , TGE_MODIF_PACMAT_RETRO PR WHERE T.NUMPAC =? AND T.numpac = G.NUMPAC AND T.PACMAT = G.PACMAT AND T.MOIS_PAIE = PR.PERIODE_RETRO AND PR.PERIODE_RETRO >= ? AND PR.NUMPAC = G.NUMPAC AND PR.Pacmat = G.PACMAT AND G.ID_TRT = ? AND PR.TABLE_MAJ = ''PRD_PP_RETRO_INFOPAIE'' AND ( G.NUMPAC,G.PACMAT,PR.PERIODE_RETRO ) IN ( SELECT NUMPAC, PACMAT, PERIODE_RETRO FROM GAP_RETRO_MATRIC UNION ALL SELECT NUMPAC, PACMAT, PERIODE_RETRO FROM GAP_SELECTION_RETRO ) '
##
UX_DATA (NOM_DONNEE_UX,LIBELLE_DONNEE_UX,REGROUPEMENT)
==
DELETE FROM UX_DATA WHERE NOM_DONNEE_UX IN ('affiliationMutuelle','resiliationMutuelle','optionMutuelle','codeMutuelle','codeDispenseMutuelle')
'affiliationMutuelle','date d''affiliation mutuelle','mutuelle'
'resiliationMutuelle','date de resiliation mutuelle', 'mutuelle'
'optionMutuelle','option mutuelle', 'mutuelle'
'codeMutuelle','code mutuelle', 'mutuelle'
'codeDispenseMutuelle','code dispense mutuelle', 'mutuelle'
##
UX_EVENTS (EVENT,EVENT_ID,LIBELLE,OP_NUM,UX_EVENTNAME,IS_NOTIFICATION)
==
DELETE FROM UX_EVENTS WHERE EVENT IN ('/events/benefits/v1/benefit-coverages-enrollment.modify')
'/events/benefits/v1/benefit-coverages-enrollment.modify',130,'Souscription à une mutuelle',55300,'Employee - Benefit Coverages','O'
##
UX_GS_OPTION
==
delete from UX_GS_OPTION WHERE ACCES_OPT IN ('TIMESHEETMGR','CALENDARMGR') AND ABONN_OPT = 'managerBusinessFeatures' 
'managerBusinessFeatures','TIMESHEETMGR','Manager','Feuille de pointage Manager','Modules/AdpUx/UxTimesheetMgr.jsp'
'managerBusinessFeatures','CALENDARMGR','Manager','Horaires Manager','Modules/AdpUx/UxCalendarMgr.jsp'
##
UX_GS_OPTION
==
delete from UX_GS_OPTION WHERE ACCES_OPT IN ('PAY-PREFS')
'businessFeatures','PAY-PREFS','Collaborateur','Refus de la dématérialisation','Modules/AdpUx/UxPayPrefs.jsp'
##
UX_GS_OPTION
==
delete from UX_GS_OPTION WHERE ACCES_OPT IN ('BENEFITS-COVERAGE')
'businessFeatures','BENEFITS-COVERAGE','Collaborateur','Couverture santé - Mutuelle','Modules/AdpUx/UxBenefitsCoverage.jsp'
##
WKF_BRANCH_GEN
==
delete from WKF_BRANCH_GEN where OP_EMET_NUM='55201' OR OP_DEST_NUM='55202'
##
WKF_BRANCH_GEN
==
delete from WKF_BRANCH_GEN WHERE OP_EMET_NUM IN (55300,55301)
'55300','Valider','55301','55301','1','false','false','true','false','false','20200402082500','false',null
'55301','Supprimer','55302','55302','1','false','true','true','false','false','20200402082500','false',null
'55301','Valider','55302','55303','1','false','true','true','false','false','20200402082500','false',null
##
WKF_OPERATIONS
==
delete from WKF_OPERATIONS WHERE PROC_NUM = 5053
'55300','5053','DEM. MUT.','Demande de modification','0','0','I','true','true','false',null,'_PARAM_DYN_','false','false','false','20200402082500','false','0','false',null,null,null,null,null,'false',null,'0','false'
'55301','5053','VAL. MUT.','Validation de la demande','0','0','N','true','true','false',null,'_PARAM_DYN_','false','false','false','20200402082500','false','0','false',null,null,null,null,null,'false',null,'0','false'
'55302','5053','FIN DEM. MUT.','Fin processus modification mutuelle','0','0','F','true','true','true','fr.adp.com.gxp.std.mot_met.lib.objects.workflow.WkfMetierGeneriqueObj',null,'false','false','false','20200402082500','false','0','false',null,null,null,null,null,'false',null,'0','false'
##
WKF_OP_ROLE
==
delete from WKF_OP_ROLE WHERE OP_NUM in (55300,55301)
55300,1,'*'
55301,3,'*'
##
WKF_PROCESSUS
==
delete from WKF_PROCESSUS WHERE PROC_NUM = 5053
'5053','Demande de modification de la mutuelle','0',null,'false','0','fr.adp.com.gxp.std.mot_met.lib.objects.workflow.WkfMetierGeneriqueObj','true','IA','true',null,null
##
WKF_TRANSITIONS
==
delete from WKF_TRANSITIONS where TR_NUM in ('55211','55212','55213')
##
WKF_TRANSITIONS
==
delete from WKF_TRANSITIONS WHERE PROC_NUM = 5053
'55301','5053','T55301 vers (Validation de la demande)'
'55302','5053','T55302 vers (Fin processus modification mutuelle)'
'55303','5053','T55303 vers (Fin processus modification mutuelle)'
##
TGE_GESTIL_SQL
==
DELETE FROM TGE_GESTIL_SQL
'TGE_GESTIL_NAT','10','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_NAT.NOM),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_NAT.LIB),'' ''),30,'' '') || RPAD(NVL(TRIM(AD_NAT.CDE_CORR),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_NAT.FAM_NAT),'' ''),10,'' '') || RPAD(NVL(TRIM(BO_FAM_NAT.FAM_LIB),'' ''),30,'' '')¿FROM AD_NAT¿JOIN TGE_GESTIL_NAT_ETL@ADPLINK_DATA T1 ON ( T1.NAT = TRIM(AD_NAT.NOM) )¿LEFT JOIN BO_FAM_NAT ON (BO_FAM_NAT.FAM_NOM = TRIM(AD_NAT.FAM_NAT)) ¿WHERE AD_NAT.DOM = ''2'' AND T1.NUMPAC = ''$NUMPAC'' AND T1.ACTIF = ''O''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''NATNRS'',6,'' '') || RPAD(''Nature non renseignée'',30,'' '') || RPAD('''',6,'' '') || RPAD('''',10,'' '') || RPAD('''',30,'' '')¿FROM DUAL'
'TGE_GESTIL_LISNATD','20','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_LISNATD.NOM),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_LISNAT.LIB),'' ''),30,'' '') || RPAD(NVL(TRIM(AD_LISNATD.NAT),'' ''),6,'' '') ¿FROM AD_LISNATD¿JOIN AD_LISNAT ON (AD_LISNAT.DOM = AD_LISNATD.DOM AND AD_LISNAT.NOM = AD_LISNATD.NOM) ¿JOIN TGE_GESTIL_NAT_ETL@ADPLINK_DATA T1 ON ( T1.NAT = TRIM(AD_LISNATD.NAT) )¿WHERE AD_LISNATD.DOM = ''2'' AND T1.NUMPAC = ''$NUMPAC'' AND T1.ACTIF = ''O'''
'TGE_GESTIL_FAM_HOR','20','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(FAM_NOM,'' ''),3,'' '') || RPAD(NVL(TRIM(FAM_LIB),'' ''),30,'' '') FROM BO_FAM_HOR'
'TGE_GESTIL_HOR','40','1',NULL,'0',NULL,NULL,'WITH HOR AS (SELECT ''$NUMPAC'' AS NUMPAC, ID , TRIM(NOM1) AS NOM1 , LIB , TRIM(FAM) AS FAM , TYP¿FROM AD_HOR T1¿WHERE DOM = ''2'' AND DAT_EFF = (SELECT MAX(DAT_EFF) FROM AD_HOR T2 WHERE T2.DOM = T1.DOM AND T2.ID = T1.ID GROUP BY T2.ID)¿)¿SELECT RPAD(NVL(NUMPAC,'' ''),6,'' '') || TO_CHAR(NVL(ID,0),''S00000000000'') || RPAD(NVL(NOM1,'' ''),6,'' '') || RPAD(NVL(LIB,'' ''),30,'' '') || RPAD(NVL(FAM,'' ''),3,'' '') || RPAD(NVL(BO_FAM_HOR.FAM_LIB,'' ''),30,'' '') || RPAD(NVL(TYP,'' ''),1,'' '')¿FROM HOR¿LEFT JOIN BO_FAM_HOR ON (HOR.FAM = TRIM(BO_FAM_HOR.FAM_NOM))¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || ''+00000000000'' || ''HORNRS'' || RPAD(''Horaire non renseigné'',30,'' '') || RPAD(NVL('''','' ''),3,'' '') || RPAD('''',30,'' '') || RPAD('''',1,'' '')¿FROM DUAL'
'TGE_GESTIL_CYCHOR','50','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(NOM),'' ''),8,'' '') || RPAD(NVL(LIB,'' ''),30,'' '') ¿FROM AD_CYCHOR T1¿WHERE DOM = ''2'' AND DAT_EFF = (SELECT MAX(DAT_EFF) FROM AD_CYCHOR T2 WHERE T2.DOM = T1.DOM AND T2.NOM = T1.NOM  GROUP BY T2.NOM)¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''CYCNRS'',8,'' '') || RPAD(''Cycle non renseigné'',30,'' '')¿FROM DUAL'
'TGE_GESTIL_LIE','60','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || TO_CHAR(NVL(ID,0),''S00000000000'') || RPAD(NVL(TRIM(NOM1),'' ''),6,'' '') || RPAD(NVL(TRIM(LIB),'' ''),30,'' '') ¿FROM AD_LIE¿WHERE DOM = ''2''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || ''+00000000000'' || RPAD(''LIENRS'',6,'' '') || RPAD(''Lieu non renseigné'',30,'' '')¿FROM DUAL'
'TGE_GESTIL_FAM_NAT','70','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(FAM_NOM,'' ''),10,'' '') || RPAD(NVL(FAM_LIB,'' ''),30,'' '') ¿FROM BO_FAM_NAT'
'TGE_GESTIL_CODD_ANOMALIE','80','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_CODD.CLE1),'' ''),20,'' '') || RPAD(NVL(AD_CODD.LIB,'' ''),30,'' '') ¿FROM AD_CODD¿WHERE AD_CODD.DOM = ''2'' AND AD_CODD.NOM = ''ANOMALIE''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''##'',20,'' '') || RPAD(''Journée sans anomalie'',30,'' '')¿FROM DUAL'
'TGE_GESTIL_POS','90','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_POS.NOM),'' ''),10,'' '') || RPAD(NVL(AD_POS.LIB,'' ''),30,'' '') ¿FROM AD_POS¿WHERE AD_POS.DOM = ''2''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''POSNRS'',10,'' '') || RPAD(''Poste non renseigné'',30,'' '') FROM DUAL'
'TGE_GESTIL_EQU','100','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_EQU.NOM),'' ''),6,'' '') || RPAD(NVL(AD_EQU.LIB,'' ''),30,'' '') ¿FROM AD_EQU¿WHERE AD_EQU.DOM = ''2''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''EQUNRS'',6,'' '') || RPAD(''Equipe non renseignée'',30,'' '') ¿FROM DUAL'
'TGE_GESTIL_PER','110','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_PER.NOM),'' ''),6,'' '') || RPAD(NVL(AD_PER.LIB,'' ''),30,'' '') ¿FROM AD_PER¿WHERE AD_PER.DOM = ''2''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''PERNRS'',6,'' '') || RPAD(''Période non renseignée'',30,'' '') ¿FROM DUAL'
'TGE_GESTIL_PERDAT','120','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(NOM),'' ''),6,'' '') || TO_CHAR(NVL(RANG,0),''S000000'') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_DEB), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_FIN), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '')¿FROM BO_PERDAT'
'TGE_GESTIL_CPT','130','1',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(TRIM(AD_CPT.NOM),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_CPT.PER),'' ''),6,'' '') ||RPAD(NVL(AD_CPT.LIB,'' ''),30,'' '') ¿FROM AD_CPT¿WHERE AD_CPT.DOM = ''2''¿UNION¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(''CPTNRS'',6,'' '') || RPAD(''PERNRS'',6,'' '') ||RPAD(''Compteur non renseigné'',30,'' '') ¿FROM DUAL'
'TGE_GESTIL_MATJOU','140','0',NULL,'1','AD_MATJOU','NUMPAC = ''$NUMPAC'' AND ( DAT_JOU >= TO_DATE(''$DATE'',''YYYY/MM/DD'') OR DAT_JOU < ADD_MONTHS(SYSDATE,-37) )','SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(HOR,0),''S00000000000'') || RPAD(NVL(HOR_TYP,'' ''),1,'' '') ¿ || RPAD(NVL(HRS_DEBB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_DEBB,0),''S000000'') || RPAD(NVL(HRS_FINB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_FINB,0),''S000000'') || RPAD(NVL(STATUT,'' ''),1,'' '')¿ || RPAD(NVL(TRIM(ANO1), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO2), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO3), ''##''),2,'' '') || TO_CHAR(NVL(HOR_CAL,0),''S00000000000'') || RPAD(NVL(PROV_MP,'' ''),1,'' '')¿ || RPAD(NVL(PROV_PTR,'' ''),1,'' '') || TO_CHAR(NVL(HOR_MAT_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_T,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_R,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_T,0),''S00000000000'')¿ || RPAD(NVL(TRIM(CYC_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_T), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_T), ''CYCNRS''),8,'' '')¿ || RPAD(NVL(TRIM(CYC_MAT_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_T), ''CYCNRS''),8,'' '') || TO_CHAR(NVL(LIEU_P,0),''S00000000000'')¿ || TO_CHAR(NVL(LIEU1,0),''S00000000000'') || TO_CHAR(NVL(LIEU2,0),''S00000000000'') || TO_CHAR(NVL(LIEU3,0),''S00000000000'') || TO_CHAR(NVL(LIEU4,0),''S00000000000'') || TO_CHAR(NVL(LIEU5,0),''S00000000000'')¿ || RPAD( NVL(TRIM(NAT_THE), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_THE,'' ''),8,'' '') || TO_CHAR(NVL(TPM_THE,0),''S00000000000'') || TO_CHAR(NVL(ROUND(TPM_THE/60, 3),0),''S00000000D000'') || CASE WHEN TPM_THE=0 THEN 0 ELSE 1 END¿FROM AD_MATJOU¿WHERE DOM = ''2'' AND SOC = ''HRV'''
'TGE_GESTIL_MATJOU','141','0','BIS','1','AD_MATJOU',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(HOR,0),''S00000000000'') || RPAD(NVL(HOR_TYP,'' ''),1,'' '') ¿ || RPAD(NVL(HRS_DEBB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_DEBB,0),''S000000'') || RPAD(NVL(HRS_FINB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_FINB,0),''S000000'') || RPAD(NVL(STATUT,'' ''),1,'' '')¿ || RPAD(NVL(TRIM(ANO1), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO2), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO3), ''##''),2,'' '') || TO_CHAR(NVL(HOR_CAL,0),''S00000000000'') || RPAD(NVL(PROV_MP,'' ''),1,'' '')¿ || RPAD(NVL(PROV_PTR,'' ''),1,'' '') || TO_CHAR(NVL(HOR_MAT_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_T,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_R,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_T,0),''S00000000000'')¿ || RPAD(NVL(TRIM(CYC_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_T), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_T), ''CYCNRS''),8,'' '')¿ || RPAD(NVL(TRIM(CYC_MAT_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_T), ''CYCNRS''),8,'' '') || TO_CHAR(NVL(LIEU_P,0),''S00000000000'')¿ || TO_CHAR(NVL(LIEU1,0),''S00000000000'') || TO_CHAR(NVL(LIEU2,0),''S00000000000'') || TO_CHAR(NVL(LIEU3,0),''S00000000000'') || TO_CHAR(NVL(LIEU4,0),''S00000000000'') || TO_CHAR(NVL(LIEU5,0),''S00000000000'')¿ || RPAD( NVL(TRIM(NAT_THE), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_THE,'' ''),8,'' '') || TO_CHAR(NVL(TPM_THE,0),''S00000000000'') || TO_CHAR(NVL(ROUND(TPM_THE/60, 3),0),''S00000000D000'') || CASE WHEN TPM_THE=0 THEN 0 ELSE 1 END¿FROM AD_MATJOU_BIS¿WHERE DOM = ''2'' AND SOC = ''HRV'''
'TGE_GESTIL_MATJOU','142','0','HIS','1','AD_MATJOU',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(HOR,0),''S00000000000'') || RPAD(NVL(HOR_TYP,'' ''),1,'' '') ¿ || RPAD(NVL(HRS_DEBB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_DEBB,0),''S000000'') || RPAD(NVL(HRS_FINB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_FINB,0),''S000000'') || RPAD(NVL(STATUT,'' ''),1,'' '')¿ || RPAD(NVL(TRIM(ANO1), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO2), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO3), ''##''),2,'' '') || TO_CHAR(NVL(HOR_CAL,0),''S00000000000'') || RPAD(NVL(PROV_MP,'' ''),1,'' '')¿ || RPAD(NVL(PROV_PTR,'' ''),1,'' '') || TO_CHAR(NVL(HOR_MAT_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_T,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_R,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_T,0),''S00000000000'')¿ || RPAD(NVL(TRIM(CYC_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_T), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_T), ''CYCNRS''),8,'' '')¿ || RPAD(NVL(TRIM(CYC_MAT_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_T), ''CYCNRS''),8,'' '') || TO_CHAR(NVL(LIEU_P,0),''S00000000000'')¿ || TO_CHAR(NVL(LIEU1,0),''S00000000000'') || TO_CHAR(NVL(LIEU2,0),''S00000000000'') || TO_CHAR(NVL(LIEU3,0),''S00000000000'') || TO_CHAR(NVL(LIEU4,0),''S00000000000'') || TO_CHAR(NVL(LIEU5,0),''S00000000000'')¿ || RPAD( NVL(TRIM(NAT_THE), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_THE,'' ''),8,'' '') || TO_CHAR(NVL(TPM_THE,0),''S00000000000'') || TO_CHAR(NVL(ROUND(TPM_THE/60, 3),0),''S00000000D000'') || CASE WHEN TPM_THE=0 THEN 0 ELSE 1 END¿FROM AD_MATJOU_HIS¿WHERE DOM = ''2'' AND SOC = ''HRV'''
'TGE_GESTIL_MATJOU','143','0','TER','1','AD_MATJOU',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(HOR,0),''S00000000000'') || RPAD(NVL(HOR_TYP,'' ''),1,'' '') ¿ || RPAD(NVL(HRS_DEBB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_DEBB,0),''S000000'') || RPAD(NVL(HRS_FINB,'' ''),6,'' '') || TO_CHAR(NVL(HRJ_FINB,0),''S000000'') || RPAD(NVL(STATUT,'' ''),1,'' '')¿ || RPAD(NVL(TRIM(ANO1), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO2), ''##''),2,'' '') || RPAD(NVL(TRIM(ANO3), ''##''),2,'' '') || TO_CHAR(NVL(HOR_CAL,0),''S00000000000'') || RPAD(NVL(PROV_MP,'' ''),1,'' '')¿ || RPAD(NVL(PROV_PTR,'' ''),1,'' '') || TO_CHAR(NVL(HOR_MAT_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_T,0),''S00000000000'') || TO_CHAR(NVL(HOR_MAT_R,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_P,0),''S00000000000'') || TO_CHAR(NVL(HOR_POE_T,0),''S00000000000'')¿ || RPAD(NVL(TRIM(CYC_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_T), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_MAT_T), ''CYCNRS''),8,'' '')¿ || RPAD(NVL(TRIM(CYC_MAT_R), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_P), ''CYCNRS''),8,'' '') || RPAD(NVL(TRIM(CYC_POE_T), ''CYCNRS''),8,'' '') || TO_CHAR(NVL(LIEU_P,0),''S00000000000'')¿ || TO_CHAR(NVL(LIEU1,0),''S00000000000'') || TO_CHAR(NVL(LIEU2,0),''S00000000000'') || TO_CHAR(NVL(LIEU3,0),''S00000000000'') || TO_CHAR(NVL(LIEU4,0),''S00000000000'') || TO_CHAR(NVL(LIEU5,0),''S00000000000'')¿ || RPAD( NVL(TRIM(NAT_THE), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_THE,'' ''),8,'' '') || TO_CHAR(NVL(TPM_THE,0),''S00000000000'') || TO_CHAR(NVL(ROUND(TPM_THE/60, 3),0),''S00000000D000'') || CASE WHEN TPM_THE=0 THEN 0 ELSE 1 END¿FROM AD_MATJOU_TER¿WHERE DOM = ''2'' AND SOC = ''HRV'''
'TGE_GESTIL_MATJOUD','150','0',NULL,'1','AD_MATJOU','NUMPAC = ''$NUMPAC'' AND ( DAT_JOU >= TO_DATE(''$DATE'',''YYYY/MM/DD'') OR DAT_JOU < ADD_MONTHS(SYSDATE,-37) )','SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(RANG,0),''S000000'') || RPAD(NVL(FNATANO,'' ''),1,'' '')¿ || RPAD(NVL(NAT_TYP,'' ''),1,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT), ''NATNRS''),6,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT_S), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_NAT,'' ''),8,'' '') || TO_CHAR(NVL(TPM_NAT,0),''S00000000000'')¿ || TO_CHAR(NVL(ROUND(TPD_NAT/1000, 3),0),''S00000000D000'') || RPAD(NVL(TRIM(HRS_DEB),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_DEB),0),''S000000'') || RPAD(NVL(TRIM(HRS_FIN),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_FIN),0),''S000000'')¿ || RPAD(NVL(TRIM(CODPLJ),'' ''),1,'' '') || RPAD(NVL(TRIM(PROV_LIEU),'' ''),1,'' '') || TO_CHAR(NVL(LIEU,0),''S00000000000'') || RPAD(NVL(TRIM(POS), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_P,0),''S00000000000'') || RPAD(NVL(TRIM(POS_P), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_P), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(LIEU_T,0),''S00000000000'') || RPAD(NVL(TRIM(POS_T), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_T), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_R,0),''S00000000000'') || RPAD(NVL(TRIM(POS_R), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_R), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(QTE1,0),''S00000000000'') || TO_CHAR(NVL(QTE2,0),''S00000000000'')¿ || RPAD(NVL(TRIM(PROV_EVE),'' ''),1,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_DEB_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_FIN_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TRIM(Z2_VSTATE),'' ''),1,'' '')¿FROM AD_MATJOUD¿JOIN TGE_GESTIL_NAT_ETL@ADPLINK_DATA T1  ON( T1.NUMPAC = ''$NUMPAC'' AND T1.NAT = TRIM(AD_MATJOUD.NAT))  ¿WHERE AD_MATJOUD.DOM = ''2'' AND AD_MATJOUD.SOC = ''HRV'' AND AD_MATJOUD.CODSEG=''B'' AND T1.ACTIF = ''O'''
'TGE_GESTIL_MATJOUD','151','0','BIS','1','AD_MATJOU',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(RANG,0),''S000000'') || RPAD(NVL(FNATANO,'' ''),1,'' '')¿ || RPAD(NVL(NAT_TYP,'' ''),1,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT), ''NATNRS''),6,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT_S), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_NAT,'' ''),8,'' '') || TO_CHAR(NVL(TPM_NAT,0),''S00000000000'')¿ || TO_CHAR(NVL(ROUND(TPD_NAT/1000, 3),0),''S00000000D000'') || RPAD(NVL(TRIM(HRS_DEB),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_DEB),0),''S000000'') || RPAD(NVL(TRIM(HRS_FIN),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_FIN),0),''S000000'')¿ || RPAD(NVL(TRIM(CODPLJ),'' ''),1,'' '') || RPAD(NVL(TRIM(PROV_LIEU),'' ''),1,'' '') || TO_CHAR(NVL(LIEU,0),''S00000000000'') || RPAD(NVL(TRIM(POS), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_P,0),''S00000000000'') || RPAD(NVL(TRIM(POS_P), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_P), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(LIEU_T,0),''S00000000000'') || RPAD(NVL(TRIM(POS_T), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_T), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_R,0),''S00000000000'') || RPAD(NVL(TRIM(POS_R), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_R), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(QTE1,0),''S00000000000'') || TO_CHAR(NVL(QTE2,0),''S00000000000'')¿ || RPAD(NVL(TRIM(PROV_EVE),'' ''),1,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_DEB_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_FIN_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TRIM(Z2_VSTATE),'' ''),1,'' '')¿FROM AD_MATJOUD_BIS AD_MATJOUD¿JOIN TGE_GESTIL_NAT_ETL@ADPLINK_DATA T1  ON( T1.NUMPAC = ''$NUMPAC'' AND T1.NAT = TRIM(AD_MATJOUD.NAT))  ¿WHERE AD_MATJOUD.DOM = ''2'' AND AD_MATJOUD.SOC = ''HRV'' AND AD_MATJOUD.CODSEG=''B'' AND T1.ACTIF = ''O'''
'TGE_GESTIL_MATJOUD','152','0','HIS','1','AD_MATJOU',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(RANG,0),''S000000'') || RPAD(NVL(FNATANO,'' ''),1,'' '')¿ || RPAD(NVL(NAT_TYP,'' ''),1,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT), ''NATNRS''),6,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT_S), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_NAT,'' ''),8,'' '') || TO_CHAR(NVL(TPM_NAT,0),''S00000000000'')¿ || TO_CHAR(NVL(ROUND(TPD_NAT/1000, 3),0),''S00000000D000'') || RPAD(NVL(TRIM(HRS_DEB),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_DEB),0),''S000000'') || RPAD(NVL(TRIM(HRS_FIN),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_FIN),0),''S000000'')¿ || RPAD(NVL(TRIM(CODPLJ),'' ''),1,'' '') || RPAD(NVL(TRIM(PROV_LIEU),'' ''),1,'' '') || TO_CHAR(NVL(LIEU,0),''S00000000000'') || RPAD(NVL(TRIM(POS), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_P,0),''S00000000000'') || RPAD(NVL(TRIM(POS_P), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_P), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(LIEU_T,0),''S00000000000'') || RPAD(NVL(TRIM(POS_T), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_T), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_R,0),''S00000000000'') || RPAD(NVL(TRIM(POS_R), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_R), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(QTE1,0),''S00000000000'') || TO_CHAR(NVL(QTE2,0),''S00000000000'')¿ || RPAD(NVL(TRIM(PROV_EVE),'' ''),1,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_DEB_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_FIN_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TRIM(Z2_VSTATE),'' ''),1,'' '')¿FROM AD_MATJOUD_HIS AD_MATJOUD¿JOIN TGE_GESTIL_NAT_ETL@ADPLINK_DATA T1  ON( T1.NUMPAC = ''$NUMPAC'' AND T1.NAT = TRIM(AD_MATJOUD.NAT))  ¿WHERE AD_MATJOUD.DOM = ''2'' AND AD_MATJOUD.SOC = ''HRV'' AND AD_MATJOUD.CODSEG=''B'' AND T1.ACTIF = ''O'''
'TGE_GESTIL_MATJOUD','153','0','TER','1','AD_MATJOU',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(DAT_JOU, ''YYYY/MM/DD''),''YYYYMMDD'') || RPAD(NVL(ENR,'' ''),1,'' '') || TO_CHAR(NVL(RANG,0),''S000000'') || RPAD(NVL(FNATANO,'' ''),1,'' '')¿ || RPAD(NVL(NAT_TYP,'' ''),1,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT), ''NATNRS''),6,'' '') || RPAD(NVL(TRIM(AD_MATJOUD.NAT_S), ''NATNRS''),6,'' '') || RPAD(NVL(TPS_NAT,'' ''),8,'' '') || TO_CHAR(NVL(TPM_NAT,0),''S00000000000'')¿ || TO_CHAR(NVL(ROUND(TPD_NAT/1000, 3),0),''S00000000D000'') || RPAD(NVL(TRIM(HRS_DEB),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_DEB),0),''S000000'') || RPAD(NVL(TRIM(HRS_FIN),'' ''),6,'' '') || TO_CHAR(NVL(TRIM(HRJ_FIN),0),''S000000'')¿ || RPAD(NVL(TRIM(CODPLJ),'' ''),1,'' '') || RPAD(NVL(TRIM(PROV_LIEU),'' ''),1,'' '') || TO_CHAR(NVL(LIEU,0),''S00000000000'') || RPAD(NVL(TRIM(POS), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_P,0),''S00000000000'') || RPAD(NVL(TRIM(POS_P), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_P), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(LIEU_T,0),''S00000000000'') || RPAD(NVL(TRIM(POS_T), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_T), ''EQUNRS''),6,'' '')¿ || TO_CHAR(NVL(LIEU_R,0),''S00000000000'') || RPAD(NVL(TRIM(POS_R), ''POSNRS''),10,'' '')|| RPAD(NVL(TRIM(EQU_R), ''EQUNRS''),6,'' '') || TO_CHAR(NVL(QTE1,0),''S00000000000'') || TO_CHAR(NVL(QTE2,0),''S00000000000'')¿ || RPAD(NVL(TRIM(PROV_EVE),'' ''),1,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_DEB_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_FIN_EVE), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '') || RPAD(NVL(TRIM(Z2_VSTATE),'' ''),1,'' '')¿FROM AD_MATJOUD_TER AD_MATJOUD¿JOIN TGE_GESTIL_NAT_ETL@ADPLINK_DATA T1  ON( T1.NUMPAC = ''$NUMPAC'' AND T1.NAT = TRIM(AD_MATJOUD.NAT))  ¿WHERE AD_MATJOUD.DOM = ''2'' AND AD_MATJOUD.SOC = ''HRV'' AND AD_MATJOUD.CODSEG=''B'' AND T1.ACTIF = ''O'''
'TGE_GESTIL_MATCPT','160','0',NULL,'1','AD_MATCPT','NUMPAC = ''$NUMPAC'' AND ( DAT_CPT >= TO_DATE(''$DATE'',''YYYY/MM/DD'') OR DAT_CPT < ADD_MONTHS(SYSDATE,-37) )','SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(AD_MATCPT.MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(TRIM(AD_MATCPT.DAT_CPT), ''YYYY/MM/DD''),''YYYYMMDD'')¿|| TO_CHAR(NVL(TO_DATE(LEAD(AD_MATCPT.DAT_CPT) OVER (PARTITION BY AD_MATCPT.MAT, AD_MATCPT.CPT, AD_MATCPT.PER, BO_PERDAT.RANG, BO_MATCON_NUMSITU.NUMSITU ORDER BY AD_MATCPT.DAT_CPT), ''YYYY/MM/DD'')-1 , TO_DATE(AD_MATCPT.DAT_CPT, ''YYYY/MM/DD'')),''YYYYMMDD'')¿|| RPAD(NVL(TRIM(AD_MATCPT.CPT),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_MATCPT.PER),'' ''),6,'' '') || RPAD(NVL(AD_MATCPT.FFINPER,'' ''),1,'' '') || TO_CHAR(NVL(AD_MATCPT.ANNEE,0),''S000000'') || TO_CHAR(NVL(AD_MATCPT.NUMPER,0),''S00000000000'')¿|| TO_CHAR(NVL(ROUND(AD_MATCPT.VARJ/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'')|| TO_CHAR(NVL(ROUND(AD_MATCPT.VAL/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'') || RPAD(NVL(TGE_GESTIL_CPT_PER_ETL.UNITE,'' ''),20,'' '')¿|| TO_CHAR(NVL(BO_PERDAT.RANG,0),''S000000'')¿FROM AD_MATCPT¿JOIN BO_MATCON_NUMSITU ON ( BO_MATCON_NUMSITU.MAT = AD_MATCPT.MAT)¿JOIN TGE_GESTIL_CPT_PER_ETL@ADPLINK_DATA ON ( TGE_GESTIL_CPT_PER_ETL.NUMPAC = ''$NUMPAC'' AND TGE_GESTIL_CPT_PER_ETL.CPT = TRIM(AD_MATCPT.CPT) AND TGE_GESTIL_CPT_PER_ETL.PER = TRIM(AD_MATCPT.PER) )¿JOIN BO_PERDAT ON ( BO_PERDAT.NOM = AD_MATCPT.PER)¿WHERE AD_MATCPT.DOM=''2'' AND AD_MATCPT.SOC=''HRV'' ¿AND AD_MATCPT.DAT_CPT BETWEEN BO_MATCON_NUMSITU.ENTREE AND BO_MATCON_NUMSITU.SORTIE¿AND AD_MATCPT.DAT_CPT BETWEEN BO_PERDAT.DAT_DEB AND BO_PERDAT.DAT_FIN'
'TGE_GESTIL_MATCPT','161','0','BIS','1','AD_MATCPT',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(AD_MATCPT.MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(TRIM(AD_MATCPT.DAT_CPT), ''YYYY/MM/DD''),''YYYYMMDD'')¿|| TO_CHAR(NVL(TO_DATE(LEAD(AD_MATCPT.DAT_CPT) OVER (PARTITION BY AD_MATCPT.MAT, AD_MATCPT.CPT, AD_MATCPT.PER, BO_PERDAT.RANG, BO_MATCON_NUMSITU.NUMSITU ORDER BY AD_MATCPT.DAT_CPT), ''YYYY/MM/DD'')-1 , TO_DATE(AD_MATCPT.DAT_CPT, ''YYYY/MM/DD'')),''YYYYMMDD'')¿|| RPAD(NVL(TRIM(AD_MATCPT.CPT),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_MATCPT.PER),'' ''),6,'' '') || RPAD(NVL(AD_MATCPT.FFINPER,'' ''),1,'' '') || TO_CHAR(NVL(AD_MATCPT.ANNEE,0),''S000000'') || TO_CHAR(NVL(AD_MATCPT.NUMPER,0),''S00000000000'')¿|| TO_CHAR(NVL(ROUND(AD_MATCPT.VARJ/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'')|| TO_CHAR(NVL(ROUND(AD_MATCPT.VAL/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'') || RPAD(NVL(TGE_GESTIL_CPT_PER_ETL.UNITE,'' ''),20,'' '')¿|| TO_CHAR(NVL(BO_PERDAT.RANG,0),''S000000'')¿FROM AD_MATCPT_BIS AD_MATCPT¿JOIN BO_MATCON_NUMSITU ON ( BO_MATCON_NUMSITU.MAT = AD_MATCPT.MAT)¿JOIN TGE_GESTIL_CPT_PER_ETL@ADPLINK_DATA ON ( TGE_GESTIL_CPT_PER_ETL.NUMPAC = ''$NUMPAC'' AND TGE_GESTIL_CPT_PER_ETL.CPT = TRIM(AD_MATCPT.CPT) AND TGE_GESTIL_CPT_PER_ETL.PER = TRIM(AD_MATCPT.PER) )¿JOIN BO_PERDAT ON ( BO_PERDAT.NOM = AD_MATCPT.PER )¿WHERE AD_MATCPT.DOM=''2'' AND AD_MATCPT.SOC=''HRV'' ¿AND AD_MATCPT.DAT_CPT BETWEEN BO_MATCON_NUMSITU.ENTREE AND BO_MATCON_NUMSITU.SORTIE¿AND AD_MATCPT.DAT_CPT BETWEEN BO_PERDAT.DAT_DEB AND BO_PERDAT.DAT_FIN'
'TGE_GESTIL_MATCPT','162','0','HIS','1','AD_MATCPT',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(AD_MATCPT.MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(TRIM(AD_MATCPT.DAT_CPT), ''YYYY/MM/DD''),''YYYYMMDD'')¿|| TO_CHAR(NVL(TO_DATE(LEAD(AD_MATCPT.DAT_CPT) OVER (PARTITION BY AD_MATCPT.MAT, AD_MATCPT.CPT, AD_MATCPT.PER, BO_PERDAT.RANG, BO_MATCON_NUMSITU.NUMSITU ORDER BY AD_MATCPT.DAT_CPT), ''YYYY/MM/DD'')-1 , TO_DATE(AD_MATCPT.DAT_CPT, ''YYYY/MM/DD'')),''YYYYMMDD'')¿|| RPAD(NVL(TRIM(AD_MATCPT.CPT),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_MATCPT.PER),'' ''),6,'' '') || RPAD(NVL(AD_MATCPT.FFINPER,'' ''),1,'' '') || TO_CHAR(NVL(AD_MATCPT.ANNEE,0),''S000000'') || TO_CHAR(NVL(AD_MATCPT.NUMPER,0),''S00000000000'')¿|| TO_CHAR(NVL(ROUND(AD_MATCPT.VARJ/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'')|| TO_CHAR(NVL(ROUND(AD_MATCPT.VAL/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'') || RPAD(NVL(TGE_GESTIL_CPT_PER_ETL.UNITE,'' ''),20,'' '')¿|| TO_CHAR(NVL(BO_PERDAT.RANG,0),''S000000'')¿FROM AD_MATCPT_HIS AD_MATCPT¿JOIN BO_MATCON_NUMSITU ON ( BO_MATCON_NUMSITU.MAT = AD_MATCPT.MAT)¿JOIN TGE_GESTIL_CPT_PER_ETL@ADPLINK_DATA ON ( TGE_GESTIL_CPT_PER_ETL.NUMPAC = ''$NUMPAC'' AND TGE_GESTIL_CPT_PER_ETL.CPT = TRIM(AD_MATCPT.CPT) AND TGE_GESTIL_CPT_PER_ETL.PER = TRIM(AD_MATCPT.PER) )¿JOIN BO_PERDAT ON ( BO_PERDAT.NOM = AD_MATCPT.PER)¿WHERE AD_MATCPT.DOM=''2'' AND AD_MATCPT.SOC=''HRV'' ¿AND AD_MATCPT.DAT_CPT BETWEEN BO_MATCON_NUMSITU.ENTREE AND BO_MATCON_NUMSITU.SORTIE¿AND AD_MATCPT.DAT_CPT BETWEEN BO_PERDAT.DAT_DEB AND BO_PERDAT.DAT_FIN'
'TGE_GESTIL_MATCPT','163','0','TER','1','AD_MATCPT',NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(AD_MATCPT.MAT,'' ''),8,'' '') || TO_CHAR(TO_DATE(TRIM(AD_MATCPT.DAT_CPT), ''YYYY/MM/DD''),''YYYYMMDD'')¿|| TO_CHAR(NVL(TO_DATE(LEAD(AD_MATCPT.DAT_CPT) OVER (PARTITION BY AD_MATCPT.MAT, AD_MATCPT.CPT, AD_MATCPT.PER, BO_PERDAT.RANG, BO_MATCON_NUMSITU.NUMSITU ORDER BY AD_MATCPT.DAT_CPT), ''YYYY/MM/DD'')-1 , TO_DATE(AD_MATCPT.DAT_CPT, ''YYYY/MM/DD'')),''YYYYMMDD'')¿|| RPAD(NVL(TRIM(AD_MATCPT.CPT),'' ''),6,'' '') || RPAD(NVL(TRIM(AD_MATCPT.PER),'' ''),6,'' '') || RPAD(NVL(AD_MATCPT.FFINPER,'' ''),1,'' '') || TO_CHAR(NVL(AD_MATCPT.ANNEE,0),''S000000'') || TO_CHAR(NVL(AD_MATCPT.NUMPER,0),''S00000000000'')¿|| TO_CHAR(NVL(ROUND(AD_MATCPT.VARJ/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'')|| TO_CHAR(NVL(ROUND(AD_MATCPT.VAL/TGE_GESTIL_CPT_PER_ETL.DIVISEUR_VAL_VARJ,3),0),''S00000000D000'') || RPAD(NVL(TGE_GESTIL_CPT_PER_ETL.UNITE,'' ''),20,'' '')¿|| TO_CHAR(NVL(BO_PERDAT.RANG,0),''S000000'')¿FROM AD_MATCPT_TER AD_MATCPT¿JOIN BO_MATCON_NUMSITU ON ( BO_MATCON_NUMSITU.MAT = AD_MATCPT.MAT)¿JOIN TGE_GESTIL_CPT_PER_ETL@ADPLINK_DATA ON ( TGE_GESTIL_CPT_PER_ETL.NUMPAC = ''$NUMPAC'' AND TGE_GESTIL_CPT_PER_ETL.CPT = TRIM(AD_MATCPT.CPT) AND TGE_GESTIL_CPT_PER_ETL.PER = TRIM(AD_MATCPT.PER) )¿JOIN BO_PERDAT ON ( BO_PERDAT.NOM = AD_MATCPT.PER)¿WHERE AD_MATCPT.DOM=''2'' AND AD_MATCPT.SOC=''HRV'' ¿AND AD_MATCPT.DAT_CPT BETWEEN BO_MATCON_NUMSITU.ENTREE AND BO_MATCON_NUMSITU.SORTIE¿AND AD_MATCPT.DAT_CPT BETWEEN BO_PERDAT.DAT_DEB AND BO_PERDAT.DAT_FIN'
'TGE_GESTIL_MATHOR','170','0',NULL,'0',NULL,NULL,'WITH MATHORP AS ( SELECT MAT P_MAT, TO_DATE(TRIM(DAT_AFF),''YYYY/MM/DD'') P_DAT_AFF, TO_DATE(TRIM(DAT_FIN),''YYYY/MM/DD'') P_DAT_FIN, ENR P_ENR, CYCHOR P_CYCHOR, HOR P_HOR FROM AD_MATHOR WHERE ENR=''P'' )¿,MATHORT AS ( SELECT MAT T_MAT, TO_DATE(TRIM(DAT_AFF),''YYYY/MM/DD'') T_DAT_AFF, TO_DATE(TRIM(DAT_FIN),''YYYY/MM/DD'') T_DAT_FIN, ENR T_ENR, CYCHOR T_CYCHOR, HOR T_HOR FROM AD_MATHOR WHERE ENR=''T'' )¿,MATHORR AS ( SELECT MAT R_MAT, TO_DATE(TRIM(DAT_AFF),''YYYY/MM/DD'') R_DAT_AFF, TO_DATE(TRIM(DAT_FIN),''YYYY/MM/DD'') R_DAT_FIN, ENR R_ENR, CYCHOR R_CYCHOR, HOR R_HOR FROM AD_MATHOR WHERE ENR=''R'' )¿,MATHORAFF AS ( ¿SELECT DISTINCT MAT, TO_DATE(TRIM(DAT_AFF),''YYYY/MM/DD'') DAT_AFF FROM AD_MATHOR¿UNION¿SELECT DISTINCT MAT, TO_DATE(TRIM(DAT_FIN),''YYYY/MM/DD'')+1 DAT_AFF FROM AD_MATHOR WHERE DAT_FIN != ''2099/12/31''¿)¿,MATHORAFFP AS (¿SELECT MATHORAFF.MAT, MATHORAFF.DAT_AFF, LEAD(MATHORAFF.DAT_AFF) OVER (PARTITION BY MATHORAFF.MAT ORDER BY MATHORAFF.DAT_AFF ) DAT_FIN , MATHORP.P_CYCHOR, MATHORP.P_HOR, MATHORP.P_ENR, MATHORP.P_DAT_AFF, MATHORP.P_DAT_FIN¿FROM MATHORAFF¿JOIN MATHORP ON ( MATHORP.P_MAT = MATHORAFF.MAT)¿WHERE MATHORAFF.DAT_AFF BETWEEN MATHORP.P_DAT_AFF AND MATHORP.P_DAT_FIN ¿)¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MATHORAFFP.MAT,'' ''),8,'' '') || RPAD(NVL(NVL(NVL(R_ENR, T_ENR), P_ENR),'' ''),1,'' '')¿|| RPAD(NVL(TO_CHAR(MATHORAFFP.DAT_AFF,''YYYYMMDD''),'' ''),8,'' '')¿|| RPAD(NVL(TO_CHAR(NVL(MATHORAFFP.DAT_FIN-1, TO_DATE(''31/12/2099'', ''DD/MM/YYYY'')),''YYYYMMDD''),'' ''),8,'' '')  ¿|| DECODE(DECODE(NVL(NVL(R_ENR, T_ENR), P_ENR), ''P'', NVL(MATHORAFFP.P_HOR,0), ''T'', NVL(T_HOR,0), ''R'', NVL(R_HOR,0)), 0, ''C'', ''H'')¿|| RPAD(NVL(TRIM(MATHORR.R_CYCHOR), ''CYCNRS'') ,8,'' '') ¿|| TO_CHAR(TRIM(DECODE(NVL(NVL(R_ENR, T_ENR), P_ENR), ''P'', NVL(MATHORAFFP.P_HOR,0), ''T'', NVL(T_HOR,0), ''R'', NVL(R_HOR,0))),''S00000000000'')¿|| RPAD(NVL(TO_CHAR(MATHORAFFP.P_DAT_AFF,''YYYYMMDD''),'' ''),8,'' '')¿|| RPAD(NVL(TO_CHAR(MATHORAFFP.P_DAT_FIN,''YYYYMMDD''),'' ''),8,'' '') ¿|| RPAD(NVL(TRIM(MATHORAFFP.P_CYCHOR),''CYCNRS''),8,'' '') || TO_CHAR(NVL(TRIM(MATHORAFFP.P_HOR),0) ,''S00000000000'')¿|| RPAD(NVL(TO_CHAR(MATHORT.T_DAT_AFF,''YYYYMMDD''),'' ''),8,'' '')¿|| RPAD(NVL(TO_CHAR(MATHORT.T_DAT_FIN,''YYYYMMDD''),'' ''),8,'' '') ¿|| RPAD(NVL(TRIM(MATHORT.T_CYCHOR),''CYCNRS''),8,'' '') || TO_CHAR(NVL(TRIM(T_HOR),0) ,''S00000000000'')¿|| RPAD(NVL(TO_CHAR(MATHORR.R_DAT_AFF,''YYYYMMDD''),'' ''),8,'' '')¿|| RPAD(NVL(TO_CHAR(MATHORR.R_DAT_FIN,''YYYYMMDD''),'' ''),8,'' '') ¿|| RPAD(NVL(TRIM(MATHORR.R_CYCHOR), ''CYCNRS''),8,'' '') || TO_CHAR(NVL(TRIM(R_HOR),0) ,''S00000000000'')¿FROM MATHORAFFP¿LEFT OUTER JOIN MATHORT ON ( MATHORT.T_MAT = MATHORAFFP.MAT AND MATHORAFFP.DAT_AFF BETWEEN MATHORT.T_DAT_AFF AND MATHORT.T_DAT_FIN )¿LEFT OUTER JOIN MATHORR ON ( MATHORR.R_MAT = MATHORAFFP.MAT AND MATHORAFFP.DAT_AFF BETWEEN MATHORR.R_DAT_AFF AND MATHORR.R_DAT_FIN )'
'TGE_GESTIL_MATLIE','180','0',NULL,'0',NULL,NULL,'WITH MATLIEP AS ( SELECT MAT P_MAT , DECODE(TRIM(HRE_AFF), ''23:59'', TO_DATE(DAT_AFF, ''YYYY/MM/DD'')+1, TO_DATE(DAT_AFF||'' ''||HRE_AFF,''YYYY/MM/DD HH24:MI'')) P_DAT_AFF, ¿	DECODE(TRIM(HRE_FIN), ''23:59'', TO_DATE(DAT_FIN, ''YYYY/MM/DD'')+1, TO_DATE(DAT_FIN||'' ''||HRE_FIN,''YYYY/MM/DD HH24:MI'')) P_DAT_FIN, ENR P_ENR, LIEU P_LIEU, POS P_POS, EQU P_EQU, ¿	FHORPOE P_FHORPOE, HRS_DEB P_HRS_DEB, HRJ_DEB P_HRJ_DEB, HRS_FIN P_HRS_FIN, HRJ_FIN P_HRJ_FIN, POURC P_POURC ¿	FROM AD_MATLIE WHERE ENR=''P'' AND RANG=0 )¿, MATLIET AS ( SELECT MAT T_MAT , DECODE(TRIM(HRE_AFF), ''23:59'', TO_DATE(DAT_AFF, ''YYYY/MM/DD'')+1, TO_DATE(DAT_AFF||'' ''||HRE_AFF,''YYYY/MM/DD HH24:MI'')) T_DAT_AFF, ¿	DECODE(TRIM(HRE_FIN), ''23:59'', TO_DATE(DAT_FIN, ''YYYY/MM/DD'')+1, TO_DATE(DAT_FIN||'' ''||HRE_FIN,''YYYY/MM/DD HH24:MI'')) T_DAT_FIN, ENR T_ENR, LIEU T_LIEU, POS T_POS, EQU T_EQU,¿	FHORPOE T_FHORPOE, HRS_DEB T_HRS_DEB, HRJ_DEB T_HRJ_DEB, HRS_FIN T_HRS_FIN, HRJ_FIN T_HRJ_FIN, POURC T_POURC ¿	FROM AD_MATLIE WHERE ENR=''T'' AND RANG=0 )¿, MATLIER AS ( SELECT MAT R_MAT , DECODE(TRIM(HRE_AFF), ''23:59'', TO_DATE(DAT_AFF, ''YYYY/MM/DD'')+1, TO_DATE(DAT_AFF||'' ''||HRE_AFF,''YYYY/MM/DD HH24:MI'')) R_DAT_AFF, ¿	DECODE(TRIM(HRE_FIN), ''23:59'', TO_DATE(DAT_FIN, ''YYYY/MM/DD'')+1, TO_DATE(DAT_FIN||'' ''||HRE_FIN,''YYYY/MM/DD HH24:MI'')) R_DAT_FIN, ENR R_ENR, LIEU R_LIEU, POS R_POS, EQU R_EQU,¿	FHORPOE R_FHORPOE, HRS_DEB R_HRS_DEB, HRJ_DEB R_HRJ_DEB, HRS_FIN R_HRS_FIN, HRJ_FIN R_HRJ_FIN, POURC R_POURC ¿	FROM AD_MATLIE WHERE ENR=''R'' AND RANG=0 )¿, MATLIEAFF AS ( SELECT DISTINCT MAT, DECODE(TRIM(HRE_AFF), ''23:59'', TO_DATE(DAT_AFF, ''YYYY/MM/DD'')+1, TO_DATE(DAT_AFF||'' ''||HRE_AFF,''YYYY/MM/DD HH24:MI'')) DAT_AFF ¿	FROM AD_MATLIE WHERE RANG=0¿		UNION¿	SELECT DISTINCT MAT, DECODE(TRIM(HRE_FIN), ''23:59'', TO_DATE(DAT_FIN, ''YYYY/MM/DD'')+1, TO_DATE(DAT_FIN||'' ''||HRE_FIN,''YYYY/MM/DD HH24:MI'')) DAT_AFF ¿	FROM AD_MATLIE WHERE RANG=0 AND DAT_FIN != ''2099/12/31'')¿,MATLIEAFFP AS ( SELECT MATLIEAFF.MAT, MATLIEAFF.DAT_AFF, LEAD(MATLIEAFF.DAT_AFF) OVER (PARTITION BY MATLIEAFF.MAT ORDER BY MATLIEAFF.DAT_AFF ) DAT_FIN, MATLIEP.P_LIEU, MATLIEP.P_POS¿	, MATLIEP.P_EQU, MATLIEP.P_ENR, MATLIEP.P_DAT_AFF, MATLIEP.P_DAT_FIN, MATLIEP.P_FHORPOE, MATLIEP.P_HRS_DEB, MATLIEP.P_HRJ_DEB, MATLIEP.P_HRS_FIN, MATLIEP.P_HRJ_FIN, MATLIEP.P_POURC¿	FROM MATLIEAFF¿	LEFT OUTER JOIN MATLIEP ON ( MATLIEP.P_MAT = MATLIEAFF.MAT AND MATLIEAFF.DAT_AFF >= MATLIEP.P_DAT_AFF AND MATLIEAFF.DAT_AFF < MATLIEP.P_DAT_FIN))¿SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MATLIEAFFP.MAT,'' ''),8,'' '') || RPAD(NVL(TO_CHAR(MATLIEAFFP.DAT_AFF,''YYYYMMDDHH24MI''),'' ''),12,'' '')¿|| RPAD(NVL(TO_CHAR(MATLIEAFFP.DAT_FIN,''YYYYMMDDHH24MI''),''210001010000''),12,'' '')¿|| RPAD(NVL(NVL(NVL(R_ENR, T_ENR), P_ENR),'' '') ,1,'' '')  || DECODE(DECODE(NVL(NVL(R_ENR, T_ENR), P_ENR), ''P'', NVL(MATLIEAFFP.P_LIEU,0), ''T'', NVL(MATLIET.T_LIEU,0), ''R'', NVL(MATLIER.R_LIEU,0)), 0, ''P'', ''L'')¿|| TO_CHAR(DECODE(NVL(NVL(R_ENR, T_ENR), P_ENR), ''P'', NVL(MATLIEAFFP.P_LIEU,0), ''T'', NVL(MATLIET.T_LIEU,0), ''R'', NVL(MATLIER.R_LIEU,0), 0) ,''S00000000000'')¿|| RPAD(DECODE(NVL(NVL(R_ENR, T_ENR), P_ENR), ''P'', NVL(TRIM(MATLIEAFFP.P_POS),''POSNRS''), ''T'', NVL(TRIM(MATLIET.T_POS),''POSNRS''), ''R'', NVL(TRIM(MATLIER.R_POS),''POSNRS''), ''POSNRS''),10,'' '') ¿|| RPAD(DECODE(NVL(NVL(R_ENR, T_ENR), P_ENR), ''P'', NVL(TRIM(MATLIEAFFP.P_EQU),''EQUNRS''), ''T'', NVL(TRIM(MATLIET.T_EQU),''EQUNRS''), ''R'', NVL(TRIM(MATLIER.R_EQU),''EQUNRS''), ''EQUNRS''),6,'' '')¿|| RPAD(NVL(TO_CHAR(MATLIEAFFP.P_DAT_AFF,''YYYYMMDDHH24MI''),'' ''),12,'' '') || RPAD(NVL(TO_CHAR(MATLIEAFFP.P_DAT_FIN,''YYYYMMDDHH24MI''),'' ''),12,'' '')¿|| TO_CHAR(NVL(MATLIEAFFP.P_LIEU,0) ,''S00000000000'') || RPAD(NVL(TRIM(MATLIEAFFP.P_POS),''POSNRS''),10,'' '') || RPAD(NVL(TRIM(MATLIEAFFP.P_EQU),''EQUNRS''),6,'' '')¿|| RPAD(NVL(MATLIEAFFP.P_FHORPOE,0),1,'' '') || RPAD(NVL(MATLIEAFFP.P_HRS_DEB,'' ''),6,'' '')|| TO_CHAR(NVL(MATLIEAFFP.P_HRJ_DEB,0) ,''S000000'')¿|| RPAD(NVL(MATLIEAFFP.P_HRS_FIN,'' ''),6,'' '') || TO_CHAR(NVL(MATLIEAFFP.P_HRJ_FIN,0) ,''S000000'') || TO_CHAR(NVL(MATLIEAFFP.P_POURC,0) ,''S000000'') ¿|| RPAD(NVL(TO_CHAR(MATLIET.T_DAT_AFF,''YYYYMMDDHH24MI''),'' ''),12,'' '') || RPAD(NVL(TO_CHAR(MATLIET.T_DAT_FIN,''YYYYMMDDHH24MI''),'' ''),12,'' '')¿|| TO_CHAR(NVL(MATLIET.T_LIEU,0) ,''S00000000000'') || RPAD(NVL(TRIM(MATLIET.T_POS),''POSNRS''),10,'' '') || RPAD(NVL(TRIM(MATLIET.T_EQU),''EQUNRS''),6,'' '')¿|| RPAD(NVL(MATLIET.T_FHORPOE,0),1,'' '') || RPAD(NVL(MATLIET.T_HRS_DEB,'' ''),6,'' '')|| TO_CHAR(NVL(MATLIET.T_HRJ_DEB,0) ,''S000000'')¿|| RPAD(NVL(MATLIET.T_HRS_FIN,'' ''),6,'' '') || TO_CHAR(NVL(MATLIET.T_HRJ_FIN,0) ,''S000000'') || TO_CHAR(NVL(MATLIET.T_POURC,0) ,''S000000'') ¿|| RPAD(NVL(TO_CHAR(MATLIER.R_DAT_AFF,''YYYYMMDDHH24MI''),'' ''),12,'' '') || RPAD(NVL(TO_CHAR(MATLIER.R_DAT_FIN,''YYYYMMDDHH24MI''),'' ''),12,'' '')¿|| TO_CHAR(NVL(MATLIER.R_LIEU,0) ,''S00000000000'') || RPAD(NVL(TRIM(MATLIER.R_POS), ''POSNRS''),10,'' '') || RPAD(NVL(TRIM(MATLIER.R_EQU), ''EQUNRS''),6,'' '')¿|| RPAD(NVL(MATLIER.R_FHORPOE,0),1,'' '') || RPAD(NVL(MATLIER.R_HRS_DEB,'' ''),6,'' '')|| TO_CHAR(NVL(MATLIER.R_HRJ_DEB,0) ,''S000000'')¿|| RPAD(NVL(MATLIER.R_HRS_FIN,'' ''),6,'' '') || TO_CHAR(NVL(MATLIER.R_HRJ_FIN,0) ,''S000000'') || TO_CHAR(NVL(MATLIER.R_POURC,0) ,''S000000'') ¿FROM MATLIEAFFP¿LEFT OUTER JOIN MATLIET ON ( MATLIET.T_MAT = MATLIEAFFP.MAT AND MATLIEAFFP.DAT_AFF >= MATLIET.T_DAT_AFF AND MATLIEAFFP.DAT_AFF < MATLIET.T_DAT_FIN )¿LEFT OUTER JOIN MATLIER ON ( MATLIER.R_MAT = MATLIEAFFP.MAT AND MATLIEAFFP.DAT_AFF >= MATLIER.R_DAT_AFF AND MATLIEAFFP.DAT_AFF < MATLIER.R_DAT_FIN )'
'TGE_GESTIL_MATBAD','190','0',NULL,'0',NULL,NULL,'SELECT RPAD(NVL(''$NUMPAC'','' ''),6,'' '') || RPAD(NVL(MAT,'' ''),8,'' '') || RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_AFF), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '')¿|| RPAD(NVL(TO_CHAR(TO_DATE(TRIM(DAT_FIN), ''YYYY/MM/DD''),''YYYYMMDD''),'' ''),8,'' '')¿|| RPAD(NVL(BADGE,'' ''),8,'' '')¿|| RPAD(NVL(LIB,'' ''),30,'' '')¿|| RPAD(NVL(CAT,'' ''),2,'' '')¿|| RPAD(NVL(AFFCPT,'' ''),6,'' '')¿|| RPAD(NVL(REGA,'' ''),2,'' '')¿|| RPAD(NVL(REGT,'' ''),2,'' '')¿|| RPAD(NVL(REGS,'' ''),2,'' '')¿|| RPAD(NVL(F_TPS_REEL,'' ''),1,'' '')¿|| RPAD(NVL(F_TRAIT_POE,'' ''),1,'' '')¿FROM AD_MATBAD¿WHERE ENR = ''M'''
##
*_GROUPE_DONNEES
=SQL IFNOTEXIST=_GROUPE_DONNEES=BOUTONS_TABLEAU_MULTIPLE=
CALL META_MODIF_STRUCTURE('_GROUPE_DONNEES', 'BOUTONS_TABLEAU_MULTIPLE', 'VARCHAR2(150)')
##
ADM_CREATE_NOM_PAGE
==
CALL ADM_CREATE_NOM_PAGE(99,'Feuille de pointage Manager','Modules/AdpUx/UxTimesheetMgr.jsp',null,'false')
##
SYS_SCH_ELEMENT
==
UPDATE SYS_SCH_ELEMENT SET TAGS='_PAS_VISIBLE_' WHERE niveau = '99' and nom_page='Modules/AdpUx/UxTimesheetMgr.jsp'
##
ADM_CREATE_NOM_PAGE
==
CALL ADM_CREATE_NOM_PAGE(99,'Horaires Manager','Modules/AdpUx/UxCalendarMgr.jsp',null,'false')
##
SYS_SCH_ELEMENT
==
UPDATE SYS_SCH_ELEMENT SET TAGS='_PAS_VISIBLE_' WHERE niveau = '99' and nom_page='Modules/AdpUx/UxCalendarMgr.jsp'
##
ADM_CREATE_NOM_PAGE
==
CALL ADM_CREATE_NOM_PAGE(99,'UX - Couverture santé - Mutuelle','Modules/AdpUx/UxBenefitsCoverage.jsp',null,'false')
##
SYS_SCH_ELEMENT
==
UPDATE SYS_SCH_ELEMENT SET TAGS='_PAS_VISIBLE_' WHERE niveau = '99' and nom_page='Modules/AdpUx/UxBenefitsCoverage.jsp'
##
CALC_HP
=SQL=
create or replace PACKAGE CALC_HP IS

p_date_deb DATE;
p_date_fin DATE;
horaireRemu VARCHAR(255);--horaire remu.	
horairePres VARCHAR(255); -- tmp horaire pres. 
dateDebTranchSitu DATE;   --tmp loop cycle dans situation
dateFinTranchSitu DATE;   --tmp loop cycle dans situation
dateEnCours DATE;         --date en cours pour calcul LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
numJourCanevas NUMBER(5,0);--tmp for LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
nbreHeures NUMBER(5,2);    --tmp for LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
jourSemaine VARCHAR2(15);


TYPE map_horaire_par_jour IS TABLE OF NUMBER INDEX BY VARCHAR2(50);
arrHoraireParJour map_horaire_par_jour;

/*****************/
TYPE TgeRefHprType IS RECORD (
    NUMPAC	VARCHAR2(6 BYTE),
    CODE_HOR_PRES	NUMBER(3,0),
    DATE_DEBUT	DATE,
    DATE_FIN	DATE,
    HRS_LUNDI	NUMBER(4,2),
    HRS_MARDI	NUMBER(4,2),
    HRS_MERCREDI	NUMBER(4,2),
    HRS_JEUDI	NUMBER(4,2),
    HRS_VENDREDI	NUMBER(4,2),
    HRS_SAMEDI	NUMBER(4,2),
    HRS_DIMANCHE	NUMBER(4,2)
);
--TYPE map_hpr IS TABLE OF TgeRefHprType INDEX BY VARCHAR2(30);
cur_TgeRefhpr TgeRefHprType;
--l_map_hpr map_hpr;
TYPE type_List_arr_2 IS VARRAY(99) OF TgeRefHprType;
lst_2 type_List_arr_2;
arrCycleHprSituation type_List_arr_2;


TYPE TgeRefDcyCy1Cy2Type IS RECORD (
	NUMPAC						VARCHAR2(6 BYTE),
	CODE_CLASSE_HORAIRE_OTT 	NUMBER(3,0),
	DATE_DEBUT 					DATE,
	DATE_FIN 					DATE,
	CODE_CYCLE_OTT 				NUMBER(3,0),
	CODE_CANEVAS_CYCLE_OTT 		NUMBER(3,0),
	NOMBRE_JOURS_CYCLE			NUMBER(3,0),
	NUM_JOUR_ENTREE_CANEVAS		NUMBER(3,0),
	NOMBRE_HEURE_1 				NUMBER(5,2),
	NOMBRE_HEURE_2				NUMBER(5,2),
	NOMBRE_HEURE_3				NUMBER(5,2),
	NOMBRE_HEURE_4				NUMBER(5,2),
	NOMBRE_HEURE_5				NUMBER(5,2),
	NOMBRE_HEURE_6				NUMBER(5,2),
	NOMBRE_HEURE_7				NUMBER(5,2),
	NOMBRE_HEURE_8				NUMBER(5,2),
	NOMBRE_HEURE_9				NUMBER(5,2),
	NOMBRE_HEURE_10				NUMBER(5,2),
	NOMBRE_HEURE_11				NUMBER(5,2),
	NOMBRE_HEURE_12				NUMBER(5,2),
	NOMBRE_HEURE_13				NUMBER(5,2),
	NOMBRE_HEURE_14				NUMBER(5,2),
	NOMBRE_HEURE_15				NUMBER(5,2),
	NOMBRE_HEURE_16				NUMBER(5,2), 
	NOMBRE_HEURE_17				NUMBER(5,2),
	NOMBRE_HEURE_18				NUMBER(5,2),
	NOMBRE_HEURE_19				NUMBER(5,2),
	NOMBRE_HEURE_20				NUMBER(5,2),
	NOMBRE_HEURE_21				NUMBER(5,2)
	) ;
  /* FOR HASHMAP AND RECORD */
--TYPE map_varchar IS TABLE OF TgeRefDcyCy1Cy2Type INDEX BY VARCHAR2(30);
cur_TgeRefDcy TgeRefDcyCy1Cy2Type;
--l_map map_varchar;
TYPE type_List_arr IS VARRAY(99) OF TgeRefDcyCy1Cy2Type;
lst_1 type_List_arr;
arrCycleSituation type_List_arr;
  /***************/
  
  TYPE TGE_REF_MAPDOType IS RECORD (
    NUMPAC	VARCHAR2(6),
    ELEMENT	VARCHAR2(4),
    OCCURENCE	VARCHAR2(2),
    DONNEEGXP	VARCHAR2(50),
    TABLEGXP	VARCHAR2(24),
    DONNFILTRE	VARCHAR2(50),
    OPERFILTRE	VARCHAR2(2),
    VALFILTRE	VARCHAR2(15),
    TRTPARTICULIER	VARCHAR2(4000),
    ENVOI_SYSTEMATIQUE	VARCHAR2(1),
    FORCABLE_ECRAN_GENERE	VARCHAR2(1)
	) ;
cur_TgeRefmapdo TGE_REF_MAPDOType;
TYPE type_List_arr_3 IS VARRAY(99) OF TGE_REF_MAPDOType;
lst_3 type_List_arr_3;


--TYPE dachtype IS RECORD();
TYPE DACH_Type IS RECORD (PAIEZAD	VARCHAR2(8 ),MATRIC	VARCHAR2(32 ),TYPE_WRITER	VARCHAR2(1 ),ZAA91	VARCHAR2(5 ),ZAA92	VARCHAR2(1 ),ZAA93	VARCHAR2(2 ),CODE_GTA	VARCHAR2(5 ),ZA914	VARCHAR2(5 ),CMPPCS	VARCHAR2(6 ),ZAB12	VARCHAR2(1 ),ZAB13	VARCHAR2(1 ),ZAB14	VARCHAR2(1 ),ZMODCNT	VARCHAR2(2 ),ZAB15	VARCHAR2(1 ),ZAB16	VARCHAR2(1 ),ZAB17	VARCHAR2(1 ),ZAB18	VARCHAR2(1 ),ZA719	DATE,ZAB05	VARCHAR2(2 ),ZAB06	DATE,ZAB07	VARCHAR2(2 ),ZAB08	VARCHAR2(1 ),ZAB09	VARCHAR2(1 ),ZAB10	VARCHAR2(1 ),ZAB11	VARCHAR2(1 ),DATE_SORTIE_SIT_BO	DATE,DATE_CREATION	DATE,DATE_DERNIERE_MODIF	DATE,DATE_FIN_BO	DATE,ZX528	VARCHAR2(1 ),ZX734	VARCHAR2(1 ),DSA302	DATE,DSCDDCDI	DATE,COLPRES	VARCHAR2(1 ),HHDCN	DATE,REPBNDF	VARCHAR2(1 ),DSRCDDCDI	DATE,TCDDCDI	VARCHAR2(1 ),ZA996	VARCHAR2(1 ),DSA751	DATE,DSAGM	DATE,DSAGP	DATE,DSANCR	DATE,DSATO	DATE,DSDAP	DATE,DSDCP	DATE,DSDECH	DATE,DSDJTP	DATE,DSDNP	DATE,DSDPE	DATE,DSDPEN	DATE,DSDPN	DATE,DSDPP	DATE,DSEPL	DATE,DSES1	DATE,DSES2	DATE,DSFCNI	DATE,DSFCNP	DATE,DSFCP	DATE,DSFICH	DATE,DSFNP	DATE,DSFPE	DATE,DSFPN	DATE,DSFPP	DATE,DSFSUS	DATE,DSNLI	DATE,DSRNVL	DATE,DSRPCH	DATE,DSSAD	DATE,DSSCG	DATE,DSSTC	DATE,EMPLOI	VARCHAR2(6 ),ESSAI	VARCHAR2(1 ),FILIR	VARCHAR2(2 ),IFCDD	VARCHAR2(1 ),JJCNT	NUMBER(2,0),JJESS1	NUMBER(2,0),JJESS2	NUMBER(2,0),JJESS4	NUMBER(2,0),MAJHA	VARCHAR2(1 ),METIER	VARCHAR2(4 ),MMCNT	NUMBER(2,0),MMESS1	NUMBER(2,0),MMESS2	NUMBER(2,0),MMESS4	NUMBER(2,0),MNTPEN	NUMBER(7,2),MOTAUG	VARCHAR2(2 ),MOTAUI	VARCHAR2(2 ),MTAUG	NUMBER(9,2),MTAUI	NUMBER(9,2),NBCSP	NUMBER(5,2),NICSP	VARCHAR2(1 ),NIVECH	VARCHAR2(4 ),NUMAPP	VARCHAR2(30 ),NUMDUE	VARCHAR2(10 ),NUMPCS	VARCHAR2(4 ),OTT	VARCHAR2(3 ),PEREMP	VARCHAR2(32 ),PPSAL	VARCHAR2(2 ),PRAUG	NUMBER(6,2),PRAUI	NUMBER(6,2),PREAVI	VARCHAR2(1 ),PREFF	VARCHAR2(1 ),PRPAY	VARCHAR2(1 ),PRVNP	VARCHAR2(1 ),QUALPE	VARCHAR2(50 ),RECAPE	VARCHAR2(1 ),REFCG	VARCHAR2(10 ),RETRAI	VARCHAR2(1 ),RNVESS	VARCHAR2(1 ),RVCNT	VARCHAR2(1 ),SAFBA	NUMBER(9,2),SENET	VARCHAR2(2 ),SITADM	VARCHAR2(2 ),SSFIL	VARCHAR2(2 ),TATR	VARCHAR2(1 ),TPNAB	VARCHAR2(1 ),TXACT	NUMBER(7,4),TXAID	NUMBER(7,4),TXEMP	NUMBER(7,4),TYPAGM	VARCHAR2(1 ),TYSUB	VARCHAR2(1 ),VALTF	VARCHAR2(1 ),VALTR	NUMBER(6,2),ZA364	VARCHAR2(5 ),ZA365	VARCHAR2(5 ),ZA368	VARCHAR2(1 ),ZA380	VARCHAR2(2 ),ZA406	VARCHAR2(2 ),ZA523	VARCHAR2(2 ),ZA554	VARCHAR2(3 ),ZA557	VARCHAR2(8 ),ZA626	VARCHAR2(1 ),ZA640	VARCHAR2(1 ),ZA650	VARCHAR2(2 ),ZA656	VARCHAR2(2 ),ZA700	VARCHAR2(2 ),ZA701	VARCHAR2(2 ),ZA750	VARCHAR2(1 ),ZA754	VARCHAR2(1 ),ZA755	VARCHAR2(1 ),ZA819	NUMBER(3,0),ZA820	NUMBER(3,0),ZA962	VARCHAR2(2 ),ZAA84	NUMBER(5,2),ZAA85	VARCHAR2(1 ),ZB071	VARCHAR2(3 ),ZB133	VARCHAR2(3 ),ZB193	VARCHAR2(3 ),ZB224	VARCHAR2(3 ),ZB330	VARCHAR2(2 ),ZB368	NUMBER(9,2),ZB369	NUMBER(9,2),ZB647	VARCHAR2(1 ),ZB648	VARCHAR2(1 ),ZB883	NUMBER(5,3),ZP895	NUMBER(9,2),ZQ183	VARCHAR2(1 ),ZQ188	VARCHAR2(1 ),ZQ272	VARCHAR2(32 ),ZQ764	VARCHAR2(1 ),ZREACT	DATE,ZT061	VARCHAR2(3 ),NUMPAC	VARCHAR2(6 ),PACMAT	VARCHAR2(8 ),NUMCNT	NUMBER(9,0),DATE_EFF	DATE,DATE_FIN	DATE,AACNT	NUMBER(2,0),AAESS4	NUMBER(2,0),ACDADM	VARCHAR2(1 ),ACDALC	VARCHAR2(1 ),ACDFNE	VARCHAR2(1 ),AFFS02	VARCHAR2(25 ),AIPAT	VARCHAR2(1 ),ALSMO	VARCHAR2(1 ),APARCE	VARCHAR2(2 ),AVNAA	NUMBER(7,2),AVNAL	NUMBER(7,2),AVNAN	NUMBER(7,2),AVNAV	NUMBER(7,2),AVNTIC	NUMBER(7,2),CADRE	VARCHAR2(1 ),CAMSA	VARCHAR2(2 ),CASAS	VARCHAR2(1 ),CATAFP	VARCHAR2(2 ),CBUD	VARCHAR2(10 ),CE	VARCHAR2(6 ),CFE	VARCHAR2(1 ),CFEAT	VARCHAR2(1 ),CFECV	VARCHAR2(1 ),CFEDC	VARCHAR2(1 ),CFEEM	VARCHAR2(1 ),CFEES	VARCHAR2(1 ),CFEMA	VARCHAR2(1 ),CFESF	VARCHAR2(1 ),CFEVE	VARCHAR2(1 ),CFEVI	VARCHAR2(1 ),CHTYPC	VARCHAR2(2 ),CLNC	VARCHAR2(2 ),CODCPN	VARCHAR2(3 ),CODETB	VARCHAR2(5 ),CODSTE	VARCHAR2(6 ),COEFF	NUMBER(5,0),COFRON	VARCHAR2(1 ),COMCNT	VARCHAR2(50 ),COMURB	VARCHAR2(4 ),CSCOMP	VARCHAR2(2 ),CSRTT	NUMBER(9,2),CSTAPA	VARCHAR2(2 ),CVCOLL	VARCHAR2(4 ),DICDD	NUMBER(9,2),DRPAI2	VARCHAR2(1 ),DSA277	DATE,DSA301	DATE,TUTEUR	VARCHAR2(50 ),NUMURS_PRT	VARCHAR2(18 ),SIREN_PRT	VARCHAR2(9 ),STATUT_PRT	VARCHAR2(3 ),CODAGE_INT	VARCHAR2(6 ),CODSOC_INT	VARCHAR2(6 ),IDPACMAT	VARCHAR2(14 ),ACT_ORG	VARCHAR2(6 ),DSAUI	DATE,DERUSA	VARCHAR2(1 ),DSFINC	DATE,MAAFFP	VARCHAR2(2 ),
DEBUT_PER_GENERATION_HP DATE, FIN_PER_GENERATION_HP DATE);
cur_dachtype DACH_Type;
TYPE type_List_arr_4 IS VARRAY(200) OF DACH_Type;
lst_4 type_List_arr_4;
  
sql_1 CLOB;
sql_2 CLOB;
sql_3 CLOB;
sql_4 CLOB;

 
 
 
 cpt number:=1;
 
 TYPE SituationType IS RECORD (
    numpac	VARCHAR2(30),
    pacmat	VARCHAR2(30),
    paieZad	VARCHAR2(30),
    numcnt	NUMBER(13,0),
    code_classe_horaire_ott	NUMBER(13,0),
    code_cycle_ott	NUMBER(13,0),
    dateDeb	DATE,
    dateFin	DATE,
    isGtaT1	boolean,
    HRS_SAMEDI	NUMBER(4,2),
    HRS_DIMANCHE	NUMBER(4,2)
);
--l_map_hpr map_hpr;
TYPE SituationType_arr_2 IS VARRAY(99) OF SituationType;
lst_Situation SituationType_arr_2;
 
 /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION calculateNomJourCanevas( ligneTgeRefHprType IN TgeRefHprType, dateEnCour IN DATE  ) RETURN VARCHAR;
  
  /**
  * retourne le numero de jour canevas 
  */
 FUNCTION calculateNumJourCanevas( ligneDcyCy1Cy2 IN TgeRefDcyCy1Cy2Type, local_dateEnCours IN DATE  ) RETURN NUMBER;
    
  /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION getValOfCycle( val IN VARCHAR2, obj IN TgeRefDcyCy1Cy2Type) RETURN NUMBER;
  
   FUNCTION getHprHoursNbre( val IN NUMBER, obj IN TgeRefHprType  )  RETURN NUMBER;
  
  
  /*
  * get value from DACH object selon clé
  */
 FUNCTION getValOfDACH( val IN VARCHAR2, obj IN DACH_Type  )  RETURN VARCHAR2;
  
  /*
  *   insertion d'un incident paie hors absence (a la fin de du traitement)
  */
PROCEDURE insertIncidentPaieHorsAbs( nbrHeur IN NUMBER,dateActu IN DATE, p_unIncident IN SituationType,  p_login IN VARCHAR2);
  
PROCEDURE principal( p_numpac IN VARCHAR2
 , p_pacmat IN VARCHAR2
 , p_paiezad IN VARCHAR2
 , p_numcnt IN NUMBER
 , p_date_eff IN VARCHAR2 
 , p_date_sortie_sit_bo IN VARCHAR2
 , p_login IN VARCHAR2
 ); 
 
 
END CALC_HP;

##
CALC_HP
=SQL=
create or replace PACKAGE BODY CALC_HP AS

 /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION calculateNomJourCanevas( ligneTgeRefHprType IN TgeRefHprType, dateEnCour IN DATE  )
  RETURN VARCHAR
  IS
  numJr NUMBER := 0;
  BEGIN
  select to_char(dateEnCour,'D') INTO numJr from dual;
  CASE numJr
    WHEN 1 THEN  RETURN 'Lundi';
    WHEN 2 THEN  RETURN 'Mardi';
    WHEN 3 THEN  RETURN 'Mercredi';
    WHEN 4 THEN  RETURN 'Jeudi';
    WHEN 5 THEN  RETURN 'Vendredi';
    WHEN 6 THEN  RETURN 'Samedi';
    WHEN 7 THEN  RETURN 'Dimanche';
    ELSE RETURN 'Erreur numéro jour';
  END CASE;
  
  
  END calculateNomJourCanevas;
  
  /**
  * retourne le numero de jour canevas 
  */
 FUNCTION calculateNumJourCanevas( ligneDcyCy1Cy2 IN TgeRefDcyCy1Cy2Type, local_dateEnCours IN DATE  )
  RETURN NUMBER
  IS
  local_numJourCanevas NUMBER;
  res1 NUMBER;
  res2 NUMBER;
  
  tmp NUMBER;
  tmp2 NUMBER;
  BEGIN
    IF((ligneDcyCy1Cy2.Date_debut-local_dateEnCours+ligneDcyCy1Cy2.Num_jour_entree_canevas)< ligneDcyCy1Cy2.Nombre_jours_cycle) THEN
      res1:=(ligneDcyCy1Cy2.date_debut - local_dateEnCours) / ligneDcyCy1Cy2.Nombre_jours_cycle;
      res2:=ABS((ligneDcyCy1Cy2.date_debut - local_dateEnCours)) + 1 - (TRUNC(ABS(res1)) * ligneDcyCy1Cy2.Nombre_jours_cycle); 
      
      tmp2:=TRUNC(ABS(res1));
      
     tmp:= ABS((ligneDcyCy1Cy2.date_debut - local_dateEnCours));
      
      
      IF( (res2-1) > ligneDcyCy1Cy2.Nombre_jours_cycle - ligneDcyCy1Cy2.Num_jour_entree_canevas ) THEN
        local_numJourCanevas := res2- (ligneDcyCy1Cy2.Nombre_jours_cycle - ligneDcyCy1Cy2.Num_jour_entree_canevas);
       ELSE
        local_numJourCanevas := res2 + ligneDcyCy1Cy2.Num_jour_entree_canevas-1;
      END IF;
    ELSE
        local_numJourCanevas :=ligneDcyCy1Cy2.Num_jour_entree_canevas + ABS(ligneDcyCy1Cy2.date_debut - local_dateEnCours); --
    END IF;
    
    RETURN local_numJourCanevas;
  END calculateNumJourCanevas;
    
  /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION getValOfCycle( val IN VARCHAR2, obj IN TgeRefDcyCy1Cy2Type  )
  RETURN NUMBER
  IS
  BEGIN
      IF val='NOMBRE_HEURE_1' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_1); END IF;
      IF val='NOMBRE_HEURE_2' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_2); END IF;
      IF val='NOMBRE_HEURE_3' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_3); END IF;
      IF val='NOMBRE_HEURE_4' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_4); END IF;
      IF val='NOMBRE_HEURE_5' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_5); END IF;
      IF val='NOMBRE_HEURE_6' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_6); END IF;
      IF val='NOMBRE_HEURE_7' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_7); END IF;
      IF val='NOMBRE_HEURE_8' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_8); END IF;
      IF val='NOMBRE_HEURE_9' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_9); END IF;
      IF val='NOMBRE_HEURE_10' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_10); END IF;
      IF val='NOMBRE_HEURE_11' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_11); END IF;
      IF val='NOMBRE_HEURE_12' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_12); END IF;
      IF val='NOMBRE_HEURE_13' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_13); END IF;
      IF val='NOMBRE_HEURE_14' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_14); END IF;
      IF val='NOMBRE_HEURE_15' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_15); END IF;
      IF val='NOMBRE_HEURE_16' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_16); END IF;
      IF val='NOMBRE_HEURE_17' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_17); END IF;
      IF val='NOMBRE_HEURE_18' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_18); END IF;
      IF val='NOMBRE_HEURE_19' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_19); END IF;
      IF val='NOMBRE_HEURE_20' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_20); END IF;
      IF val='NOMBRE_HEURE_21' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_21); END IF;
      RETURN NULL;
  END getValOfCycle;
  
   FUNCTION getHprHoursNbre( val IN NUMBER, obj IN TgeRefHprType  )
  RETURN NUMBER
  IS
  BEGIN
      IF val='Lundi' THEN RETURN TO_NUMBER(obj.HRS_LUNDI); END IF;
      IF val='Mardi' THEN RETURN TO_NUMBER(obj.HRS_MARDI); END IF;
      IF val='Mercredi' THEN RETURN TO_NUMBER(obj.HRS_MERCREDI); END IF;
      IF val='Jeudi' THEN RETURN TO_NUMBER(obj.HRS_JEUDI); END IF;
      IF val='Vendredi' THEN RETURN TO_NUMBER(obj.HRS_VENDREDI); END IF;
      IF val='Samedi' THEN RETURN TO_NUMBER(obj.HRS_SAMEDI); END IF;
      IF val='Dimanche' THEN RETURN TO_NUMBER(obj.HRS_DIMANCHE); END IF;
      RETURN NULL;
  END getHprHoursNbre;
  
  
  /*
  * get value from DACH object selon clé
  */
 FUNCTION getValOfDACH( val IN VARCHAR2, obj IN DACH_Type  )
  RETURN VARCHAR2
  IS
  BEGIN
    IF val='ZA996' THEN RETURN TO_CHAR(obj.ZA996); END IF;
    IF val='ZA819' THEN RETURN TO_CHAR(obj.ZA819); END IF;
    IF val='ZA820' THEN RETURN TO_CHAR(obj.ZA820); END IF;
    return '';
  END getValOfDACH;
  
  /*
  *   insertion d'un incident paie hors absence (a la fin de du traitement)
  */
PROCEDURE insertIncidentPaieHorsAbs( nbrHeur IN NUMBER,dateActu IN DATE, p_unIncident IN SituationType, p_login IN VARCHAR2 )
  IS
  seq NUMBER:='';
  BEGIN
  
  select SEQ_TGE_INCIDENTS_PAIE.NEXTVAL into seq from dual;
  
  INSERT INTO TGE_INCIDENTS_PAIE
	 (ID, NUMPAC, PAIEZAD, PERIODE, TYPE_TRAITEMENT, DATE_EFFET, TYPE_IP, CODE_IP
			, CODE_IMPUTATION, HEURES, ORIGINE, LOGIN_CREATE, DATE_CREATE, ROLE_CREATE, ORIGINE_CREATE
			, LOGIN_MAJ, DATE_MAJ, ROLE_MAJ, ORIGINE_MAJ, CLE_IMPORT, CLE_ABSENCE, IDPACMAT, ENVOYE, JOUR_OUVRABLE
			,JOUR_OUVRE , JOUR_OEUVRE, JOUR_CALENDAIRE, JOUR_HEURES )
			 values (
			  seq --ID
			  , p_unIncident.numPac --NUMPAC
			  , p_unIncident.paieZad --PAIEZAD
			  , TO_DATE((select periodeEnCours from TGE_REF_PAC where numpac=p_unIncident.numPac) , 'YYYYMM') --PERIODE
			  , (select CODETYPTRT  from (select CODETYPTRT from TGE_REF_TYPETRT where (NUMPAC=p_unIncident.numPac OR NUMPAC='*') and CODETYPTRT='TT' order by NUMPAC desc) where rownum = 1 ) --TYPE_TRAITEMENT
			  ,  dateActu --DATE_EFFET
			  , 'T' --TYPE_IP
			  , 'HP' --CODE_IP
			  , '' -- p_unIncident.code_imputation;
			  , nbrHeur --HEURES

			  , 'T' --ORIGINE
			  , p_login --LOGIN_CREATE
			  , sysdate --DATE_CREATE
			  , 'ADM' -- info non trouver :'( !!ROLE_CREATE DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , 'TRG_DIC_ADM_CONTRAT_HISTO' --ORIGINE_CREATE DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , p_login --LOGIN_MAJ
			  , sysdate --Date MAJ
			  , 'ADM' -- ROLE_MAJ
			  , 'TRG_DIC_ADM_CONTRAT_HISTO' --ORIGINE_MAJ DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , null --CLE_IMPORT

				,  null --CLE_ABSENCE
			  ,  p_unIncident.numpac||p_unIncident.pacmat --IDPACMAT
			  ,  '' --ENVOYE
			
			  ,  null -- p_unIncident.jour_ouvrable
			  ,  null -- p_unIncident.jour_ouvre
			  ,  null --p_unIncident.jour_oeuvre
			  ,  null --p_unIncident.jour_calendaire
			  ,  null --p_unIncident.jour_heures
			  );
  END;
  
  
  
   PROCEDURE principal( p_numpac IN VARCHAR2
 , p_pacmat IN VARCHAR2
 , p_paiezad IN VARCHAR2
 , p_numcnt IN NUMBER
 , p_date_eff IN VARCHAR2 
 , p_date_sortie_sit_bo IN VARCHAR2
 , p_login IN VARCHAR2
)
  IS
    cur_1 SYS_REFCURSOR; 
    cur_2 SYS_REFCURSOR; 
    cur_3 SYS_REFCURSOR; 
    cur_4 SYS_REFCURSOR; 
    debut_calcul_hp_DB DATE;
    v_period_en_cour varchar2(10);
    v_deb_retro varchar2(10);
    v_fin_per_gen_hp varchar2(10);
    m_embauche varchar2(6);
 	d_limiteMaj DATE;
 	d_dsdcn DATE;
 	v_count number;
    err_msg  VARCHAR(1000);
 	err_code VARCHAR(200);
    
  BEGIN
  
 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Begin)','Début de recalcul des HP pour la situation ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||', date_eff : '||p_date_eff||')');

      p_date_deb := TO_DATE(p_date_eff,'DD/MM/YYYY');
 	  p_date_fin := TO_DATE(p_date_sortie_sit_bo,'DD/MM/YYYY');
	  select count(*) into v_count from tge_periode_recueil_paiezad where NUMPAC=p_numpac and PAIEZAD=p_paiezad ;
  	  if  v_count<1 THEN 
 			FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La table TGE_PERIODE_RECUEIL_PAIEZAD n''est pas alimenté pour le paiezad '||p_paiezad);
 	    RETURN;
 	  END IF ; 

    /**** IS RETRO ? IS FUTUR *****/
FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup Periode)','Récupération de la période en cours, début retro et fin génération HP à partir de TGE_REF_PAC pour le numpac : '||p_numpac);
	 select pac.PERIODEENCOURS,pac.DEB_RETRO,tprp.fin_per_generation_hp INTO v_period_en_cour,v_deb_retro,v_fin_per_gen_hp
	 from tge_ref_pac pac
	 LEFT join tge_periode_recueil_paiezad tprp
	 ON (pac.PERIODEENCOURS=tprp.MOIS_PAIE and pac.NUMPAC = tprp.NUMPAC  and tprp.PAIEZAD=p_paiezad )
	 where pac.NUMPAC=p_numpac  ;
	 IF  ((v_fin_per_gen_hp is null )   and  (p_date_sortie_sit_bo= '31/12/2099'  )) THEN
	 	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La date de fin de recalcul est 20991231'); 
	 RETURN;
	 END IF;

--IF DACH FUTUR ALORS pas calcul HP
    IF ( v_fin_per_gen_hp is not null and p_date_deb>v_fin_per_gen_hp)THEN
		FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La date d''effet de la situation modifiée '||p_date_eff||' est dans le future, donc pas de recalcul des HP pour le paiezad '|| p_paiezad); RETURN;
      RETURN; 
    END IF;

/**** IS retro ***/
IF v_deb_retro IS NOT NULL AND v_period_en_cour > v_deb_retro THEN

BEGIN
 	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup mois d''embauche)','Récupération du mois d''embauche pour le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	SELECT MIN(MOIS_PAIE) INTO m_embauche FROM TGE_PERIODE_RECUEIL_PAIEZAD WHERE NUMPAC =p_numpac AND paiezad  =p_paiezad  ;
	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date d''embauche)','' );
	BEGIN
	 	SELECT DSDCN INTO d_dsdcn  FROM DIC_ADM_CONTRAT WHERE NUMPAC  =p_numpac and PACMAT = p_pacmat and NUMCNT = p_numcnt; 
	 EXCEPTION
	 WHEN OTHERS THEN
	 d_dsdcn:=  to_date ('31122099', 'ddmmyyyy');
	END; 
	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date limite retro)','Récupération de la date limite retro le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	 BEGIN 
	
	 	SELECT DEBUT_PERIODE_RECUEIL INTO d_limiteMaj FROM TGE_PERIODE_RECUEIL_PAIEZAD WHERE MOIS_PAIE=
		 (SELECT Greatest (m_embauche ,pac.deb_histo_retro,TO_CHAR(ADD_MONTHS(TO_DATE(pac.periodeencours,'YYYYMM'), - pac.nb_mois_retro),'YYYYMM'))
		 FROM tge_ref_pac pac
		 WHERE NUMPAC =p_numpac
		 )
		 AND NUMPAC  =p_numpac
		 AND PAIEZAD =p_paiezad;
	 EXCEPTION
	 WHEN others THEN
	  	d_limiteMaj := nvl (d_dsdcn,  to_date ('31122099', 'ddmmyyyy')); 
	 END;
	 IF (d_limiteMaj IS NULL)  THEN  
	 	d_limiteMaj := nvl (d_dsdcn,  to_date ('31122099', 'ddmmyyyy')); 
	 END IF;  
	 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date deb genHP)','Récupération de la date de début de génération des HP en mode retro pour le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	 SELECT
	 	debut_per_generation_hp  INTO debut_calcul_hp_DB
	 	FROM
	 tge_periode_recueil_paiezad tprp, tge_ref_pac p
	 WHERE
		 tprp.numpac = p_numpac
	 AND tprp.paiezad = p_paiezad
	 AND P.numpac = p_numpac
	 AND tprp.mois_paie = nvl (--mois_paie_hp
	 ( SELECT  MIN(tprp.mois_paie) FROM
	 tge_periode_recueil_paiezad tprp, tge_ref_pac pac
	 WHERE
	 tprp.numpac = p_numpac -- NEW.numpac
	 AND  tprp.numpac = pac.numpac
	 AND tprp.paiezad = p_paiezad -- NEW.paiezad
	 AND tprp.fin_periode_paie >=TO_DATE(p_date_deb,'DD/MM/YYYY')-- NEW.date_sortie_sit_bo
	 AND tprp.mois_paie >= greatest(pac.deb_histo_retro,TO_CHAR(ADD_MONTHS(TO_DATE(pac.periodeencours,'YYYYMM'), - pac.nb_mois_retro),'YYYYMM'))
	
	 ), p.periodeencours);
  EXCEPTION
 WHEN others THEN
 	debut_calcul_hp_DB:=null;
 END;

/**** fin retro ****/
ELSE
/*** NOT RETRO ***/
BEGIN
        select debut_per_generation_hp  INTO debut_calcul_hp_DB 
            from tge_periode_recueil_paiezad 
            where numpac=p_numpac
              and PAIEZAD=p_paiezad
              and MOIS_PAIE=(select PERIODEENCOURS from tge_ref_pac where NUMPAC=p_numpac );
EXCEPTION
 WHEN others THEN
 	debut_calcul_hp_DB:=null;
 END;
END IF; -- END test is RETRO    


p_date_deb:=GREATEST(p_date_deb,NVL(debut_calcul_hp_DB,p_date_deb),NVL(d_limiteMaj,p_date_deb) );

p_date_fin:=least (p_date_fin, NVL(v_fin_per_gen_hp,p_date_fin) );

    
   sql_1:='SELECT * 
            FROM
              ( SELECT dcy.numpac            AS numpac, dcy.code_classe_horaire_ott AS code_classe_horaire_ott, dcy.date_debut              AS date_debut,
                dcy.date_fin                AS date_fin, dcy.code_cycle_ott          AS code_cycle_ott,
                cy1.code_canevas_cycle_ott  AS code_canevas_cycle_ott, cy1.nombre_jours_cycle      AS nombre_jours_cycle,
                cy1.num_jour_entree_canevas AS num_jour_entree_canevas,    cy2.num_jour_dans_cycle     AS num_jour_dans_cycle, cy2.nombre_heure_1          AS nombre_heure
                
              FROM tge_ref_dcy dcy,  tge_ref_cy1 cy1,  tge_ref_cy2 cy2
              WHERE  dcy.numpac              IN ('''|| p_numpac /*SUBSTR(:NEW.IDPACMAT,0,6)*/ ||''')
              AND  cy1.numpac                 = dcy.numpac  AND cy2.numpac                 = cy1.numpac
              AND dcy.code_cycle_ott         = cy1.code_cycle_ott  AND cy1.code_canevas_cycle_ott = cy2.code_canevas_cycle_ott
              ORDER BY dcy.code_cycle_ott, dcy.code_classe_horaire_ott, cy1.code_canevas_cycle_ott, cy1.num_jour_entree_canevas
              ) pivot 	( MAX(nombre_heure) FOR num_jour_dans_cycle IN ( 	''1'' AS "NOMBRE_HEURE_1", ''2'' AS "NOMBRE_HEURE_2", ''3'' AS "NOMBRE_HEURE_3",
                                            ''4'' AS "NOMBRE_HEURE_4", ''5'' AS "NOMBRE_HEURE_5", ''6'' AS "NOMBRE_HEURE_6", ''7'' AS "NOMBRE_HEURE_7",
                                            ''8'' AS "NOMBRE_HEURE_8", ''9'' AS "NOMBRE_HEURE_9", ''10'' AS "NOMBRE_HEURE_10", ''11'' AS "NOMBRE_HEURE_11",
                                            ''12'' AS "NOMBRE_HEURE_12", ''13'' AS "NOMBRE_HEURE_13", ''14'' AS "NOMBRE_HEURE_14", ''15'' AS "NOMBRE_HEURE_15",
                                            ''16'' AS "NOMBRE_HEURE_16", ''17'' AS "NOMBRE_HEURE_17", ''18'' AS "NOMBRE_HEURE_18", ''19'' AS "NOMBRE_HEURE_19",
                                            ''20'' AS "NOMBRE_HEURE_20", ''21'' AS "NOMBRE_HEURE_21")
                    ) ORDER BY numpac, code_classe_horaire_ott, date_debut';
        
        
sql_2:='select numpac, code_hor_pres, date_debut, date_fin, hrs_lundi, hrs_mardi, hrs_mercredi, hrs_jeudi, hrs_vendredi, hrs_samedi, hrs_dimanche 
		  	 FROM   tge_ref_hpr 
		  	 WHERE  numpac               		IN ('''|| p_numpac ||''')
          ORDER BY numpac, code_hor_pres, date_debut';


/* A819,A820,A996 valeur alimenter manuellement dans Java*/
sql_3:='select M.NUMPAC,M.ELEMENT,M.OCCURENCE,M.DONNEEGXP,M.TABLEGXP,M.DONNFILTRE,M.OPERFILTRE,M.VALFILTRE,M.TRTPARTICULIER,M.ENVOI_SYSTEMATIQUE,M.FORCABLE_ECRAN_GENERE 
          from TGE_REF_MAPDO M  
          where ( ELEMENT IN (''A819'',''A820'',''A996'') ) 
          and  (((SELECT COUNT(1) FROM TGE_REF_MAPDO WHERE NUMPAC= '''||p_numpac||''' AND  ELEMENT = M.ELEMENT ) > 0 AND  M.NUMPAC='''||p_numpac||''')
              OR ((SELECT COUNT(1) FROM TGE_REF_MAPDO WHERE NUMPAC='''||p_numpac||''' AND ELEMENT = M.ELEMENT) = 0 AND M.NUMPAC=''*'' ))';

/* les colonne FIN_PER_GENERATION_HP et DEBUT_PER_GENERATION_HP sont null pour les alimenter manuellement lors d'itération*/
sql_4:='select PAIEZAD,MATRIC,TYPE_WRITER,ZAA91,ZAA92,ZAA93,CODE_GTA,ZA914,CMPPCS,ZAB12,ZAB13,ZAB14,ZMODCNT,ZAB15,ZAB16,ZAB17,ZAB18,ZA719,ZAB05,ZAB06,ZAB07,ZAB08,ZAB09,ZAB10,ZAB11,DATE_SORTIE_SIT_BO,DATE_CREATION,DATE_DERNIERE_MODIF,DATE_FIN_BO,ZX528,ZX734,DSA302,DSCDDCDI,COLPRES,HHDCN,REPBNDF,DSRCDDCDI,TCDDCDI,ZA996,DSA751,DSAGM,DSAGP,DSANCR,DSATO,DSDAP,DSDCP,DSDECH,DSDJTP,DSDNP,DSDPE,DSDPEN,DSDPN,DSDPP,DSEPL,DSES1,DSES2,DSFCNI,DSFCNP,DSFCP,DSFICH,DSFNP,DSFPE,DSFPN,DSFPP,DSFSUS,DSNLI,DSRNVL,DSRPCH,DSSAD,DSSCG,DSSTC,EMPLOI,ESSAI,FILIR,IFCDD,JJCNT,JJESS1,JJESS2,JJESS4,MAJHA,METIER,MMCNT,MMESS1,MMESS2,MMESS4,MNTPEN,MOTAUG,MOTAUI,MTAUG,MTAUI,NBCSP,NICSP,NIVECH,NUMAPP,NUMDUE,NUMPCS,OTT,PEREMP,PPSAL,PRAUG,PRAUI,PREAVI,PREFF,PRPAY,PRVNP,QUALPE,RECAPE,REFCG,RETRAI,RNVESS,RVCNT,SAFBA,SENET,SITADM,SSFIL,TATR,TPNAB,TXACT,TXAID,TXEMP,TYPAGM,TYSUB,VALTF,VALTR,ZA364,ZA365,ZA368,ZA380,ZA406,ZA523,ZA554,ZA557,ZA626,ZA640,ZA650,ZA656,ZA700,ZA701,ZA750,ZA754,ZA755,ZA819,ZA820,ZA962,ZAA84,ZAA85,ZB071,ZB133,ZB193,ZB224,ZB330,ZB368,ZB369,ZB647,ZB648,ZB883,ZP895,ZQ183,ZQ188,ZQ272,ZQ764,ZREACT,ZT061,NUMPAC,PACMAT,NUMCNT,DATE_EFF,DATE_FIN,AACNT,AAESS4,ACDADM,ACDALC,ACDFNE,AFFS02,AIPAT,ALSMO,APARCE,AVNAA,AVNAL,AVNAN,AVNAV,AVNTIC,CADRE,CAMSA,CASAS,CATAFP,CBUD,CE,CFE,CFEAT,CFECV,CFEDC,CFEEM,CFEES,CFEMA,CFESF,CFEVE,CFEVI,CHTYPC,CLNC,CODCPN,CODETB,CODSTE,COEFF,COFRON,COMCNT,COMURB,CSCOMP,CSRTT,CSTAPA,CVCOLL,DICDD,DRPAI2,DSA277,DSA301,TUTEUR,NUMURS_PRT,SIREN_PRT,STATUT_PRT,CODAGE_INT,CODSOC_INT,IDPACMAT,ACT_ORG,DSAUI,DERUSA,DSFINC,MAAFFP,
              null as DEBUT_PER_GENERATION_HP, 
              null as FIN_PER_GENERATION_HP
            from DIC_ADM_CONTRAT_HISTO where 
                NUMPAC = '''|| p_numpac || ''''
             || ' AND PACMAT ='''|| p_pacmat || ''''
             || ' AND numcnt ='''|| p_numcnt||'''' 
             || ' AND paiezad ='''|| p_paiezad||''''             
             || ' AND date_eff =   TO_DATE('''||p_date_eff ||''',''DD/MM/YYYY'')
               
                ORDER BY matric asc, date_eff asc' ;

FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement des cycles)','' );

/*****************************************************************************/
/******************** loadCyclesGroupByPacAndClasseHorOtt ********************/
/*****************************************************************************/
cpt:=1; lst_1:=type_List_arr();
  OPEN cur_1 FOR sql_1;
  LOOP
     FETCH cur_1 INTO cur_TgeRefDcy; EXIT WHEN cur_1%NOTFOUND;
      lst_1.extend;
      lst_1(cpt) :=cur_TgeRefDcy;
      cpt:=cpt+1;
  END LOOP;

FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement des horaires)','' );

/*****************************************************************/
/******************** loadCyclesHprGroupByPac ********************/
/*****************************************************************/
cpt:=1; lst_2:=type_List_arr_2();
  OPEN cur_2 FOR sql_2;
  LOOP
     FETCH cur_2 INTO cur_TgeRefhpr; EXIT WHEN cur_2%NOTFOUND;
    lst_2.extend;
    lst_2(cpt) :=cur_TgeRefhpr;
    cpt:=cpt+1;
  END LOOP;


/*****************************************************************/
/******************** getPopulationHistoContrat ********************/
/******************** chargerInfoElementMapDo ********************/
/*****************************************************************/
cpt:=1; lst_3:=type_List_arr_3();
  OPEN cur_3 FOR sql_3;
  LOOP
     FETCH cur_3 INTO cur_TgeRefmapdo; EXIT WHEN cur_3%NOTFOUND;
    lst_3.extend;
    lst_3(cpt) :=cur_TgeRefmapdo;
    cpt:=cpt+1;
  END LOOP;
FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement info contractuelle)','Chargement de toute la situation y compris horaire de présence, horaire de rémunération et type GTA ' );
/******************** chargerHistoContrat ********************/

cpt:=1; lst_4:=type_List_arr_4();
  OPEN cur_4 FOR sql_4;
  LOOP
     FETCH cur_4 INTO cur_dachtype; 
     EXIT WHEN cur_4%NOTFOUND;
    lst_4.extend;
    lst_4(cpt) :=cur_dachtype;
    lst_4(cpt).FIN_PER_GENERATION_HP := p_date_fin; 
    lst_4(cpt).DEBUT_PER_GENERATION_HP := p_date_deb; 
    cpt:=cpt+1;
  END LOOP;
  

 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Suppression  HP )','Suppression des anciens HP entre  '||p_date_deb ||' et '||p_date_fin );
  IF lst_4.COUNT >0 THEN
    delete from TGE_INCIDENTS_PAIE 
                  WHERE 
                  NUMPAC = p_numpac
                  AND PAIEZAD = p_PAIEZAD
                  AND TYPE_IP = 'T'
                  AND CODE_IP = 'HP'
                  AND DATE_EFFET  between p_date_deb AND p_date_fin;  -- sortie du boucle pour executer une seul fois
  END IF;
  
  lst_Situation:=SituationType_arr_2();
  arrCycleSituation:=type_List_arr();
  arrCycleSituation.extend;
    
    
  FOR k IN 1..lst_4.COUNT LOOP --K LOOP DACH
          lst_Situation.extend;
          
          /****** ajusterPeriodeSituation ******/
          IF (k=1 AND lst_4(k).DATE_EFF IS NOT NULL AND lst_4(k).DATE_EFF <p_date_deb) THEN 
              lst_4(k).DATE_EFF:=p_date_deb; --lst_4(cpt).DEBUT_PER_GENERATION_HP;
          END IF;  
   
          /***** build Situation *****/
          lst_Situation(k).numpac:=lst_4(k).NUMPAC;
          lst_Situation(k).Pacmat:=lst_4(k).Pacmat;
          lst_Situation(k).PaieZad:=lst_4(k).PaieZad;
          lst_Situation(k).DateDeb:=lst_4(k).DATE_EFF;
          lst_Situation(k).DateFin:=lst_4(k).FIN_PER_GENERATION_HP;
          
          --GET Donner specifier selon parametrage MAPDO
          --LOOP MAPDO
          FOR J IN 1..lst_3.COUNT LOOP --J LOOP
          
            --A996 / TYPE_GTA
            IF(lst_3(J).ELEMENT='A996' AND lst_3(J).NUMPAC=lst_4(k).NUMPAC) THEN
              lst_Situation(k).isGtaT1:=CASE WHEN getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k))='Z' THEN TRUE ELSE FALSE END;
            END IF; 
        
            -- Horaire Remu Presence
            --ZA819 / HORAIRE_REMUNERATION
            IF(lst_3(J).ELEMENT='A819') THEN
                    HoraireRemu := getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k));
                    
                    
            END IF;
            --ZA820 / HORAIRE_PRESENCE
            IF(lst_3(J).ELEMENT='A820') THEN
                    HorairePres := getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k));
                    
		           
            END IF;
             --horairePres/horaireRemu =>Code_classe_horaire_ott
            IF(lst_3.count=J) THEN 
              IF(horairePres IS NOT NULL) THEN
                lst_Situation(k).Code_classe_horaire_ott:=TO_NUMBER(horairePres);
              ELSE
              IF(horaireRemu IS NOT NULL) THEN
                lst_Situation(k).Code_classe_horaire_ott:=TO_NUMBER(horaireRemu);
              END IF;
              END IF;
            END IF;          
            
          END LOOP; --FIN J MAPDO LOOP 
          
    cpt:=1;     
    
     FOR M IN 1..lst_1.COUNT LOOP
       IF( lst_1(M).CODE_CLASSE_HORAIRE_OTT=lst_Situation(k).Code_classe_horaire_ott)THEN
          arrCycleSituation(cpt):=lst_1(M);
          cpt:=cpt+1;
       END IF;     
     END LOOP;
     
      cpt:=1; 
     arrCycleHprSituation:=type_List_arr_2();
     arrCycleHprSituation.extend;
     FOR M IN 1..lst_2.COUNT LOOP
       IF( lst_2(M).Code_hor_pres=lst_Situation(k).Code_classe_horaire_ott)THEN
          arrCycleHprSituation(cpt):=lst_2(M);
          cpt:=cpt+1;
       END IF;     
     END LOOP;



     END LOOP; --END K LOOP DACH
     
     
  --decomposerArrCycle_DCY_SituationEnTrancheAndCreateHP
  FOR k IN 1..lst_Situation.COUNT LOOP   
     
     IF(arrCycleSituation.COUNT>0) THEN
     FOR W IN 1..arrCycleSituation.COUNT LOOP
     /* La date de début du premier cycle d'une situation doit être égale à la date de début de la situation La date de
         fin du dernier cycle d'une situation doit être égale à la  date de fin de la situation*/
        IF(lst_Situation(k).datedeb <= arrCycleSituation(W).Date_fin AND lst_Situation(k).datefin >= arrCycleSituation(W).Date_debut) THEN
          dateDebTranchSitu:=null; dateFinTranchSitu:=null;
          
          --La date d'effet du cycle est antérieure à la date de début de la situation, On se met sur la date début de la situation
          IF(arrCycleSituation(W).Date_debut <= lst_Situation(k).datedeb) THEN
            dateDebTranchSitu:=lst_Situation(k).datedeb;
           ELSE
            dateDebTranchSitu:=arrCycleSituation(W).Date_debut;
          END IF;
          
          --La date de fin d'effet du cycle est postérieur à la date de fin de la situation, On se met sur la date de fin de la situation
          IF(arrCycleSituation(W).Date_fin >= lst_Situation(k).datefin) THEN
            dateFinTranchSitu:=lst_Situation(k).datefin;
           ELSE
            dateFinTranchSitu:=arrCycleSituation(W).Date_fin;
          END IF;
          
          dateEnCours:=dateDebTranchSitu;
		  FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Début insertion HP)',' ' );
		  
		  --LOOP INSERT TGE_INCIDENTS_PAIE
          WHILE (dateEnCours <= dateFinTranchSitu) LOOP
             numJourCanevas:=calculateNumJourCanevas( arrCycleSituation(W), dateEnCours );
             nbreHeures:=getValOfCycle('NOMBRE_HEURE_'||numJourCanevas,arrCycleSituation(W));
             arrHoraireParJour(TO_CHAR(dateEnCours,'dd/mm/yyyy')):=nbreHeures;
             -- Insertion des HP
             insertIncidentPaieHorsAbs( nbreHeures ,dateEnCours, lst_Situation(k),p_login );
             dateEnCours:=dateEnCours+1;
          END LOOP; --LOOP WHILE   
          
          FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Fin insertion HP)',' ' );
          
        END IF; --FIN decomposerArrCycleDcySituationEnTrancheAndCreateHP
         
  /*******************************************************/
  
    --decomposerArrCycle_Hpr_SituationEnTrancheAndCreateHP
 
   IF(arrCycleSituation.count=0) THEN
    FOR W IN 1..arrCycleHprSituation.COUNT LOOP  
      /* La date de début du premier cycle d'une situation doit être égale à la date de début de la situation La date de
         fin du dernier cycle d'une situation doit être égale à la  date de fin de la situation*/
        IF(lst_Situation(k).datedeb <= arrCycleHprSituation(W).Date_fin AND lst_Situation(k).datefin >= arrCycleHprSituation(W).Date_debut) THEN
          dateDebTranchSitu:=null; dateFinTranchSitu:=null;
          
          --La date d'effet du cycle est antérieure à la date de début de la situation, On se met sur la date début de la situation
          IF(arrCycleHprSituation(W).Date_debut <= lst_Situation(k).datedeb) THEN
            dateDebTranchSitu:=lst_Situation(k).datedeb;
           ELSE
            dateDebTranchSitu:=arrCycleHprSituation(W).Date_debut;
          END IF;
          
          --La date de fin d'effet du cycle est postérieur à la date de fin de la situation, On se met sur la date de fin de la situation
          IF(arrCycleHprSituation(W).Date_fin >= lst_Situation(k).datefin) THEN
            dateFinTranchSitu:=lst_Situation(k).datefin;
           ELSE
            dateFinTranchSitu:=arrCycleHprSituation(W).Date_fin;
          END IF;
          
          dateEnCours:=dateDebTranchSitu;
          
          --LOOP INSERT TGE_INCIDENTS_PAIE 
          WHILE (dateEnCours <= dateFinTranchSitu) LOOP
             jourSemaine:=calculateNomJourCanevas( arrCycleHprSituation(W), dateEnCours );
             nbreHeures:=getHprHoursNbre(numJourCanevas,arrCycleHprSituation(W));
             arrHoraireParJour(TO_CHAR(dateEnCours,'dd/mm/yyyy')):=nbreHeures;
             -- Insertion des HP
             insertIncidentPaieHorsAbs( nbreHeures ,dateEnCours, lst_Situation(k), p_login );
             dateEnCours:=dateEnCours+1;
          END LOOP; --LOOP WHILE TGE_INCIDENTS_PAIE
 
        END IF; -- END IF INTO THE LOOP
    END LOOP; --FIN decomposerArrCycleHprSituationEnTrancheAndCreateHP
  END IF; --END IF arrCycleSituation vide
  END LOOP; --END LOOP parcour situation
  END IF;
  END LOOP;  --END LOOP Situation génerer
    

 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de recalcul des HP pour la situation ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||',date_eff : '||p_date_eff||')');
 
	EXCEPTION
 	WHEN others THEN
  	err_code := SQLCODE;
 	err_msg  := SQLERRM;
 	FSED.FSED_ERREUR( 147 , 'Calc_HP (Erreur) ' , 'Erreur est survenue lors du recalcul des HP pour la situation  ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||',date_eff : '||p_date_eff||') ' , err_code||'-'||err_msg );


 END;

END CALC_HP;
##
TAG_CHARSET=@€éèç
##
TGE_REF_CARTE_FSED
=SQL IFEXIST=TGE_REF_CARTE_FSED=FORMATAGE_SQL=
ALTER TABLE TGE_REF_CARTE_FSED MODIFY FORMATAGE_SQL VARCHAR2(3500 BYTE)
##
TGE_REF_CARTE_FSED
==
DELETE from TGE_REF_CARTE_FSED where CODE_CARTE in ('00','00_ALP','11','29_30_DIF_FSED','29_30_DIF_FSED_RETRO','29_30_TGE_ELEMENT_PAIE','29_30_TGE_ELEMENT_PAIE_RETRO','309','309_RETRO','30_SIMULATION_PAIE','40','40_RETRO','409','409_RETRO','40_SIMULATION_PAIE','50','509','60','60_RETRO','609','609_RETRO','60_ABSENCES','60_SIMULATION_PAIE','70','70_RETRO','70_SIMULATION_PAIE','99','ANNULATION','ANNULATION_RETRO','ANNULATION_PERIODE_EMPLOI','IJEDI','W566','W566_RETRO','WL70','WL70_RETRO') and ORIGINE_CARTE='RD'
##
TGE_REF_CARTE_FSED
'00','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'00','RD','SELECT','002','00',NULL,NULL,'2','0','FALSE',NULL,NULL
'00','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','004',NULL,'TGE_REF_PAC','STATION_WEB','6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','005','TGE',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','006',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','007','5.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','009',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','010','Z2M',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','012','4.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'PARAM_ORIGINE(NUMERO_ECHANGE)'
'00','RD','SELECT','015',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'00','RD','SELECT','016',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'00','RD','SELECT','017',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,'FORMATAGE_TYPE_PASSAGE'
'00','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'00','RD','SELECT','019','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','020','1.00',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','021','181',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','022',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','023',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','024',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','026',NULL,NULL,NULL,'153',NULL,'FALSE',NULL,NULL
'00','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'00','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC =  @@@NUMPAC@@@',NULL
'00_ALP','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'00_ALP','RD','SELECT','002','00',NULL,NULL,'2','0','FALSE',NULL,NULL
'00_ALP','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','004',NULL,'TGE_REF_PAC','STATION_WEB','6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','005','ALP',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','006',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','007','5.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','009',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','010','Z2M',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','012','4.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'PARAM_ORIGINE(NUMERO_ECHANGE)'
'00_ALP','RD','SELECT','015',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'00_ALP','RD','SELECT','016',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'00_ALP','RD','SELECT','017',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,'FORMATAGE_TYPE_PASSAGE'
'00_ALP','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'00_ALP','RD','SELECT','019','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','020','1.00',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','021','181',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','022',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','023',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','024',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','026',NULL,NULL,NULL,'153',NULL,'FALSE',NULL,NULL
'00_ALP','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'00_ALP','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC =  @@@NUMPAC@@@',NULL
'11','RD','SELECT','001',NULL,'TGE_REF_VRVAL','NUMERO_DE_PAC','6','0','FALSE',NULL,NULL
'11','RD','SELECT','002','11',NULL,NULL,'2','0','FALSE',NULL,NULL
'11','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','004',NULL,'TGE_REF_VRVAL','CODE_TABLE','3',NULL,'TRUE',NULL,'FORMATAGE_SUBSTRING(CODE_TABLE,0,3)'
'11','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,'FORMATAGE_SUBSTRING(CODE_TABLE,4,2)'
'11','RD','SELECT','007',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','008','V',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','009',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','011',NULL,'TGE_REF_VRVAL','NUMERO_DE_LIGNE','1',NULL,'FALSE','SUBSTR(@COLONNE_CIBLE@,9,1)',NULL
'11','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','013',NULL,'TGE_REF_VRVAL','LONGUEUR_INFO','3','0','FALSE',NULL,NULL
'11','RD','SELECT','014',NULL,'TGE_REF_VRVAL','ENREGISTREMENT','86',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','015',NULL,NULL,NULL,'66',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','016',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','018','3',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','019',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(LOGIN)'
'11','RD','SELECT','020',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'11','RD','SELECT','021',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','023',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','024',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','025',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'11','RD','SELECT','026',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'11','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRVAL',NULL
'11','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRREP',NULL
'11','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRVAL.NUMERO_DE_PAC = @@@NUMPAC@@@',NULL
'11','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRREP.NUMERO_DE_PAC = @@@NUMPAC@@@',NULL
'11','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRVAL.NUMERO_DE_PAC = TGE_REF_VRREP.NUMERO_DE_PAC',NULL
'11','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRVAL.CODE_TABLE = TGE_REF_VRREP.CODE_TABLE',NULL
'11','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRREP.TEMOIN_VR_BASE in(''O'',''K'')',NULL
'29_30_DIF_FSED','RD','SELECT','001',NULL,'DIF_FSED','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','001',NULL,'DIF_FSED_PARTIERETRO','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','004',NULL,'DIF_FSED','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','004',NULL,'DIF_FSED_PARTIERETRO','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','007',NULL,'DIF_FSED','ELEM','4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','007',NULL,'DIF_FSED_PARTIERETRO','ELEM','4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','009',NULL,'DIF_FSED','OCC','16',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','009',NULL,'DIF_FSED_PARTIERETRO','OCC','16',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','012',NULL,'DIF_FSED','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_DONNEE_VALEUR'
'29_30_DIF_FSED_RETRO','RD','SELECT','012',NULL,'DIF_FSED_PARTIERETRO','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_DONNEE_VALEUR'
'29_30_DIF_FSED','RD','SELECT','013',NULL,'DIF_FSED','TYPE_DONNEE','1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','013',NULL,'DIF_FSED_PARTIERETRO','TYPE_DONNEE','1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE_DONNEE'
'29_30_DIF_FSED','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'29_30_DIF_FSED','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'29_30_DIF_FSED','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'29_30_DIF_FSED','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','021','DIF_FSED_PARTIERETRO',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_DIF_FSED','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'29_30_DIF_FSED','RD','SELECT','024',NULL,'DIF_FSED','DTEFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')','FORMATAGE_DATE_EFFET'
'29_30_DIF_FSED_RETRO','RD','SELECT','024',NULL,'DIF_FSED_PARTIERETRO','DTEFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')','FORMATAGE_DATE_EFFET'
'29_30_DIF_FSED','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'29_30_DIF_FSED_RETRO','RD','SELECT','025',NULL,'DIF_FSED_PARTIERETRO','PERIODE','6',0,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'29_30_DIF_FSED','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','/*+ FULL(DIF_FSED)*/ TGE_REF_DICOZ.MASQUE',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','/*+ FULL(DIF_FSED_PARTIERETRO)*/ TGE_REF_DICOZ.MASQUE',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED.CODEOP',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED_PARTIERETRO.CODEOP',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED.CLE',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED_PARTIERETRO.CLE',NULL
'29_30_DIF_FSED','RD','FROM_WITH','001',NULL,'DAC',NULL,NULL,NULL,NULL,'WITH DAC AS (select /*+ MATERIALIZE */ C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') group by C.MATRIC,C.PACMAT,DACH.PAIEZAD)',NULL
'29_30_DIF_FSED','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED',NULL
'29_30_DIF_FSED_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED_PARTIERETRO',NULL
'29_30_DIF_FSED','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'29_30_DIF_FSED','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED_PARTIERETRO.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.ID_TRT = @@@ID_TRT@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.ID_TRT = @@@ID_TRT@@@',NULL
'29_30_DIF_FSED','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.PAIEZAD = DAC.PAIEZAD',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.PAIEZAD = DAC.PAIEZAD',NULL
'29_30_DIF_FSED','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.ELEM = TGE_REF_DICOZ.ELEMENT',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.ELEM = TGE_REF_DICOZ.ELEMENT',NULL
'29_30_DIF_FSED','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC = @@@NUMPAC@@@)',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC = @@@NUMPAC@@@)',NULL
'29_30_DIF_FSED','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'PAIEZAD,ELEM,CLE,CODEOP,OCC',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','001',NULL,'TGE_ELEMENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','004',NULL,'TGE_ELEMENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','007',NULL,'TGE_ELEMENTS_PAIE','CODE_ELEMENT','4',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','009',NULL,'TGE_ELEMENTS_PAIE','INDICATIF','16',NULL,'FALSE',NULL,'FORMATAGE_INDICATIF'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','011',NULL,'TGE_ELEMENTS_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','012',NULL,'TGE_ELEMENTS_PAIE','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_VALEUR'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','019',NULL,'TGE_ELEMENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','020',NULL,'TGE_ELEMENTS_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE','CASE WHEN TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT = ''*'' THEN '''' ELSE TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT END',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','021',NULL,'TGE_ELEMENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','022',NULL,'TGE_ELEMENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','023',NULL,'TGE_ELEMENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','024',NULL,'TGE_ELEMENTS_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'29_30_TGE_ELEMENT_PAIE_RETRO','RD','SELECT','025',NULL,'TGE_ELEMENTS_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ELEMENTS_PAIE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ELEMENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.PAIEZAD = DAC.PAIEZAD ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.CODE_ELEMENT = TGE_REF_DICOZ.ELEMENT ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_ELEMENTS_PAIE.ORIGINE is null or TGE_ELEMENTS_PAIE.ORIGINE = ''T'' or TGE_ELEMENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT is not null) ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ @@@PERIODE_PAIE@@@ and TGE_ELEMENTS_PAIE.ACTION_RETRO is null ',NULL
'29_30_TGE_ELEMENT_PAIE_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,' AND TGE_ELEMENTS_PAIE.PERIODE in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_ELEMENTS_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_ELEMENTS_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_ELEMENTS_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_ELEMENTS_PAIE.idpacmat UNION ALL (SELECT periode_retro FROM (SELECT numpac,pacmat,TO_CHAR(date_R.mois,''YYYYMM'') AS periode_retro FROM (SELECT TRUNC(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois FROM dual CONNECT BY TRUNC (ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''))date_R ,(SELECT numpac,pacmat, MIN( periode_retro) AS periode_retro FROM GAP_TRT_MOIS_RETRO WHERE id_trt =@@@ID_TRT@@@ AND numpac =@@@NUMPAC@@@ GROUP BY numpac,pacmat) gap WHERE date_R.mois>=to_date(gap.periode_retro,''YYYYMM''))I WHERE I.NUMPAC=TGE_ELEMENTS_PAIE.NUMPAC AND I.numpac||I.pacmat=TGE_ELEMENTS_PAIE.idpacmat)) AND TGE_ELEMENTS_PAIE.ACTION_RETRO is not null ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD, TGE_ELEMENTS_PAIE.CODE_ELEMENT',NULL
'309','RD','SELECT','001',NULL,'MAJELEM','PAC','6','0','FALSE',NULL,NULL
'309','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'309','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','004',NULL,'MAJELEM','MATPAIE','8','0','FALSE',NULL,NULL
'309','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'309','RD','SELECT','007',NULL,'MAJELEM','NUMERO','4','0','FALSE',NULL,NULL
'309','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','009',NULL,'MAJELEM','INDICATI','16',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','011',NULL,'MAJELEM','SENS','1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','012',NULL,'MAJELEM','INFORMAT','40',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','015',NULL,NULL,NULL,'76',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','016',NULL,'MAJELEM','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'309','RD','SELECT','017',NULL,'MAJELEM','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'309','RD','SELECT','018',NULL,'MAJELEM','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'309','RD','SELECT','019',NULL,'MAJELEM','CODR','1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','020','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','021',NULL,'MAJELEM','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'309','RD','SELECT','022',NULL,'MAJELEM','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'309','RD','SELECT','023',NULL,'MAJELEM','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'309','RD','SELECT','024',NULL,'MAJELEM','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'309','RD','SELECT','025',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','026','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','029',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','030','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','031',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'309','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM',NULL
'309','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'309_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'309','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'309_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO = TO_CHAR(TO_DATE(MAJELEM.PERIODE,''MMYYYY''),''YYYYMM'')',NULL
'309','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'309_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT ',NULL
'309','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'309_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'309','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'309_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'309','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM.MATRICUL,MAJELEM.NUMERO',NULL
'30_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_ELEMENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_ELEMENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_ELEMENTS_PAIE','CODE_ELEMENT','4',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_ELEMENTS_PAIE','INDICATIF','16',NULL,'FALSE',NULL,'FORMATAGE_INDICATIF'
'30_SIMULATION_PAIE','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_ELEMENTS_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_ELEMENTS_PAIE','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_VALEUR'
'30_SIMULATION_PAIE','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'30_SIMULATION_PAIE','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'30_SIMULATION_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'30_SIMULATION_PAIE','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'30_SIMULATION_PAIE','RD','SELECT','019',NULL,'SIMU_TGE_ELEMENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'30_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_ELEMENTS_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE','CASE WHEN SIMU_TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT = ''*'' THEN '''' ELSE SIMU_TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT END',NULL
'30_SIMULATION_PAIE','RD','SELECT','021',NULL,'SIMU_TGE_ELEMENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'30_SIMULATION_PAIE','RD','SELECT','023',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'30_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'30_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_ELEMENTS_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'30_SIMULATION_PAIE','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','SIMU_TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'30_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'30_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_ELEMENTS_PAIE',NULL
'30_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'30_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_ELEMENTS_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'30_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'30_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_ELEMENTS_PAIE.PAIEZAD = DAC.PAIEZAD ',NULL
'30_SIMULATION_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_ELEMENTS_PAIE.CODE_ELEMENT = TGE_REF_DICOZ.ELEMENT ',NULL
'30_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD, SIMU_TGE_ELEMENTS_PAIE.CODE_ELEMENT',NULL
'40','RD','SELECT','001',NULL,'TGE_INCIDENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'40','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'40','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','004',NULL,'TGE_INCIDENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'40','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','007',NULL,'TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40','RD','SELECT','008',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','012',NULL,'TGE_INCIDENTS_PAIE','TYPE_IP','1',NULL,'FALSE','CASE WHEN @COLONNE_CIBLE@ = ''R'' THEN ''R'' WHEN @COLONNE_CIBLE@ = ''T'' THEN ''T'' ELSE '' '' END',NULL
'40','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','014','F',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','016',NULL,'TGE_INCIDENTS_PAIE','HEURES_T','5','0','TRUE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN '' '' ELSE nvl(TO_CHAR(TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_TRAVAILLEES'
'40','RD','SELECT','017',NULL,'TGE_INCIDENTS_PAIE','TEMOIN_HT','1','0','FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') and TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' ELSE ''0'' END',NULL
'40','RD','SELECT','018',NULL,'TGE_INCIDENTS_PAIE','HEURES_I','5','0','TRUE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') THEN '' '' ELSE nvl(TO_CHAR(TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_INCIDENT'
'40','RD','SELECT','019',NULL,'TGE_INCIDENTS_PAIE','TEMOIN_HI','1','0','FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') and TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') and CODE_IP is not null THEN ''1'' ELSE ''0'' END',NULL
'40','RD','SELECT','020',NULL,'TGE_INCIDENTS_PAIE','CODE_IP','5',NULL,'FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN to_char(TGE_INCIDENTS_PAIE.CODE_IP) ELSE '' '' END',NULL
'40','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','022',NULL,'TGE_INCIDENTS_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,'FORMATAGE_40_IMPUTATION'
'40','RD','SELECT','023',NULL,'TGE_INCIDENTS_PAIE','DOM_IMPUTATION','1',NULL,'FALSE','CASE WHEN TGE_INCIDENTS_PAIE.CODE_IMPUTATION is null THEN '''' ELSE CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') THEN ''1'' WHEN TGE_INCIDENTS_PAIE.TYPE_IP = ''R'' THEN ''H'' ELSE '' '' END END',NULL
'40','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','027',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'40','RD','SELECT','028',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'40','RD','SELECT','029',NULL,'TGE_INCIDENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'40','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','031',NULL,'TGE_INCIDENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','032',NULL,'TGE_INCIDENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'40','RD','SELECT','033',NULL,'TGE_INCIDENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'40','RD','SELECT','034',NULL,'TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40','RD','SELECT','035',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'40_RETRO','RD','SELECT','035',NULL,'TGE_INCIDENTS_PAIE','PERIODE','6',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')',NULL
'40','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','037',NULL,'TGE_INCIDENTS_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'40','RD','SELECT','041',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'40','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.TYPE_IP as TYPE_IP_FROM_TABLE',NULL
'40','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.CODE_IP as CODE_IP_FROM_TABLE',NULL
'40','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'40','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'40','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE',NULL
'40','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'40','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_PERIODE_RECUEIL_PAIEZAD',NULL
'40','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'40','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'40','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD  ',NULL
'40','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC',NULL
'40','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = TGE_PERIODE_RECUEIL_PAIEZAD.PAIEZAD',NULL
'40','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.ORIGINE is null or TGE_INCIDENTS_PAIE.ORIGINE = ''T'' or TGE_INCIDENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_T2 = ''W'' or ( MODE_T2 = ''R'' and ENVOI_MODE_R = ''O'' )))) ',NULL
'40','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' or (TGE_INCIDENTS_PAIE.TYPE_IP=''T'' and TGE_REF_PAC.ENVOI_HP = ''O''))',NULL
'40','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') @@@OPERATEUR_RETRO@@@ TGE_REF_PAC.PERIODEENCOURS and TGE_INCIDENTS_PAIE.ACTION_RETRO is null ',NULL
'40_RETRO','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,' and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_INCIDENTS_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_INCIDENTS_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_INCIDENTS_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_INCIDENTS_PAIE.idpacmat UNION ALL (SELECT periode_retro FROM (SELECT numpac,pacmat,TO_CHAR(date_R.mois,''YYYYMM'') AS periode_retro FROM (SELECT TRUNC(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois FROM dual CONNECT BY TRUNC (ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''))date_R ,(SELECT numpac,pacmat, MIN( periode_retro) AS periode_retro FROM GAP_TRT_MOIS_RETRO WHERE id_trt =@@@ID_TRT@@@ AND numpac =@@@NUMPAC@@@ GROUP BY numpac,pacmat) gap WHERE date_R.mois>=to_date(gap.periode_retro,''YYYYMM''))I WHERE I.NUMPAC=TGE_INCIDENTS_PAIE.NUMPAC AND I.numpac||I.pacmat=TGE_INCIDENTS_PAIE.idpacmat)) and NVL(TGE_INCIDENTS_PAIE.DERNIER_CODE_OPE,''M'')!=''S'' ',NULL
'40','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE = TGE_REF_PAC.PERIODEENCOURS',NULL
'40_RETRO','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') = TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE',NULL
'40','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_INCIDENTS_PAIE.TYPE_IP = ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_GENERATION_HP and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_GENERATION_HP and tge_ref_pac.envoi_hp =''O'')',NULL
'40','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET <= TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'40_RETRO','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PERIODE_RECUEIL and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'40','RD','WHERE','012',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_RECUEIL_RETRO and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_RECUEIL_RETRO and tge_ref_pac.gc_retro =''O'' AND RETRO_GC is not null))',NULL
'40','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_INCIDENTS_PAIE.DATE_EFFET',NULL
'409','RD','SELECT','001',NULL,'POINTAGE','PAC','6','0','FALSE',NULL,NULL
'409','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'409','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','004',NULL,'POINTAGE','MATPAIE','8','0','FALSE',NULL,NULL
'409','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'409','RD','SELECT','007',NULL,'POINTAGE','PTJDEB','8',NULL,'FALSE','TO_CHAR(PTJDEB,''YYYYMMDD'')',NULL
'409','RD','SELECT','008',NULL,'POINTAGE','PTJFIN','8',NULL,'FALSE','TO_CHAR(PTJFIN,''YYYYMMDD'')',NULL
'409','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','016',NULL,'POINTAGE','PTJHT','5','0','TRUE',NULL,'FORMATAGE_40_HEURES_TRAVAILLEES'
'409','RD','SELECT','017',NULL,'POINTAGE','PTJHT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'409','RD','SELECT','018',NULL,'POINTAGE','PTJHI','5','0','TRUE',NULL,'FORMATAGE_40_HEURES_INCIDENT'
'409','RD','SELECT','019',NULL,'POINTAGE','PTJHI','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'409','RD','SELECT','020',NULL,'POINTAGE','PTJCI','5',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','022',NULL,'POINTAGE','IMP','18',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','023',NULL,'POINTAGE','DOMIMP','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','024',NULL,'POINTAGE','REF','6',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','025',NULL,'POINTAGE','DOMREF','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','027',NULL,'POINTAGE','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'409','RD','SELECT','028',NULL,'POINTAGE','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'409','RD','SELECT','029',NULL,'POINTAGE','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'409','RD','SELECT','030',NULL,'POINTAGE','CODR','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','031','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','032',NULL,'POINTAGE','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'409','RD','SELECT','033',NULL,'POINTAGE','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'409','RD','SELECT','034',NULL,'POINTAGE','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'409','RD','SELECT','035',NULL,'POINTAGE','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'409','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','037','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','041','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE',''' '' as TYPE_IP_FROM_TABLE',NULL
'409','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE',''' '' as CODE_IP_FROM_TABLE',NULL
'409','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE',NULL
'409','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'409_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'409','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'409_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO = TO_CHAR(TO_DATE(POINTAGE.PERIODE,''MMYYYY''),''YYYYMM'')',NULL
'409','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'409_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT',NULL
'409','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'409_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'409','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'409_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'409','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE.MATRICUL',NULL
'40_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_INCIDENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_INCIDENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_INCIDENTS_PAIE','TYPE_IP','1',NULL,'FALSE','CASE WHEN @COLONNE_CIBLE@ = ''R'' THEN ''R'' WHEN @COLONNE_CIBLE@ = ''T'' THEN ''T'' ELSE '' '' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','014','F',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_INCIDENTS_PAIE','HEURES_T','5','0','TRUE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN '' '' ELSE nvl(TO_CHAR(SIMU_TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_TRAVAILLEES'
'40_SIMULATION_PAIE','RD','SELECT','017',NULL,'SIMU_TGE_INCIDENTS_PAIE','TEMOIN_HT','1','0','FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') and SIMU_TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' ELSE ''0'' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_INCIDENTS_PAIE','HEURES_I','5','0','TRUE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') THEN '' '' ELSE nvl(TO_CHAR(SIMU_TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_INCIDENT'
'40_SIMULATION_PAIE','RD','SELECT','019',NULL,'SIMU_TGE_INCIDENTS_PAIE','TEMOIN_HI','1','0','FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') and SIMU_TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') and CODE_IP is not null THEN ''1'' ELSE ''0'' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_INCIDENTS_PAIE','CODE_IP','5',NULL,'FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN to_char(SIMU_TGE_INCIDENTS_PAIE.CODE_IP) ELSE '' '' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_INCIDENTS_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,'FORMATAGE_40_IMPUTATION'
'40_SIMULATION_PAIE','RD','SELECT','023',NULL,'SIMU_TGE_INCIDENTS_PAIE','DOM_IMPUTATION','1',NULL,'FALSE','CASE WHEN SIMU_TGE_INCIDENTS_PAIE.CODE_IMPUTATION is null THEN '''' ELSE CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') THEN ''1'' WHEN SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'' THEN ''H'' ELSE '' '' END END',NULL
'40_SIMULATION_PAIE','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','027',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'40_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'40_SIMULATION_PAIE','RD','SELECT','029',NULL,'SIMU_TGE_INCIDENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'40_SIMULATION_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_INCIDENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'40_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'40_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_INCIDENTS_PAIE','PERIODE','6',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','037',NULL,'SIMU_TGE_INCIDENTS_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'40_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.TYPE_IP as TYPE_IP_FROM_TABLE',NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.CODE_IP as CODE_IP_FROM_TABLE',NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'40_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'40_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE',NULL
'40_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'40_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'40_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'40_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD  ',NULL
'40_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_INCIDENTS_PAIE.DATE_EFFET',NULL
'50','RD','SELECT','001',NULL,'TGE_IMPUTATIONS','NUMPAC','6','0','FALSE',NULL,NULL
'50','RD','SELECT','002','50',NULL,NULL,'2','0','FALSE',NULL,NULL
'50','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','004',NULL,'TGE_IMPUTATIONS','PAIEZAD','8','0','TRUE',NULL,NULL
'50','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','007',NULL,'TGE_IMPUTATIONS','NB_UNITE','15','0','TRUE',NULL,'FORMATAGE_NBRE_IMPUTATION'
'50','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','009',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','011',NULL,'TGE_IMPUTATIONS','IMPUTATION','18',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','015',NULL,NULL,NULL,'106',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','016',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'50','RD','SELECT','017',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'50','RD','SELECT','018',NULL,'TGE_IMPUTATIONS','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'50','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','020',NULL,'TGE_IMPUTATIONS','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','021',NULL,'TGE_IMPUTATIONS','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'50','RD','SELECT','022',NULL,'TGE_IMPUTATIONS','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'50','RD','SELECT','023',NULL,'TGE_IMPUTATIONS','PERIODE','8',NULL,'FALSE','@COLONNE_CIBLE@||''01''',NULL
'50','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'50','RD','SELECT','025',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','026',NULL,'TGE_IMPUTATIONS','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','029',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'50','RD','SELECT','030',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'50','RD','SELECT','031',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'50','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'50','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'50','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_IMPUTATIONS',NULL
'50','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_IMPUTATIONS.NUMPAC = @@@NUMPAC@@@',NULL
'50','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.PAIEZAD = DAC.PAIEZAD',NULL
'50','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.DERNIER_CODE_OPE <> ''S''',NULL
'50','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_IMPUTATIONS.ORIGINE is null or TGE_IMPUTATIONS.ORIGINE = ''T'' or TGE_IMPUTATIONS.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( (MODE_3060 = ''R'' or MODE_3060 = ''F'') and ENVOI_MODE_R = ''O'' ))))',NULL
'50','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.PERIODE <= @@@PERIODE_PAIE@@@',NULL
'50','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'509','RD','SELECT','001',NULL,'MAJIMPU','PAC','6','0','FALSE',NULL,NULL
'509','RD','SELECT','002','50',NULL,NULL,'2','0','FALSE',NULL,NULL
'509','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','004',NULL,'MAJIMPU','MATPAIE','8','0','FALSE',NULL,NULL
'509','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'509','RD','SELECT','007',NULL,'MAJIMPU','NOMBRE','15','0','FALSE',NULL,NULL
'509','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','009',NULL,'MAJIMPU','CODEUTIL','3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','011',NULL,'MAJIMPU','IMPUTATI','18',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','014',NULL,NULL,NULL,'106',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','015',NULL,'MAJIMPU','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'509','RD','SELECT','016',NULL,'MAJIMPU','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'509','RD','SELECT','017',NULL,'MAJIMPU','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'509','RD','SELECT','018',NULL,'MAJIMPU','CODR','1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','019','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','020',NULL,'MAJIMPU','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'509','RD','SELECT','021',NULL,'MAJIMPU','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'509','RD','SELECT','022',NULL,'MAJIMPU','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'509','RD','SELECT','023',NULL,'MAJIMPU','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'509','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','025','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','026',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','028','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','029',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'509','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU',NULL
'509','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'509','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'509','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJIMPU.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'509','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'509','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJIMPU.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'509','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU.MATRICUL',NULL
'60','RD','SELECT','001',NULL,'TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'60','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','007',NULL,'TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','009',NULL,'TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'60','RD','SELECT','010',NULL,'TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','011',NULL,'TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60','RD','SELECT','012',NULL,'TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','013',NULL,'TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60','RD','SELECT','014',NULL,'TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','015',NULL,'TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'60','RD','SELECT','016',NULL,'TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','018',NULL,'TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','020',NULL,'TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','022',NULL,'TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'60','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','024',NULL,'TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','025',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','026',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','027',NULL,NULL,NULL,'9',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60','RD','SELECT','030',NULL,'TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'60','RD','SELECT','031',NULL,'TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','032',NULL,'TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','033',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60','RD','SELECT','034',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60','RD','SELECT','035',NULL,'TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60','RD','SELECT','036',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'60_RETRO','RD','SELECT','036',NULL,'TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','038',NULL,'TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'60','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'60','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE',NULL
'60','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'60','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.TYPE_DONNEE = ''1''',NULL
'60','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'60','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_DONNEES_PAIE.ORIGINE is null or TGE_DONNEES_PAIE.ORIGINE = ''T'' or TGE_DONNEES_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_DONNEES_PAIE.CODE_REMPLACEMENT is not null)',NULL
'60','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ (SELECT PERIODEENCOURS FROM TGE_REF_PAC WHERE NUMPAC = @@@NUMPAC@@@) and TGE_DONNEES_PAIE.ACTION_RETRO is null',NULL
'60_RETRO','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_DONNEES_PAIE.PERIODE in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_DONNEES_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_DONNEES_PAIE.idpacmat UNION ALL (SELECT periode_retro FROM (SELECT numpac,pacmat,TO_CHAR(date_R.mois,''YYYYMM'') AS periode_retro FROM (SELECT TRUNC(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois FROM dual CONNECT BY TRUNC (ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''))date_R ,(SELECT numpac,pacmat, MIN( periode_retro) AS periode_retro FROM GAP_TRT_MOIS_RETRO WHERE id_trt =@@@ID_TRT@@@ AND numpac =@@@NUMPAC@@@ GROUP BY numpac,pacmat) gap WHERE date_R.mois>=to_date(gap.periode_retro,''YYYYMM''))I WHERE I.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND I.numpac||I.pacmat=TGE_DONNEES_PAIE.idpacmat)) AND TGE_DONNEES_PAIE.ACTION_RETRO is not null ',NULL
'60','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'609','RD','SELECT','001',NULL,'RUBDV','PAC','6','0','FALSE',NULL,NULL
'609','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,'FORMATAGE_NUMERO_CARTE_609'
'609','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','004',NULL,'RUBDV','MATPAIE','8','0','FALSE',NULL,NULL
'609','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'609','RD','SELECT','007',NULL,'RUBDV','RUBCOD','4','0','FALSE',NULL,NULL
'609','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','009',NULL,'RUBDV','RUBMTS','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'609','RD','SELECT','010',NULL,'RUBDV','RUBMTS','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','011',NULL,'RUBDV','RUBNBR','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'609','RD','SELECT','012',NULL,'RUBDV','RUBNBR','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','013',NULL,'RUBDV','RUBTAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'609','RD','SELECT','014',NULL,'RUBDV','RUBTAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','015',NULL,'RUBDV','RUBPCT','6',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','016',NULL,'RUBDV','RUBDOM','1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','018',NULL,'RUBDV','RUBSIGNE','1',NULL,'FALSE',NULL,'FORMATAGE_RUBSIGNE'
'609','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','020',NULL,'RUBDV','RUBIMPU','18',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','022',NULL,NULL,NULL,'10',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','023',NULL,NULL,NULL,'55',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','024',NULL,'RUBDV','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'609','RD','SELECT','025',NULL,'RUBDV','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'609','RD','SELECT','026',NULL,'RUBDV','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'609','RD','SELECT','027',NULL,'RUBDV','CODR','1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','028','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','029',NULL,'RUBDV','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'609','RD','SELECT','030',NULL,'RUBDV','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'609','RD','SELECT','031',NULL,'RUBDV','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'609','RD','SELECT','032',NULL,'RUBDV','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'609','RD','SELECT','033',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','034','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','035',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','036',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','037',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','039','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','040',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'609','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV',NULL
'609','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'609_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'609','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'609_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO =  TO_CHAR(TO_DATE(RUBDV.PERIODE,''MMYYYY''),''YYYYMM'') ',NULL
'609','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'609_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT',NULL
'609','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'609_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'609','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'609_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'609','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV.MATRICUL,RUBDV.RUBCOD',NULL
'60_ABSENCES','RD','SELECT','001',NULL,'TGE_ABSENCES','NUMPAC','6','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60_ABSENCES','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','007',NULL,'TGE_REF_PRE','RUB_ECHANGE','4',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','008',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','009',NULL,'TGE_ABSENCES','DUREE_CALC','15','0','TRUE','CASE WHEN TGE_REF_PRE.UNITE_TENUE = ''H'' THEN to_char(TGE_ABSENCES.DUREE_CALC_HEURES) WHEN TGE_REF_PRE.UNITE_TENUE = ''C'' THEN to_char(TGE_ABSENCES.DUREE_CALC_CALENDAIRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''O'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''S'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRABLE) WHEN TGE_REF_PRE.UNITE_TENUE = ''U'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OEUVRE) ELSE '''' END','FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_ABSENCES','RD','SELECT','010',NULL,'TGE_ABSENCES','TEMOIN_DUREE_CALC','1',NULL,'FALSE','CASE WHEN TGE_REF_PRE.UNITE_TENUE = ''H'' THEN to_char(TGE_ABSENCES.DUREE_CALC_HEURES) WHEN TGE_REF_PRE.UNITE_TENUE = ''C'' THEN to_char(TGE_ABSENCES.DUREE_CALC_CALENDAIRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''O'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''S'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRABLE) WHEN TGE_REF_PRE.UNITE_TENUE = ''U'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OEUVRE) ELSE '''' END','VALEUR_CONDITIONEE(NULL;0;1)'
'60_ABSENCES','RD','SELECT','011',NULL,NULL,NULL,'110',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','012',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60_ABSENCES','RD','SELECT','013',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60_ABSENCES','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','016',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(LOGIN)'
'60_ABSENCES','RD','SELECT','017',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60_ABSENCES','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60_ABSENCES','RD','SELECT','019',NULL,'TGE_ABSENCES','DATE_DEBUT','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_ABSENCES','RD','SELECT','020',NULL,'TGE_REF_PAC','PERIODEENCOURS','6',NULL,'FALSE','@COLONNE_CIBLE@||''01''',NULL
'60_ABSENCES','RD','SELECT','021',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','022','TT',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','023',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','024',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60_ABSENCES','RD','SELECT','026',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','027',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','distinct TGE_INCIDENTS_PAIE.CLE_ABSENCE',NULL
'60_ABSENCES','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60_ABSENCES','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'60_ABSENCES','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE',NULL
'60_ABSENCES','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES',NULL
'60_ABSENCES','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PRE',NULL
'60_ABSENCES','RD','FROM','005',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'60_ABSENCES','RD','FROM','006',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_PERIODE_RECUEIL_PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.NUMPAC = TGE_REF_PRE.NUMPAC',NULL
'60_ABSENCES','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MATRIC = DAC.MATRIC',NULL
'60_ABSENCES','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.ID = TGE_INCIDENTS_PAIE.CLE_ABSENCE',NULL
'60_ABSENCES','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC',NULL
'60_ABSENCES','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = TGE_PERIODE_RECUEIL_PAIEZAD.PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MOTIF = TGE_REF_PRE.CODE_INCIDENT',NULL
'60_ABSENCES','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.RUB_ECHANGE is not null',NULL
'60_ABSENCES','RD','WHERE','012',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.ORIGINE is null or TGE_INCIDENTS_PAIE.ORIGINE = ''T'' or TGE_INCIDENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_T2 = ''W'' or ( MODE_T2 = ''R'' and ENVOI_MODE_R = ''O'' )))) ',NULL
'60_ABSENCES','RD','WHERE','013',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' or (TGE_INCIDENTS_PAIE.TYPE_IP=''T'' and TGE_REF_PAC.ENVOI_HP = ''O''))',NULL
'60_ABSENCES','RD','WHERE','014',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') <= TGE_REF_PAC.PERIODEENCOURS',NULL
'60_ABSENCES','RD','WHERE','015',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') = TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE',NULL
'60_ABSENCES','RD','WHERE','016',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_INCIDENTS_PAIE.TYPE_IP = ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_GENERATION_HP and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_GENERATION_HP and tge_ref_pac.envoi_hp =''O'')',NULL
'60_ABSENCES','RD','WHERE','017',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PERIODE_RECUEIL and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'60_ABSENCES','RD','WHERE','018',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_RECUEIL_RETRO and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_RECUEIL_RETRO and tge_ref_pac.gc_retro =''O'' AND RETRO_GC is not null))',NULL
'60_ABSENCES','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_REF_PRE.RUB_ECHANGE',NULL
'60_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'60_SIMULATION_PAIE','RD','SELECT','010',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','013',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_SIMULATION_PAIE','RD','SELECT','014',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','015',NULL,'SIMU_TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'60_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'60_SIMULATION_PAIE','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','026',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','027',NULL,NULL,NULL,'9',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60_SIMULATION_PAIE','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60_SIMULATION_PAIE','RD','SELECT','030',NULL,'SIMU_TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'60_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','036',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','038',NULL,'SIMU_TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'60_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'60_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE',NULL
'60_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'60_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE = ''1''',NULL
'60_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70','RD','SELECT','001',NULL,'TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'70','RD','SELECT','002','70',NULL,NULL,'2','0','FALSE',NULL,NULL
'70','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','004',NULL,'TGE_DONNEES_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'70','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','007',NULL,'TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','009',NULL,'TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'70','RD','SELECT','010',NULL,'TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','011',NULL,'TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70','RD','SELECT','012',NULL,'TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','013',NULL,'TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70','RD','SELECT','014',NULL,'TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','015',NULL,'TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'70','RD','SELECT','016',NULL,'TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','018',NULL,'TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','020',NULL,'TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','022',NULL,'TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'70','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','024',NULL,'TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','025',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','026',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','027',NULL,'TGE_DONNEES_PAIE','PERIODE_AFFECTATION','9',NULL,'FALSE','CASE WHEN ( nvl(TO_CHAR(@COLONNE_CIBLE@,''YYYYMM''),'''') is null) THEN '''' ELSE CASE WHEN (TGE_REF_PAC.MPE=''S'') THEN TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||'' '' ELSE TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')||''001'' END END',NULL
'70','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'70','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'70','RD','SELECT','030',NULL,'TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'70','RD','SELECT','031',NULL,'TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','032',NULL,'TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','033',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70','RD','SELECT','034',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'70','RD','SELECT','035',NULL,'TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70','RD','SELECT','036',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'70_RETRO','RD','SELECT','036',NULL,'TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','038',NULL,'TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'70','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'70','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'70','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'70','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'70','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'70','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE',NULL
'70','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'70','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'70','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'70','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.TYPE_DONNEE in (''2'',''3'')',NULL
'70','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'70','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'70','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_DONNEES_PAIE.ORIGINE is null or TGE_DONNEES_PAIE.ORIGINE = ''T'' or TGE_DONNEES_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_DONNEES_PAIE.CODE_REMPLACEMENT is not null)',NULL
'70','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ (SELECT PERIODEENCOURS FROM TGE_REF_PAC WHERE NUMPAC = @@@NUMPAC@@@) and TGE_DONNEES_PAIE.ACTION_RETRO is null',NULL
'70_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_DONNEES_PAIE.PERIODE in (SELECT PERIODE_RETRO FROM GAP_RETRO_MATRIC G WHERE G.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND G.numpac||G.pacmat=TGE_DONNEES_PAIE.idpacmat union all select periode_retro from gap_selection_retro S where S.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND  S.numpac||S.pacmat=TGE_DONNEES_PAIE.idpacmat UNION ALL (SELECT periode_retro FROM (SELECT numpac,pacmat,TO_CHAR(date_R.mois,''YYYYMM'') AS periode_retro FROM (SELECT TRUNC(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois FROM dual CONNECT BY TRUNC (ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''))date_R ,(SELECT numpac,pacmat, MIN( periode_retro) AS periode_retro FROM GAP_TRT_MOIS_RETRO WHERE id_trt =@@@ID_TRT@@@ AND numpac =@@@NUMPAC@@@ GROUP BY numpac,pacmat) gap WHERE date_R.mois>=to_date(gap.periode_retro,''YYYYMM''))I WHERE I.NUMPAC=TGE_DONNEES_PAIE.NUMPAC AND I.numpac||I.pacmat=TGE_DONNEES_PAIE.idpacmat)) AND TGE_DONNEES_PAIE.ACTION_RETRO is not null ',NULL
'70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','002','70',NULL,NULL,'2','0','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_DONNEES_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'70_SIMULATION_PAIE','RD','SELECT','010',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','013',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70_SIMULATION_PAIE','RD','SELECT','014',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','015',NULL,'SIMU_TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'FALSE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'70_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'70_SIMULATION_PAIE','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','026',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','027',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_AFFECTATION','9',NULL,'FALSE','CASE WHEN ( nvl(TO_CHAR(@COLONNE_CIBLE@,''YYYYMM''),'''') is null) THEN '''' ELSE CASE WHEN (TGE_REF_PAC.MPE=''S'') THEN TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||'' '' ELSE TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')||''001'' END END',NULL
'70_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'70_SIMULATION_PAIE','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'70_SIMULATION_PAIE','RD','SELECT','030',NULL,'SIMU_TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'70_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'70_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','036',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','038',NULL,'SIMU_TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'70_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'70_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'70_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'70_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE',NULL
'70_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'70_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'70_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'70_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE in (''2'',''3'')',NULL
'70_SIMULATION_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'70_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'99','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'99','RD','SELECT','002','99',NULL,NULL,'2','0','FALSE',NULL,NULL
'99','RD','SELECT','003',NULL,NULL,NULL,'12',NULL,'FALSE',NULL,NULL
'99','RD','SELECT','004',NULL,NULL,NULL,'7','0','TRUE',NULL,'FORMATAGE_NBRE_LIGNE'
'99','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'99','RD','SELECT','006',NULL,NULL,NULL,'8','0','TRUE',NULL,'FORMATAGE_NBRE_CARACTERE'
'99','RD','SELECT','007',NULL,NULL,NULL,'204',NULL,'FALSE',NULL,NULL
'99','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'99','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'ANNULATION','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','007','££££',NULL,NULL,'4','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','012',NULL,NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'ANNULATION','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'ANNULATION','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'ANNULATION','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'ANNULATION','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'ANNULATION_RETRO','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'ANNULATION_RETRO','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'ANNULATION','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'ANNULATION','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'ANNULATION_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ), TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO)AS((select PACMAT,NUMPAC,PERIODE_RETRO from GAP_RETRO_MATRIC mat where mat.NUMPAC = @@@NUMPAC@@@)union all(select distinct PACMAT,NUMPAC ,PERIODE_RETRO from GAP_SELECTION_RETRO sel where sel.NUMPAC = @@@NUMPAC@@@ and not exists (select 1  from GAP_RETRO_MATRIC gap where gap.NUMPAC =sel.numpac and gap.pacmat=sel.pacmat  and gap.periode_retro=sel.periode_retro ))UNION ALL (select pacmat,numpac,periode_retro from(SELECT numpac,pacmat,TO_CHAR(date_R.mois,''YYYYMM'') AS periode_retro FROM(SELECT TRUNC(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois FROM dual CONNECT BY TRUNC (ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''))date_R ,(SELECT numpac,pacmat,min( periode_retro) as periode_retro FROM GAP_TRT_MOIS_RETRO WHERE id_trt =@@@ID_TRT@@@ and numpac=@@@NUMPAC@@@ group by numpac,pacmat) gap Where date_R.mois>=to_date(gap.periode_retro,''YYYYMM''))interm WHERE NOT EXISTS (SELECT 1 FROM GAP_RETRO_MATRIC gap WHERE gap.NUMPAC     =interm.numpac AND gap.pacmat       =interm.pacmat AND gap.periode_retro=interm.periode_retro )AND NOT EXISTS (SELECT 1 FROM GAP_SELECTION_RETRO gap WHERE gap.NUMPAC     =interm.numpac AND gap.pacmat       =interm.pacmat AND gap.periode_retro=interm.periode_retro )))SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC,RETRO.PERIODE_RETRO AS PERIODE, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,TABLE_RETRO RETRO WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND RETRO.NUMPAC =C.NUMPAC  AND RETRO.PACMAT =C.PACMAT AND to_date(RETRO.PERIODE_RETRO,''yyyymm'') >= trunc(DACS.dsdsc,''month'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ,RETRO.PERIODE_RETRO) DAC',NULL
'ANNULATION','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and DAC.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC=@@@NUMPAC@@@)',NULL
'ANNULATION','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','001',NULL,'DELETED_PAIEZAD','NUMPAC','6','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','004',NULL,'DELETED_PAIEZAD','PAIEZAD','8','0','TRUE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','007','$$$$',NULL,NULL,'4','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','012',NULL,NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','017',NULL,'DELETED_PAIEZAD','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','018',NULL,'DELETED_PAIEZAD','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD',NULL
'ANNULATION_PERIODE_EMPLOI','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION_PERIODE_EMPLOI','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION_PERIODE_EMPLOI','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC=@@@NUMPAC@@@ and (TGE_REF_PAC.MPE is not null and TGE_REF_PAC.MPE <> ''N'')',NULL
'ANNULATION_PERIODE_EMPLOI','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD.PAIEZAD',NULL
'IJEDI','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'IJEDI','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'IJEDI','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'IJEDI','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','007','T653',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','009',NULL,'TGE_ABSENCES','DATE_DEBUT','16',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||MOTIF',NULL
'IJEDI','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','012',NULL,'TGE_ABSENCES','DATE_FIN','40',NULL,'FALSE','least(TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD''),nvl(TO_CHAR(DAC.DATE_SORTIE_SIT_BO,''YYYYMMDD''),''20991231''))',NULL
'IJEDI','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'IJEDI','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'IJEDI','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'IJEDI','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'IJEDI','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','021',NULL,'TGE_ABSENCES','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','022',NULL,'TGE_ABSENCES','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'IJEDI','RD','SELECT','023',NULL,'TGE_ABSENCES','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'IJEDI','RD','SELECT','024',NULL,'TGE_REF_PAC','PERIODEENCOURS','8',NULL,'FALSE','@COLONNE_CIBLE@||''01''','FORMATAGE_DATE_EFFET'
'IJEDI','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'IJEDI','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'IJEDI','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'IJEDI','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'IJEDI','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'IJEDI','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'IJEDI','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ABSENCES.MOTIF',NULL
'IJEDI','RD','SELECT_EN_PLUS','005',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ABSENCES.ID',NULL
'IJEDI','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'IJEDI','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES',NULL
'IJEDI','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'IJEDI','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'IJEDI','RD','FROM','005',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PRE',NULL
'IJEDI','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.IJEDI in (''M'',''E'')',NULL
'IJEDI','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MOTIF = TGE_REF_PRE.CODE_INCIDENT',NULL
'IJEDI','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MATRIC = DAC.MATRIC',NULL
'IJEDI','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.MOTIF_ABS is not null',NULL
'IJEDI','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.OPTION_CONSERV_HISTO = ''A''',NULL
'IJEDI','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.ELEMENT = ''T653''',NULL
'IJEDI','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_ABSENCES.DATE_DEBUT <= DAC.DSDCN and (DAC.DSDCN is null or (TGE_ABSENCES.DATE_FIN >= DAC.DSDCN))) or (TGE_ABSENCES.DATE_DEBUT >= DAC.DSDCN and (DAC.DATE_SORTIE_SIT_BO is null or (TGE_ABSENCES.DATE_DEBUT <= DAC.DATE_SORTIE_SIT_BO))))',NULL
'IJEDI','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'W566','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'W566','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'W566','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'W566','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','007','W566',NULL,NULL,'4','0','FALSE',NULL,NULL
'W566','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','012','200',NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','013','N',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'W566','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'W566','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'W566','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'W566','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'W566','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'W566_RETRO','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'W566','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'W566_RETRO','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'W566','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'W566','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'W566','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'W566_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )< TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO)AS ((SELECT PACMAT,NUMPAC,PERIODE_RETRO FROM GAP_RETRO_MATRIC mat WHERE mat.NUMPAC = @@@NUMPAC@@@)UNION ALL(SELECT PACMAT,NUMPAC,PERIODE_RETRO FROM GAP_SELECTION_RETRO sel WHERE sel.NUMPAC = @@@NUMPAC@@@)) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') as periode, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'')  AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois >=trunc(DACS.dsdsc,''month'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') ) DAC',NULL
'W566','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'W566','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'W566','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'W566_RETRO','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
'WL70','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'WL70','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'WL70','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'WL70','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','007','WL70',NULL,NULL,'4','0','FALSE',NULL,NULL
'WL70','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','012',NULL,'DAC','DTRETRO','40',NULL,'FALSE',NULL,NULL
'WL70_RETRO','RD','SELECT','012',NULL,'DAC','DSDSC','40',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'WL70','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'WL70','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'WL70','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'WL70','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'WL70','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'WL70','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'WL70','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'WL70','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'WL70','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT, DACH2.PAIEZAD) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )<= TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO) AS (SELECT PACMAT,NUMPAC,min(PERIODE_RETRO) over (partition by PACMAT, NUMPAC) FROM GAP_RETRO_MATRIC_ALL WHERE NUMPAC = @@@NUMPAC@@@) SELECT C.PACMAT, DACS.PAIEZAD, C.MATRIC, to_char(D.mois,''yyyymm'') as periode,  MIN(DACS.DSDSC) DSDSC, MAX(DACS.DSFSC) DSFSC, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO, TO_CHAR(trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month''),''ddmmyyyy'') DTRETRO   FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D, TABLE_RETRO R WHERE C.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and R.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'')  AND DACS.PACMAT= R.PACMAT AND DACS.DSDSC <= trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month'') AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois <=trunc(DACS.dsfsc,''month'') GROUP BY C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm''),R.PERIODE_RETRO ) DAC',NULL
'WL70_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT, DACH2.PAIEZAD) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )<= TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO) AS (SELECT PACMAT,NUMPAC,min(PERIODE_RETRO) over (partition by PACMAT, NUMPAC) FROM GAP_RETRO_MATRIC_ALL WHERE NUMPAC = @@@NUMPAC@@@) SELECT C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') as periode,  TO_CHAR(MIN(DACS.DSDSC),''ddmmyyyy'') DSDSC, MAX(DACS.DSFSC) DSFSC,MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO, TO_CHAR(MIN(DACS.DSDSC),''yyyymm'') MOISCOMP FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D, TABLE_RETRO R WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and R.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT AND DACS.PACMAT= R.PACMAT and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND DACS.DSDSC >= trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month'') AND DACS.DSFSC >= LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')) AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois <=trunc(DACS.dsfsc,''month'') GROUP BY C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm''),R.PERIODE_RETRO ) DAC',NULL
'WL70','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'WL70','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'WL70_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@ AND DAC.PERIODE >=DAC.MOISCOMP',NULL
'WL70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
'WL70_RETRO','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
##
CALC_HP
=SQL=
create or replace PACKAGE CALC_HP IS

p_date_deb DATE;
p_date_fin DATE;
horaireRemu VARCHAR(255);--horaire remu.	
horairePres VARCHAR(255); -- tmp horaire pres. 
dateDebTranchSitu DATE;   --tmp loop cycle dans situation
dateFinTranchSitu DATE;   --tmp loop cycle dans situation
dateEnCours DATE;         --date en cours pour calcul LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
numJourCanevas NUMBER(5,0);--tmp for LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
nbreHeures NUMBER(5,2);    --tmp for LOOP decomposerArrCycleDcySituationEnTrancheAndCreateHP
jourSemaine VARCHAR2(15);


TYPE map_horaire_par_jour IS TABLE OF NUMBER INDEX BY VARCHAR2(50);
arrHoraireParJour map_horaire_par_jour;

/*****************/
TYPE TgeRefHprType IS RECORD (
    NUMPAC	VARCHAR2(6 BYTE),
    CODE_HOR_PRES	NUMBER(3,0),
    DATE_DEBUT	DATE,
    DATE_FIN	DATE,
    HRS_LUNDI	NUMBER(4,2),
    HRS_MARDI	NUMBER(4,2),
    HRS_MERCREDI	NUMBER(4,2),
    HRS_JEUDI	NUMBER(4,2),
    HRS_VENDREDI	NUMBER(4,2),
    HRS_SAMEDI	NUMBER(4,2),
    HRS_DIMANCHE	NUMBER(4,2)
);
--TYPE map_hpr IS TABLE OF TgeRefHprType INDEX BY VARCHAR2(30);
cur_TgeRefhpr TgeRefHprType;
--l_map_hpr map_hpr;
TYPE type_List_arr_2 IS VARRAY(99) OF TgeRefHprType;
lst_2 type_List_arr_2;
arrCycleHprSituation type_List_arr_2;


TYPE TgeRefDcyCy1Cy2Type IS RECORD (
	NUMPAC						VARCHAR2(6 BYTE),
	CODE_CLASSE_HORAIRE_OTT 	NUMBER(3,0),
	DATE_DEBUT 					DATE,
	DATE_FIN 					DATE,
	CODE_CYCLE_OTT 				NUMBER(3,0),
	CODE_CANEVAS_CYCLE_OTT 		NUMBER(3,0),
	NOMBRE_JOURS_CYCLE			NUMBER(3,0),
	NUM_JOUR_ENTREE_CANEVAS		NUMBER(3,0),
	NOMBRE_HEURE_1 				NUMBER(5,2),
	NOMBRE_HEURE_2				NUMBER(5,2),
	NOMBRE_HEURE_3				NUMBER(5,2),
	NOMBRE_HEURE_4				NUMBER(5,2),
	NOMBRE_HEURE_5				NUMBER(5,2),
	NOMBRE_HEURE_6				NUMBER(5,2),
	NOMBRE_HEURE_7				NUMBER(5,2),
	NOMBRE_HEURE_8				NUMBER(5,2),
	NOMBRE_HEURE_9				NUMBER(5,2),
	NOMBRE_HEURE_10				NUMBER(5,2),
	NOMBRE_HEURE_11				NUMBER(5,2),
	NOMBRE_HEURE_12				NUMBER(5,2),
	NOMBRE_HEURE_13				NUMBER(5,2),
	NOMBRE_HEURE_14				NUMBER(5,2),
	NOMBRE_HEURE_15				NUMBER(5,2),
	NOMBRE_HEURE_16				NUMBER(5,2), 
	NOMBRE_HEURE_17				NUMBER(5,2),
	NOMBRE_HEURE_18				NUMBER(5,2),
	NOMBRE_HEURE_19				NUMBER(5,2),
	NOMBRE_HEURE_20				NUMBER(5,2),
	NOMBRE_HEURE_21				NUMBER(5,2)
	) ;
  /* FOR HASHMAP AND RECORD */
--TYPE map_varchar IS TABLE OF TgeRefDcyCy1Cy2Type INDEX BY VARCHAR2(30);
cur_TgeRefDcy TgeRefDcyCy1Cy2Type;
--l_map map_varchar;
TYPE type_List_arr IS VARRAY(99) OF TgeRefDcyCy1Cy2Type;
lst_1 type_List_arr;
arrCycleSituation type_List_arr;
  /***************/
  
  TYPE TGE_REF_MAPDOType IS RECORD (
    NUMPAC	VARCHAR2(6),
    ELEMENT	VARCHAR2(4),
    OCCURENCE	VARCHAR2(2),
    DONNEEGXP	VARCHAR2(50),
    TABLEGXP	VARCHAR2(24),
    DONNFILTRE	VARCHAR2(50),
    OPERFILTRE	VARCHAR2(2),
    VALFILTRE	VARCHAR2(15),
    TRTPARTICULIER	VARCHAR2(4000),
    ENVOI_SYSTEMATIQUE	VARCHAR2(1),
    FORCABLE_ECRAN_GENERE	VARCHAR2(1)
	) ;
cur_TgeRefmapdo TGE_REF_MAPDOType;
TYPE type_List_arr_3 IS VARRAY(99) OF TGE_REF_MAPDOType;
lst_3 type_List_arr_3;


--TYPE dachtype IS RECORD();
 TYPE DACH_Type IS RECORD (PAIEZAD VARCHAR2(8),
    MATRIC VARCHAR2(32),
    NUMPAC VARCHAR2(6),
    PACMAT VARCHAR2(8),
    NUMCNT  NUMBER(9,0),
    DATE_EFF  DATE,
    DATE_FIN  DATE,
    ZA819  NUMBER(3,0),
    ZA820  NUMBER(3,0),
    ZA996  VARCHAR2(1),
    DEBUT_PER_GENERATION_HP DATE,
    FIN_PER_GENERATION_HP  DATE);
 cur_dachtype DACH_Type;

TYPE type_List_arr_4 IS VARRAY(200) OF DACH_Type;
lst_4 type_List_arr_4;
  
sql_1 CLOB;
sql_2 CLOB;
sql_3 CLOB;
sql_4 CLOB;

 
 
 
 cpt number:=1;
 
 TYPE SituationType IS RECORD (
    numpac	VARCHAR2(30),
    pacmat	VARCHAR2(30),
    paieZad	VARCHAR2(30),
    numcnt	NUMBER(13,0),
    code_classe_horaire_ott	NUMBER(13,0),
    code_cycle_ott	NUMBER(13,0),
    dateDeb	DATE,
    dateFin	DATE,
    isGtaT1	boolean,
    HRS_SAMEDI	NUMBER(4,2),
    HRS_DIMANCHE	NUMBER(4,2)
);
--l_map_hpr map_hpr;
TYPE SituationType_arr_2 IS VARRAY(99) OF SituationType;
lst_Situation SituationType_arr_2;
 
 /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION calculateNomJourCanevas( ligneTgeRefHprType IN TgeRefHprType, dateEnCour IN DATE  ) RETURN VARCHAR;
  
  /**
  * retourne le numero de jour canevas 
  */
 FUNCTION calculateNumJourCanevas( ligneDcyCy1Cy2 IN TgeRefDcyCy1Cy2Type, local_dateEnCours IN DATE  ) RETURN NUMBER;
    
  /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION getValOfCycle( val IN VARCHAR2, obj IN TgeRefDcyCy1Cy2Type) RETURN NUMBER;
  
   FUNCTION getHprHoursNbre( val IN NUMBER, obj IN TgeRefHprType  )  RETURN NUMBER;
  
  
  /*
  * get value from DACH object selon clé
  */
 FUNCTION getValOfDACH( val IN VARCHAR2, obj IN DACH_Type  )  RETURN VARCHAR2;
  
  /*
  *   insertion d'un incident paie hors absence (a la fin de du traitement)
  */
PROCEDURE insertIncidentPaieHorsAbs( nbrHeur IN NUMBER,dateActu IN DATE, p_unIncident IN SituationType,  p_login IN VARCHAR2);
  
PROCEDURE principal( p_numpac IN VARCHAR2
 , p_pacmat IN VARCHAR2
 , p_paiezad IN VARCHAR2
 , p_numcnt IN NUMBER
 , p_date_eff IN VARCHAR2 
 , p_date_sortie_sit_bo IN VARCHAR2
 , p_login IN VARCHAR2
 ); 
 
 
END CALC_HP;

##
CALC_HP
=SQL=
create or replace PACKAGE BODY CALC_HP AS

 /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION calculateNomJourCanevas( ligneTgeRefHprType IN TgeRefHprType, dateEnCour IN DATE  )
  RETURN VARCHAR
  IS
  numJr NUMBER := 0;
  BEGIN
  select to_char(dateEnCour,'D') INTO numJr from dual;
  CASE numJr
    WHEN 1 THEN  RETURN 'Lundi';
    WHEN 2 THEN  RETURN 'Mardi';
    WHEN 3 THEN  RETURN 'Mercredi';
    WHEN 4 THEN  RETURN 'Jeudi';
    WHEN 5 THEN  RETURN 'Vendredi';
    WHEN 6 THEN  RETURN 'Samedi';
    WHEN 7 THEN  RETURN 'Dimanche';
    ELSE RETURN 'Erreur numéro jour';
  END CASE;
  
  
  END calculateNomJourCanevas;
  
  /**
  * retourne le numero de jour canevas 
  */
 FUNCTION calculateNumJourCanevas( ligneDcyCy1Cy2 IN TgeRefDcyCy1Cy2Type, local_dateEnCours IN DATE  )
  RETURN NUMBER
  IS
  local_numJourCanevas NUMBER;
  res1 NUMBER;
  res2 NUMBER;
  
  tmp NUMBER;
  tmp2 NUMBER;
  BEGIN
    IF((ligneDcyCy1Cy2.Date_debut-local_dateEnCours+ligneDcyCy1Cy2.Num_jour_entree_canevas)< ligneDcyCy1Cy2.Nombre_jours_cycle) THEN
      res1:=(ligneDcyCy1Cy2.date_debut - local_dateEnCours) / ligneDcyCy1Cy2.Nombre_jours_cycle;
      res2:=ABS((ligneDcyCy1Cy2.date_debut - local_dateEnCours)) + 1 - (TRUNC(ABS(res1)) * ligneDcyCy1Cy2.Nombre_jours_cycle); 
      
      tmp2:=TRUNC(ABS(res1));
      
     tmp:= ABS((ligneDcyCy1Cy2.date_debut - local_dateEnCours));
      
      
      IF( (res2-1) > ligneDcyCy1Cy2.Nombre_jours_cycle - ligneDcyCy1Cy2.Num_jour_entree_canevas ) THEN
        local_numJourCanevas := res2- (ligneDcyCy1Cy2.Nombre_jours_cycle - ligneDcyCy1Cy2.Num_jour_entree_canevas);
       ELSE
        local_numJourCanevas := res2 + ligneDcyCy1Cy2.Num_jour_entree_canevas-1;
      END IF;
    ELSE
        local_numJourCanevas :=ligneDcyCy1Cy2.Num_jour_entree_canevas + ABS(ligneDcyCy1Cy2.date_debut - local_dateEnCours); --
    END IF;
    
    RETURN local_numJourCanevas;
  END calculateNumJourCanevas;
    
  /**
  * récupérer valeur de l'objet TgeRefDcyCy1Cy2 selon chaine de caractére (nom colonne)
  */
  FUNCTION getValOfCycle( val IN VARCHAR2, obj IN TgeRefDcyCy1Cy2Type  )
  RETURN NUMBER
  IS
  BEGIN
      IF val='NOMBRE_HEURE_1' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_1); END IF;
      IF val='NOMBRE_HEURE_2' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_2); END IF;
      IF val='NOMBRE_HEURE_3' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_3); END IF;
      IF val='NOMBRE_HEURE_4' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_4); END IF;
      IF val='NOMBRE_HEURE_5' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_5); END IF;
      IF val='NOMBRE_HEURE_6' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_6); END IF;
      IF val='NOMBRE_HEURE_7' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_7); END IF;
      IF val='NOMBRE_HEURE_8' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_8); END IF;
      IF val='NOMBRE_HEURE_9' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_9); END IF;
      IF val='NOMBRE_HEURE_10' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_10); END IF;
      IF val='NOMBRE_HEURE_11' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_11); END IF;
      IF val='NOMBRE_HEURE_12' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_12); END IF;
      IF val='NOMBRE_HEURE_13' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_13); END IF;
      IF val='NOMBRE_HEURE_14' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_14); END IF;
      IF val='NOMBRE_HEURE_15' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_15); END IF;
      IF val='NOMBRE_HEURE_16' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_16); END IF;
      IF val='NOMBRE_HEURE_17' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_17); END IF;
      IF val='NOMBRE_HEURE_18' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_18); END IF;
      IF val='NOMBRE_HEURE_19' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_19); END IF;
      IF val='NOMBRE_HEURE_20' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_20); END IF;
      IF val='NOMBRE_HEURE_21' THEN RETURN TO_NUMBER(obj.NOMBRE_HEURE_21); END IF;
      RETURN NULL;
  END getValOfCycle;
  
   FUNCTION getHprHoursNbre( val IN NUMBER, obj IN TgeRefHprType  )
  RETURN NUMBER
  IS
  BEGIN
      IF val='Lundi' THEN RETURN TO_NUMBER(obj.HRS_LUNDI); END IF;
      IF val='Mardi' THEN RETURN TO_NUMBER(obj.HRS_MARDI); END IF;
      IF val='Mercredi' THEN RETURN TO_NUMBER(obj.HRS_MERCREDI); END IF;
      IF val='Jeudi' THEN RETURN TO_NUMBER(obj.HRS_JEUDI); END IF;
      IF val='Vendredi' THEN RETURN TO_NUMBER(obj.HRS_VENDREDI); END IF;
      IF val='Samedi' THEN RETURN TO_NUMBER(obj.HRS_SAMEDI); END IF;
      IF val='Dimanche' THEN RETURN TO_NUMBER(obj.HRS_DIMANCHE); END IF;
      RETURN NULL;
  END getHprHoursNbre;
  
  
  /*
  * get value from DACH object selon clé
  */
 FUNCTION getValOfDACH( val IN VARCHAR2, obj IN DACH_Type  )
  RETURN VARCHAR2
  IS
  BEGIN
    IF val='ZA996' THEN RETURN TO_CHAR(obj.ZA996); END IF;
    IF val='ZA819' THEN RETURN TO_CHAR(obj.ZA819); END IF;
    IF val='ZA820' THEN RETURN TO_CHAR(obj.ZA820); END IF;
    return '';
  END getValOfDACH;
  
  /*
  *   insertion d'un incident paie hors absence (a la fin de du traitement)
  */
PROCEDURE insertIncidentPaieHorsAbs( nbrHeur IN NUMBER,dateActu IN DATE, p_unIncident IN SituationType, p_login IN VARCHAR2 )
  IS
  seq NUMBER:='';
  BEGIN
  
  select SEQ_TGE_INCIDENTS_PAIE.NEXTVAL into seq from dual;
  
  INSERT INTO TGE_INCIDENTS_PAIE
	 (ID, NUMPAC, PAIEZAD, PERIODE, TYPE_TRAITEMENT, DATE_EFFET, TYPE_IP, CODE_IP
			, CODE_IMPUTATION, HEURES, ORIGINE, LOGIN_CREATE, DATE_CREATE, ROLE_CREATE, ORIGINE_CREATE
			, LOGIN_MAJ, DATE_MAJ, ROLE_MAJ, ORIGINE_MAJ, CLE_IMPORT, CLE_ABSENCE, IDPACMAT, ENVOYE, JOUR_OUVRABLE
			,JOUR_OUVRE , JOUR_OEUVRE, JOUR_CALENDAIRE, JOUR_HEURES )
			 values (
			  seq --ID
			  , p_unIncident.numPac --NUMPAC
			  , p_unIncident.paieZad --PAIEZAD
			  , TO_DATE((select periodeEnCours from TGE_REF_PAC where numpac=p_unIncident.numPac) , 'YYYYMM') --PERIODE
			  , (select CODETYPTRT  from (select CODETYPTRT from TGE_REF_TYPETRT where (NUMPAC=p_unIncident.numPac OR NUMPAC='*') and CODETYPTRT='TT' order by NUMPAC desc) where rownum = 1 ) --TYPE_TRAITEMENT
			  ,  dateActu --DATE_EFFET
			  , 'T' --TYPE_IP
			  , 'HP' --CODE_IP
			  , '' -- p_unIncident.code_imputation;
			  , nbrHeur --HEURES

			  , 'T' --ORIGINE
			  , p_login --LOGIN_CREATE
			  , sysdate --DATE_CREATE
			  , 'ADM' -- info non trouver :'( !!ROLE_CREATE DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , 'TRG_DIC_ADM_CONTRAT_HISTO' --ORIGINE_CREATE DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , p_login --LOGIN_MAJ
			  , sysdate --Date MAJ
			  , 'ADM' -- ROLE_MAJ
			  , 'TRG_DIC_ADM_CONTRAT_HISTO' --ORIGINE_MAJ DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER DANGER -------
			  , null --CLE_IMPORT

				,  null --CLE_ABSENCE
			  ,  p_unIncident.numpac||p_unIncident.pacmat --IDPACMAT
			  ,  '' --ENVOYE
			
			  ,  null -- p_unIncident.jour_ouvrable
			  ,  null -- p_unIncident.jour_ouvre
			  ,  null --p_unIncident.jour_oeuvre
			  ,  null --p_unIncident.jour_calendaire
			  ,  null --p_unIncident.jour_heures
			  );
  END;
  
  
  
   PROCEDURE principal( p_numpac IN VARCHAR2
 , p_pacmat IN VARCHAR2
 , p_paiezad IN VARCHAR2
 , p_numcnt IN NUMBER
 , p_date_eff IN VARCHAR2 
 , p_date_sortie_sit_bo IN VARCHAR2
 , p_login IN VARCHAR2
)
  IS
    cur_1 SYS_REFCURSOR; 
    cur_2 SYS_REFCURSOR; 
    cur_3 SYS_REFCURSOR; 
    cur_4 SYS_REFCURSOR; 
    debut_calcul_hp_DB DATE;
    v_period_en_cour varchar2(10);
    v_deb_retro varchar2(10);
    v_fin_per_gen_hp varchar2(10);
    m_embauche varchar2(6);
 	d_limiteMaj DATE;
 	d_dsdcn DATE;
 	v_count number;
    err_msg  VARCHAR(1000);
 	err_code VARCHAR(200);
    
  BEGIN
  
 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Begin)','Début de recalcul des HP pour la situation ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||', date_eff : '||p_date_eff||')');

      p_date_deb := TO_DATE(p_date_eff,'DD/MM/YYYY');
 	  p_date_fin := TO_DATE(p_date_sortie_sit_bo,'DD/MM/YYYY');
	  select count(*) into v_count from tge_periode_recueil_paiezad where NUMPAC=p_numpac and PAIEZAD=p_paiezad ;
  	  if  v_count<1 THEN 
 			FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La table TGE_PERIODE_RECUEIL_PAIEZAD n''est pas alimenté pour le paiezad '||p_paiezad);
 	    RETURN;
 	  END IF ; 

    /**** IS RETRO ? IS FUTUR *****/
FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup Periode)','Récupération de la période en cours, début retro et fin génération HP à partir de TGE_REF_PAC pour le numpac : '||p_numpac);
	 select pac.PERIODEENCOURS,pac.DEB_RETRO,tprp.fin_per_generation_hp INTO v_period_en_cour,v_deb_retro,v_fin_per_gen_hp
	 from tge_ref_pac pac
	 LEFT join tge_periode_recueil_paiezad tprp
	 ON (pac.PERIODEENCOURS=tprp.MOIS_PAIE and pac.NUMPAC = tprp.NUMPAC  and tprp.PAIEZAD=p_paiezad )
	 where pac.NUMPAC=p_numpac  ;
	 IF  ((v_fin_per_gen_hp is null )   and  (p_date_sortie_sit_bo= '31/12/2099'  )) THEN
	 	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La date de fin de recalcul est 20991231'); 
	 RETURN;
	 END IF;

--IF DACH FUTUR ALORS pas calcul HP
    IF ( v_fin_per_gen_hp is not null and p_date_deb>v_fin_per_gen_hp)THEN
		FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de CALC HP. La date d''effet de la situation modifiée '||p_date_eff||' est dans le future, donc pas de recalcul des HP pour le paiezad '|| p_paiezad); RETURN;
      RETURN; 
    END IF;

/**** IS retro ***/
IF v_deb_retro IS NOT NULL AND v_period_en_cour > v_deb_retro THEN

BEGIN
 	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup mois d''embauche)','Récupération du mois d''embauche pour le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	SELECT MIN(MOIS_PAIE) INTO m_embauche FROM TGE_PERIODE_RECUEIL_PAIEZAD WHERE NUMPAC =p_numpac AND paiezad  =p_paiezad  ;
	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date d''embauche)','' );
	BEGIN
	 	SELECT DSDCN INTO d_dsdcn  FROM DIC_ADM_CONTRAT WHERE NUMPAC  =p_numpac and PACMAT = p_pacmat and NUMCNT = p_numcnt; 
	 EXCEPTION
	 WHEN OTHERS THEN
	 d_dsdcn:=  to_date ('31122099', 'ddmmyyyy');
	END; 
	FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date limite retro)','Récupération de la date limite retro le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	 BEGIN 
	
	 	SELECT DEBUT_PERIODE_RECUEIL INTO d_limiteMaj FROM TGE_PERIODE_RECUEIL_PAIEZAD WHERE MOIS_PAIE=
		 (SELECT Greatest (m_embauche ,pac.deb_histo_retro,TO_CHAR(ADD_MONTHS(TO_DATE(pac.periodeencours,'YYYYMM'), - pac.nb_mois_retro),'YYYYMM'))
		 FROM tge_ref_pac pac
		 WHERE NUMPAC =p_numpac
		 )
		 AND NUMPAC  =p_numpac
		 AND PAIEZAD =p_paiezad;
	 EXCEPTION
	 WHEN others THEN
	  	d_limiteMaj := nvl (d_dsdcn,  to_date ('31122099', 'ddmmyyyy')); 
	 END;
	 IF (d_limiteMaj IS NULL)  THEN  
	 	d_limiteMaj := nvl (d_dsdcn,  to_date ('31122099', 'ddmmyyyy')); 
	 END IF;  
	 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Recup date deb genHP)','Récupération de la date de début de génération des HP en mode retro pour le numpac : '||p_numpac ||'  paiezad '||p_paiezad );
	 SELECT
	 	debut_per_generation_hp  INTO debut_calcul_hp_DB
	 	FROM
	 tge_periode_recueil_paiezad tprp, tge_ref_pac p
	 WHERE
		 tprp.numpac = p_numpac
	 AND tprp.paiezad = p_paiezad
	 AND P.numpac = p_numpac
	 AND tprp.mois_paie = nvl (--mois_paie_hp
	 ( SELECT  MIN(tprp.mois_paie) FROM
	 tge_periode_recueil_paiezad tprp, tge_ref_pac pac
	 WHERE
	 tprp.numpac = p_numpac -- NEW.numpac
	 AND  tprp.numpac = pac.numpac
	 AND tprp.paiezad = p_paiezad -- NEW.paiezad
	 AND tprp.fin_periode_paie >=TO_DATE(p_date_deb,'DD/MM/YYYY')-- NEW.date_sortie_sit_bo
	 AND tprp.mois_paie >= greatest(pac.deb_histo_retro,TO_CHAR(ADD_MONTHS(TO_DATE(pac.periodeencours,'YYYYMM'), - pac.nb_mois_retro),'YYYYMM'))
	
	 ), p.periodeencours);
  EXCEPTION
 WHEN others THEN
 	debut_calcul_hp_DB:=null;
 END;

/**** fin retro ****/
ELSE
/*** NOT RETRO ***/
BEGIN
        select debut_per_generation_hp  INTO debut_calcul_hp_DB 
            from tge_periode_recueil_paiezad 
            where numpac=p_numpac
              and PAIEZAD=p_paiezad
              and MOIS_PAIE=(select PERIODEENCOURS from tge_ref_pac where NUMPAC=p_numpac );
EXCEPTION
 WHEN others THEN
 	debut_calcul_hp_DB:=null;
 END;
END IF; -- END test is RETRO    


p_date_deb:=GREATEST(p_date_deb,NVL(debut_calcul_hp_DB,p_date_deb),NVL(d_limiteMaj,p_date_deb) );

p_date_fin:=least (p_date_fin, NVL(v_fin_per_gen_hp,p_date_fin) );

    
   sql_1:='SELECT * 
            FROM
              ( SELECT dcy.numpac            AS numpac, dcy.code_classe_horaire_ott AS code_classe_horaire_ott, dcy.date_debut              AS date_debut,
                dcy.date_fin                AS date_fin, dcy.code_cycle_ott          AS code_cycle_ott,
                cy1.code_canevas_cycle_ott  AS code_canevas_cycle_ott, cy1.nombre_jours_cycle      AS nombre_jours_cycle,
                cy1.num_jour_entree_canevas AS num_jour_entree_canevas,    cy2.num_jour_dans_cycle     AS num_jour_dans_cycle, cy2.nombre_heure_1          AS nombre_heure
                
              FROM tge_ref_dcy dcy,  tge_ref_cy1 cy1,  tge_ref_cy2 cy2
              WHERE  dcy.numpac              IN ('''|| p_numpac /*SUBSTR(:NEW.IDPACMAT,0,6)*/ ||''')
              AND  cy1.numpac                 = dcy.numpac  AND cy2.numpac                 = cy1.numpac
              AND dcy.code_cycle_ott         = cy1.code_cycle_ott  AND cy1.code_canevas_cycle_ott = cy2.code_canevas_cycle_ott
              ORDER BY dcy.code_cycle_ott, dcy.code_classe_horaire_ott, cy1.code_canevas_cycle_ott, cy1.num_jour_entree_canevas
              ) pivot 	( MAX(nombre_heure) FOR num_jour_dans_cycle IN ( 	''1'' AS "NOMBRE_HEURE_1", ''2'' AS "NOMBRE_HEURE_2", ''3'' AS "NOMBRE_HEURE_3",
                                            ''4'' AS "NOMBRE_HEURE_4", ''5'' AS "NOMBRE_HEURE_5", ''6'' AS "NOMBRE_HEURE_6", ''7'' AS "NOMBRE_HEURE_7",
                                            ''8'' AS "NOMBRE_HEURE_8", ''9'' AS "NOMBRE_HEURE_9", ''10'' AS "NOMBRE_HEURE_10", ''11'' AS "NOMBRE_HEURE_11",
                                            ''12'' AS "NOMBRE_HEURE_12", ''13'' AS "NOMBRE_HEURE_13", ''14'' AS "NOMBRE_HEURE_14", ''15'' AS "NOMBRE_HEURE_15",
                                            ''16'' AS "NOMBRE_HEURE_16", ''17'' AS "NOMBRE_HEURE_17", ''18'' AS "NOMBRE_HEURE_18", ''19'' AS "NOMBRE_HEURE_19",
                                            ''20'' AS "NOMBRE_HEURE_20", ''21'' AS "NOMBRE_HEURE_21")
                    ) ORDER BY numpac, code_classe_horaire_ott, date_debut';
        
        
sql_2:='select numpac, code_hor_pres, date_debut, date_fin, hrs_lundi, hrs_mardi, hrs_mercredi, hrs_jeudi, hrs_vendredi, hrs_samedi, hrs_dimanche 
		  	 FROM   tge_ref_hpr 
		  	 WHERE  numpac               		IN ('''|| p_numpac ||''')
          ORDER BY numpac, code_hor_pres, date_debut';


/* A819,A820,A996 valeur alimenter manuellement dans Java*/
sql_3:='select M.NUMPAC,M.ELEMENT,M.OCCURENCE,M.DONNEEGXP,M.TABLEGXP,M.DONNFILTRE,M.OPERFILTRE,M.VALFILTRE,M.TRTPARTICULIER,M.ENVOI_SYSTEMATIQUE,M.FORCABLE_ECRAN_GENERE 
          from TGE_REF_MAPDO M  
          where ( ELEMENT IN (''A819'',''A820'',''A996'') ) 
          and  (((SELECT COUNT(1) FROM TGE_REF_MAPDO WHERE NUMPAC= '''||p_numpac||''' AND  ELEMENT = M.ELEMENT ) > 0 AND  M.NUMPAC='''||p_numpac||''')
              OR ((SELECT COUNT(1) FROM TGE_REF_MAPDO WHERE NUMPAC='''||p_numpac||''' AND ELEMENT = M.ELEMENT) = 0 AND M.NUMPAC=''*'' ))';

/* les colonne FIN_PER_GENERATION_HP et DEBUT_PER_GENERATION_HP sont null pour les alimenter manuellement lors d'itération*/
sql_4:='select PAIEZAD,MATRIC,NUMPAC,PACMAT,NUMCNT,DATE_EFF,DATE_FIN,ZA819,ZA820,ZA996,
              null as DEBUT_PER_GENERATION_HP, 
              null as FIN_PER_GENERATION_HP
            from DIC_ADM_CONTRAT_HISTO where 
                NUMPAC = '''|| p_numpac || ''''
             || ' AND PACMAT ='''|| p_pacmat || ''''
             || ' AND numcnt ='''|| p_numcnt||'''' 
             || ' AND paiezad ='''|| p_paiezad||''''             
             || ' AND date_eff =   TO_DATE('''||p_date_eff ||''',''DD/MM/YYYY'')
               
                ORDER BY matric asc, date_eff asc' ;

FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement des cycles)','' );

/*****************************************************************************/
/******************** loadCyclesGroupByPacAndClasseHorOtt ********************/
/*****************************************************************************/
cpt:=1; lst_1:=type_List_arr();
  OPEN cur_1 FOR sql_1;
  LOOP
     FETCH cur_1 INTO cur_TgeRefDcy; EXIT WHEN cur_1%NOTFOUND;
      lst_1.extend;
      lst_1(cpt) :=cur_TgeRefDcy;
      cpt:=cpt+1;
  END LOOP;

FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement des horaires)','' );

/*****************************************************************/
/******************** loadCyclesHprGroupByPac ********************/
/*****************************************************************/
cpt:=1; lst_2:=type_List_arr_2();
  OPEN cur_2 FOR sql_2;
  LOOP
     FETCH cur_2 INTO cur_TgeRefhpr; EXIT WHEN cur_2%NOTFOUND;
    lst_2.extend;
    lst_2(cpt) :=cur_TgeRefhpr;
    cpt:=cpt+1;
  END LOOP;


/*****************************************************************/
/******************** getPopulationHistoContrat ********************/
/******************** chargerInfoElementMapDo ********************/
/*****************************************************************/
cpt:=1; lst_3:=type_List_arr_3();
  OPEN cur_3 FOR sql_3;
  LOOP
     FETCH cur_3 INTO cur_TgeRefmapdo; EXIT WHEN cur_3%NOTFOUND;
    lst_3.extend;
    lst_3(cpt) :=cur_TgeRefmapdo;
    cpt:=cpt+1;
  END LOOP;
FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Chargement info contractuelle)','Chargement de toute la situation y compris horaire de présence, horaire de rémunération et type GTA ' );
/******************** chargerHistoContrat ********************/

cpt:=1; lst_4:=type_List_arr_4();
  OPEN cur_4 FOR sql_4;
  LOOP
     FETCH cur_4 INTO cur_dachtype; 
     EXIT WHEN cur_4%NOTFOUND;
    lst_4.extend;
    lst_4(cpt) :=cur_dachtype;
    lst_4(cpt).FIN_PER_GENERATION_HP := p_date_fin; 
    lst_4(cpt).DEBUT_PER_GENERATION_HP := p_date_deb; 
    cpt:=cpt+1;
  END LOOP;
  

 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Suppression  HP )','Suppression des anciens HP entre  '||p_date_deb ||' et '||p_date_fin );
  IF lst_4.COUNT >0 THEN
    delete from TGE_INCIDENTS_PAIE 
                  WHERE 
                  NUMPAC = p_numpac
                  AND PAIEZAD = p_PAIEZAD
                  AND TYPE_IP = 'T'
                  AND CODE_IP = 'HP'
                  AND DATE_EFFET  between p_date_deb AND p_date_fin;  -- sortie du boucle pour executer une seul fois
  END IF;
  
  lst_Situation:=SituationType_arr_2();
  arrCycleSituation:=type_List_arr();
  arrCycleSituation.extend;
    
    
  FOR k IN 1..lst_4.COUNT LOOP --K LOOP DACH
          lst_Situation.extend;
          
          /****** ajusterPeriodeSituation ******/
          IF (k=1 AND lst_4(k).DATE_EFF IS NOT NULL AND lst_4(k).DATE_EFF <p_date_deb) THEN 
              lst_4(k).DATE_EFF:=p_date_deb; --lst_4(cpt).DEBUT_PER_GENERATION_HP;
          END IF;  
   
          /***** build Situation *****/
          lst_Situation(k).numpac:=lst_4(k).NUMPAC;
          lst_Situation(k).Pacmat:=lst_4(k).Pacmat;
          lst_Situation(k).PaieZad:=lst_4(k).PaieZad;
          lst_Situation(k).DateDeb:=lst_4(k).DATE_EFF;
          lst_Situation(k).DateFin:=lst_4(k).FIN_PER_GENERATION_HP;
          
          --GET Donner specifier selon parametrage MAPDO
          --LOOP MAPDO
          FOR J IN 1..lst_3.COUNT LOOP --J LOOP
          
            --A996 / TYPE_GTA
            IF(lst_3(J).ELEMENT='A996' AND lst_3(J).NUMPAC=lst_4(k).NUMPAC) THEN
              lst_Situation(k).isGtaT1:=CASE WHEN getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k))='Z' THEN TRUE ELSE FALSE END;
            END IF; 
        
            -- Horaire Remu Presence
            --ZA819 / HORAIRE_REMUNERATION
            IF(lst_3(J).ELEMENT='A819') THEN
                    HoraireRemu := getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k));
                    
                    
            END IF;
            --ZA820 / HORAIRE_PRESENCE
            IF(lst_3(J).ELEMENT='A820') THEN
                    HorairePres := getValOfDACH(lst_3(J).DONNEEGXP,lst_4(k));
                    
		           
            END IF;
             --horairePres/horaireRemu =>Code_classe_horaire_ott
            IF(lst_3.count=J) THEN 
              IF(horairePres IS NOT NULL) THEN
                lst_Situation(k).Code_classe_horaire_ott:=TO_NUMBER(horairePres);
              ELSE
              IF(horaireRemu IS NOT NULL) THEN
                lst_Situation(k).Code_classe_horaire_ott:=TO_NUMBER(horaireRemu);
              END IF;
              END IF;
            END IF;          
            
          END LOOP; --FIN J MAPDO LOOP 
          
    cpt:=1;     
    
     FOR M IN 1..lst_1.COUNT LOOP
       IF( lst_1(M).CODE_CLASSE_HORAIRE_OTT=lst_Situation(k).Code_classe_horaire_ott)THEN
          arrCycleSituation(cpt):=lst_1(M);
          cpt:=cpt+1;
       END IF;     
     END LOOP;
     
      cpt:=1; 
     arrCycleHprSituation:=type_List_arr_2();
     arrCycleHprSituation.extend;
     FOR M IN 1..lst_2.COUNT LOOP
       IF( lst_2(M).Code_hor_pres=lst_Situation(k).Code_classe_horaire_ott)THEN
          arrCycleHprSituation(cpt):=lst_2(M);
          cpt:=cpt+1;
       END IF;     
     END LOOP;



     END LOOP; --END K LOOP DACH
     
     
  --decomposerArrCycle_DCY_SituationEnTrancheAndCreateHP
  FOR k IN 1..lst_Situation.COUNT LOOP   
     
     IF(arrCycleSituation.COUNT>0) THEN
     FOR W IN 1..arrCycleSituation.COUNT LOOP
     /* La date de début du premier cycle d'une situation doit être égale à la date de début de la situation La date de
         fin du dernier cycle d'une situation doit être égale à la  date de fin de la situation*/
        IF(lst_Situation(k).datedeb <= arrCycleSituation(W).Date_fin AND lst_Situation(k).datefin >= arrCycleSituation(W).Date_debut) THEN
          dateDebTranchSitu:=null; dateFinTranchSitu:=null;
          
          --La date d'effet du cycle est antérieure à la date de début de la situation, On se met sur la date début de la situation
          IF(arrCycleSituation(W).Date_debut <= lst_Situation(k).datedeb) THEN
            dateDebTranchSitu:=lst_Situation(k).datedeb;
           ELSE
            dateDebTranchSitu:=arrCycleSituation(W).Date_debut;
          END IF;
          
          --La date de fin d'effet du cycle est postérieur à la date de fin de la situation, On se met sur la date de fin de la situation
          IF(arrCycleSituation(W).Date_fin >= lst_Situation(k).datefin) THEN
            dateFinTranchSitu:=lst_Situation(k).datefin;
           ELSE
            dateFinTranchSitu:=arrCycleSituation(W).Date_fin;
          END IF;
          
          dateEnCours:=dateDebTranchSitu;
		  FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Début insertion HP)',' ' );
		  
		  --LOOP INSERT TGE_INCIDENTS_PAIE
          WHILE (dateEnCours <= dateFinTranchSitu) LOOP
             numJourCanevas:=calculateNumJourCanevas( arrCycleSituation(W), dateEnCours );
             nbreHeures:=getValOfCycle('NOMBRE_HEURE_'||numJourCanevas,arrCycleSituation(W));
             arrHoraireParJour(TO_CHAR(dateEnCours,'dd/mm/yyyy')):=nbreHeures;
             -- Insertion des HP
             insertIncidentPaieHorsAbs( nbreHeures ,dateEnCours, lst_Situation(k),p_login );
             dateEnCours:=dateEnCours+1;
          END LOOP; --LOOP WHILE   
          
          FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (Fin insertion HP)',' ' );
          
        END IF; --FIN decomposerArrCycleDcySituationEnTrancheAndCreateHP
         
  /*******************************************************/
  
    --decomposerArrCycle_Hpr_SituationEnTrancheAndCreateHP
 
   IF(arrCycleSituation.count=0) THEN
    FOR W IN 1..arrCycleHprSituation.COUNT LOOP  
      /* La date de début du premier cycle d'une situation doit être égale à la date de début de la situation La date de
         fin du dernier cycle d'une situation doit être égale à la  date de fin de la situation*/
        IF(lst_Situation(k).datedeb <= arrCycleHprSituation(W).Date_fin AND lst_Situation(k).datefin >= arrCycleHprSituation(W).Date_debut) THEN
          dateDebTranchSitu:=null; dateFinTranchSitu:=null;
          
          --La date d'effet du cycle est antérieure à la date de début de la situation, On se met sur la date début de la situation
          IF(arrCycleHprSituation(W).Date_debut <= lst_Situation(k).datedeb) THEN
            dateDebTranchSitu:=lst_Situation(k).datedeb;
           ELSE
            dateDebTranchSitu:=arrCycleHprSituation(W).Date_debut;
          END IF;
          
          --La date de fin d'effet du cycle est postérieur à la date de fin de la situation, On se met sur la date de fin de la situation
          IF(arrCycleHprSituation(W).Date_fin >= lst_Situation(k).datefin) THEN
            dateFinTranchSitu:=lst_Situation(k).datefin;
           ELSE
            dateFinTranchSitu:=arrCycleHprSituation(W).Date_fin;
          END IF;
          
          dateEnCours:=dateDebTranchSitu;
          
          --LOOP INSERT TGE_INCIDENTS_PAIE 
          WHILE (dateEnCours <= dateFinTranchSitu) LOOP
             jourSemaine:=calculateNomJourCanevas( arrCycleHprSituation(W), dateEnCours );
             nbreHeures:=getHprHoursNbre(numJourCanevas,arrCycleHprSituation(W));
             arrHoraireParJour(TO_CHAR(dateEnCours,'dd/mm/yyyy')):=nbreHeures;
             -- Insertion des HP
             insertIncidentPaieHorsAbs( nbreHeures ,dateEnCours, lst_Situation(k), p_login );
             dateEnCours:=dateEnCours+1;
          END LOOP; --LOOP WHILE TGE_INCIDENTS_PAIE
 
        END IF; -- END IF INTO THE LOOP
    END LOOP; --FIN decomposerArrCycleHprSituationEnTrancheAndCreateHP
  END IF; --END IF arrCycleSituation vide
  END LOOP; --END LOOP parcour situation
  END IF;
  END LOOP;  --END LOOP Situation génerer
    

 FSED.FSED_AVANCEMENT_PLSQL(147,'CALC_HP (End)','Fin de recalcul des HP pour la situation ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||',date_eff : '||p_date_eff||')');
 
	EXCEPTION
 	WHEN others THEN
  	err_code := SQLCODE;
 	err_msg  := SQLERRM;
 	FSED.FSED_ERREUR( 147 , 'Calc_HP (Erreur) ' , 'Erreur est survenue lors du recalcul des HP pour la situation  ( numpac:  '||p_numpac ||', pacmat: '|| p_pacmat ||', numcnt: '||p_numcnt|| ', paiezad: '|| p_paiezad ||',date_eff : '||p_date_eff||') ' , err_code||'-'||err_msg );


 END;

END CALC_HP;

##
TAG_IMPORT=5.05.004.R047
##
TAG_CHARSET=@€éèç
##
HRORG_GET_NUMPAC
=SQL=
CREATE OR REPLACE FUNCTION HRORG_GET_NUMPAC (
  p_codts        IN NUMBER,
  p_code_entite  IN VARCHAR2,
  p_date_eff     IN VARCHAR2,
  type_ent_ste IN VARCHAR2,
  type_ent_etb IN VARCHAR2)
  RETURN VARCHAR2
IS
  numpac    VARCHAR2(700);
  numpacSte VARCHAR2(700);
  numpacEtb VARCHAR2(700);
BEGIN
  numpacSte := NULL;
  numpacEtb := NULL;
  for E in (with ENTITES (CODE_ENTITE, CODE_ENT_MERE, LIBELLE, TYPE_ENTITE, NUMPAC) as (
    select e.CODE_ENTITE, a.CODE_ENT_MERE, e.LIBELLE, e.TYPE_ENTITE, e.NUMPAC from STD_STRUC_ENTITE e, STD_STRUC_ARBRE a where e.CODE_ENTITE = p_code_entite and p_date_eff between e.DATE_EFF and e.DATE_FIN and e.CODE_ENTITE=a.CODE_ENTITE and a.CODTS = p_codts and p_date_eff between a.DATE_EFF and a.DATE_FIN and a.STATUT=1 
    union all 
    select e.CODE_ENTITE, a.CODE_ENT_MERE, e.LIBELLE, e.TYPE_ENTITE, e.NUMPAC from STD_STRUC_ENTITE e, STD_STRUC_ARBRE a, ENTITES z where e.CODE_ENTITE=z.CODE_ENT_MERE and p_date_eff between e.DATE_EFF and e.DATE_FIN and e.CODE_ENTITE=a.CODE_ENTITE and a.CODTS = p_codts and p_date_eff between a.DATE_EFF and a.DATE_FIN
  ) select CODE_ENTITE,LIBELLE,TYPE_ENTITE,NUMPAC from ENTITES)
  LOOP
    IF E.TYPE_ENTITE=type_ent_ste THEN
      numpacSte := E.NUMPAC;
    ELSIF E.TYPE_ENTITE=type_ent_etb THEN
      numpacEtb := E.NUMPAC;
    END IF;
  END LOOP;
  IF numpacEtb IS NOT NULL THEN
    numpac := numpacEtb;
  ELSIF numpacSte IS NOT NULL THEN
    numpac := numpacSte;
  ELSE
  	numpac := NULL;
  END IF;
  RETURN numpac;
END HRORG_GET_NUMPAC;
##
ADM_NEWPAGE_SYS_SCHEMAS
=SQL=
CREATE OR REPLACE PROCEDURE adm_newpage_sys_schemas (
    p_nom_page           IN   VARCHAR2,
    p_nom_page_exemple   IN   VARCHAR2
) IS

    p_code_schema            NUMBER := -1;
    p_niveau                 NUMBER;
    p_niveau_exemple         NUMBER;
    p_code_element           NUMBER;
    p_code_element_exemple   NUMBER;
    p_code_asso_pere         NUMBER;
    p_code_asso              NUMBER;
    p_count_exemple          NUMBER;
    p_count                  NUMBER;
    p_ordre                  NUMBER;
    count_code_elt           NUMBER := 0;
    count_code_elt_exemple   NUMBER := 0;
    
BEGIN
     --Vérification existance page exemple dans sys_sch_element
    SELECT
        count(*)
    INTO p_count_exemple
    FROM
        sys_sch_element
    WHERE
        nom_page = p_nom_page_exemple;
    
    IF p_count_exemple = 0 THEN
       RETURN ;
    END IF ;
    
    --Vérification existance page à insérer dans sys_sch_element
    SELECT
        count(*)
    INTO p_count
    FROM
        sys_sch_element
    WHERE
        nom_page = p_nom_page;
    
    IF p_count = 0 THEN
        raise_application_error(-20001, 'la page '||p_nom_page||' n''existe pas dans la table SYS_SCH_ELEMENT ');
    END IF;   

    
    --Vérification du niveau de la page exemple
    SELECT
        min(niveau)
    INTO p_niveau_exemple
    FROM
        sys_sch_element
    WHERE
        nom_page = p_nom_page_exemple;
    
    IF p_niveau_exemple <> 99 THEN
        raise_application_error(-20001, 'Le code niveau '||p_nom_page_exemple||' ne correspond pas à 99');
    END IF;
    
    --Vérification  du niveau de la page
    SELECT
        min(niveau)
    INTO p_niveau
    FROM
        sys_sch_element
    WHERE
        nom_page = p_nom_page;

    IF p_niveau <> 99 THEN
        raise_application_error(-20001, 'Le code niveau '||p_nom_page||' ne correspond pas à 99');
    END IF;
    
    --Récupération du code element de la page à insérer
    SELECT
        MIN(code_element)
    INTO p_code_element
    FROM
        sys_sch_element
    WHERE
        nom_page = p_nom_page;
    
    --Récupération du code element de la page exemple
    SELECT
        MIN(code_element)
    INTO p_code_element_exemple
    FROM
        sys_sch_element
    WHERE
        nom_page = p_nom_page_exemple
        AND niveau = 99;

    --Vérification de la présence de la page dans le schéma
    SELECT
        COUNT(*)
    INTO count_code_elt
    FROM
        sys_schemas
    WHERE
        niveau = 99
    AND code_elt = p_code_element;
    
    --Vérification de la présence de la page exemple dans le schéma
    SELECT
        COUNT(*)
    INTO count_code_elt_exemple
    FROM
        sys_schemas
    WHERE
        niveau = 99
    AND code_elt = p_code_element_exemple;
    
    -- Si la page existe déjà dans le schéma ou si  la page exemple n'existe pas : ne rien insérer
    IF(count_code_elt_exemple > 0 AND count_code_elt = 0  ) THEN
    --Récupération du code asso pere de la page exemple
    SELECT
        code_asso_pere
    INTO p_code_asso_pere
    FROM
        sys_schemas
    WHERE
        code_elt = p_code_element_exemple
    AND niveau = 99;
    
    --Calcul de l'ordre de la page dans le classeur
        SELECT
            MAX(ordre) + 1
        INTO p_ordre
        FROM
            sys_schemas
        WHERE
            code_asso_pere = p_code_asso_pere;

    --Calcul d'un nouveau code asso 
        SELECT
            MAX(code_asso) + 1
        INTO p_code_asso
        FROM
            sys_schemas;
    --Insertion de la page dans le schéma
        INSERT INTO sys_schemas (
            code_schema,
            code_asso,
            code_asso_pere,
            code_elt,
            niveau,
            ordre
        ) VALUES (
            p_code_schema,
            p_code_asso,
            p_code_asso_pere,
            p_code_element,
            p_niveau,
            p_ordre
        );
     END IF ;   
END adm_newpage_sys_schemas;
##
TAG_CHARSET=@€éèç
##
ALIM_PAIEMENT_TIERS
=SQL=
CREATE OR REPLACE PROCEDURE ALIM_PAIEMENT_TIERS (p_NumpacCible VARCHAR2) AS
 v_requete CLOB;
 v_periode VARCHAR2(6);
 v_statut VARCHAR2(1);
 v_requete_maj_statut CLOB;
 v_tableExiste NUMBER;
 v_MPE VARCHAR2(1);
 
 BEGIN
 -- Initialisation de la période et du statut de la campagne à I
 --select PERIODEENCOURS into v_periode FROM TGE_REF_PAC where NUMPAC = p_NumpacCible;
 select TO_CHAR(max(PERIODEPAIE),'YYYYMM') into v_periode from DIC_TGE_RESPAIE_RUBRIQUE where NUMPAC= p_NumpacCible;
 v_statut := 'I';
 v_requete_maj_statut := 'Update TIERS_PILOTAGE set STATUT = :1 where NUMPAC = '''||p_NumpacCible||''' AND PERIODE = TO_DATE ('||v_periode||',''YYYYMM'')';
 
 
 -- Insertion dans la table de pilotage de la campagne en cours
 DELETE TIERS_PILOTAGE WHERE NUMPAC = p_NumpacCible AND PERIODE = TO_DATE (v_periode,'YYYYMM');
 INSERT INTO TIERS_PILOTAGE (NUMPAC,PERIODE,STATUT,SAISIE_BLOQUE_OPP,SAISIE_BLOQUE_PEN) VALUES (p_NumpacCible, TO_DATE (v_periode,'YYYYMM'),v_statut,'O','O');
 COMMIT;
 
 -- Suppression des lignes pour le numpac cible à la période en cours
 DELETE from DIC_PAIEMENT_TIERS where TIERS_NUMPAC = p_NumpacCible AND TIERS_MOIS_PAIE = TO_DATE (v_periode,'YYYYMM');
 
 
 -- Insertion des Oppositions en mode de paiement Virement pour le numpac cible à la période en cours
 BEGIN
 Insert into DIC_PAIEMENT_TIERS (
 TIERS_MOIS_PAIE,
 TIERS_TYPE,
 TIERS_NUMPAC,
 TIERS_MATRIC,
 TIERS_PACMAT,
 TIERS_PAIEZAD,
 TIERS_NOM,
 TIERS_PRENOM,
 TIERS_CODSTE,
 TIERS_CODETB,
 TIERS_CODE_BQE,
 TIERS_NUMERO,
 TIERS_NUM_DOS,
 TIERS_CODRUB,
 TIERS_LIBELLE,
 TIERS_MONTANT,
 TIERS_ACTIF,
 TIERS_BENEFICIAIRE,
 TIERS_DOM_BQE,
 TIERS_IBAN,
 TIERS_BIC,
 TIERS_POP_GFF)
 
 (select
 to_date(v_periode,'YYYYMM'),
 'O',
 TGE_REF_PAC.NUMPAC,
 DIC_TGE_OPPOSITIONS.MATRIC,
 DIC_TGE_OPPOSITIONS.PACMAT,
 DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD,
 SECUPACMAT.NOM,
 SECUPACMAT.PRENOM,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSSJ,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSCE,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSBE,
 DIC_TGE_OPPOSITIONS.NUM_OPPOSITION,
 DIC_TGE_OPPOSITIONS.NUM_DOSS_OPPOSITION,
 DIC_TGE_RESPAIE_RUBRIQUE.CODERUB,
 DIC_TGE_OPPOSITIONS.LIB_COMP_OPPOSITION,
 ABS(DIC_TGE_RESPAIE_RUBRIQUE.MONTANT),
 'O',
 DIC_TGE_OPPOSITIONS.NOM_BENEFICIAIRE,
 DIC_TGE_OPPOSITIONS.DOMICILIATION_BANQUE,
 DIC_TGE_OPPOSITIONS.CODE_PAYS_IBAN||CLE_IBAN||CODE_IBAN2||CODE_IBAN3||CODE_IBAN4||CODE_IBAN5||CODE_IBAN6||CODE_IBAN7||CODE_IBAN8||CODE_IBAN9,
 DIC_TGE_OPPOSITIONS.BIC_OPPOSITION,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSPOP
 FROM TGE_REF_PAC
 join TIERS_RUB_TRANSCO on TGE_REF_PAC.NUMPAC = TIERS_RUB_TRANSCO.NUMPAC
 join (select rub.numpac,max(rub.paiezad) as paiezad,rub.pacmat,rub.periodepaie,rub.coderub,sum(rub.montant) as montant from DIC_TGE_RESPAIE_RUBRIQUE rub where rub.montant<0 group by (rub.numpac,rub.pacmat,rub.periodepaie,rub.coderub)) DIC_TGE_RESPAIE_RUBRIQUE on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=TGE_REF_PAC.NUMPAC AND TO_CHAR(DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE,'YYYYMM')=v_periode AND DIC_TGE_RESPAIE_RUBRIQUE.CODERUB = TIERS_RUB_TRANSCO.CODRUB
 join DIC_TGE_OPPOSITIONS on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=DIC_TGE_OPPOSITIONS.NUMPAC AND DIC_TGE_RESPAIE_RUBRIQUE.PACMAT=DIC_TGE_OPPOSITIONS.PACMAT AND TO_NUMBER(DIC_TGE_OPPOSITIONS.NUM_OPPOSITION) = TO_NUMBER(TIERS_RUB_TRANSCO.NUMERO)
 join SECUPACMAT on SECUPACMAT.NUMPAC=TGE_REF_PAC.NUMPAC AND SECUPACMAT.PACMAT=DIC_TGE_OPPOSITIONS.PACMAT
 join DIC_TGE_RESPAIE_HISTO on DIC_TGE_RESPAIE_HISTO.NUMPAC = DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC AND DIC_TGE_RESPAIE_HISTO.PAIEZAD=DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD AND DIC_TGE_RESPAIE_HISTO.DTDEB_HISTO=DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE 
 WHERE
 MODE_OPPOSITION = 'V' AND DIC_TGE_RESPAIE_RUBRIQUE.MONTANT<0 AND TIERS_RUB_TRANSCO.TYPE = 'O' AND TGE_REF_PAC.NUMPAC = p_NumpacCible);
 
 --si plantage on met le statut de la campagne à jours en E (Erreur) et on arrete le traitement
 EXCEPTION
 WHEN OTHERS
 THEN
 v_statut := 'E';
 EXECUTE IMMEDIATE v_requete_maj_statut USING v_statut;
 COMMIT;
 RAISE;
 END;
 
 -- Insertion des Pensions 1 en mode de paiement Virement pour le numpac cible à la période en cours
 BEGIN
 Insert into DIC_PAIEMENT_TIERS (
 TIERS_MOIS_PAIE,
 TIERS_TYPE,
 TIERS_NUMPAC,
 TIERS_MATRIC,
 TIERS_PACMAT,
 TIERS_PAIEZAD,
 TIERS_NOM,
 TIERS_PRENOM,
 TIERS_CODSTE,
 TIERS_CODETB,
 TIERS_CODE_BQE,
 TIERS_NUMERO,
 TIERS_CODRUB,
 TIERS_MONTANT,
 TIERS_ACTIF,
 TIERS_BENEFICIAIRE,
 TIERS_DOM_BQE,
 TIERS_IBAN,
 TIERS_BIC,
 TIERS_POP_GFF)
 
 (select
 to_date(v_periode,'YYYYMM'),
 'P',
 TGE_REF_PAC.NUMPAC,
 DIC_PENSION.MATRIC,
 DIC_PENSION.PACMAT,
 DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD,
 SECUPACMAT.NOM,
 SECUPACMAT.PRENOM,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSSJ,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSCE,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSBE,
 TIERS_RUB_TRANSCO.NUMERO,
 DIC_TGE_RESPAIE_RUBRIQUE.CODERUB,
 ABS(DIC_TGE_RESPAIE_RUBRIQUE.MONTANT),
 'O',
 NVL(DIC_PENSION.NOM1_PEN || ' ' || DIC_PENSION.PRENOM1_PEN,DIC_PENSION.ORGA_1) ,
 DIC_PENSION.LIBQE_PEN,
 DIC_PENSION.IBAPA_PEN||IBACC_PEN||IBA21_PEN||IBA31_PEN||IBA41_PEN||IBA51_PEN||IBA61_PEN||IBA71_PEN||IBA81_PEN||IBA91_PEN,
 DIC_PENSION.BIC1_PEN,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSPOP
 FROM TGE_REF_PAC
 join TIERS_RUB_TRANSCO on TGE_REF_PAC.NUMPAC = TIERS_RUB_TRANSCO.NUMPAC
 join (select rub.numpac,max(rub.paiezad) as paiezad,rub.pacmat,rub.periodepaie,rub.coderub,sum(rub.montant) as montant from DIC_TGE_RESPAIE_RUBRIQUE rub where rub.montant<0 group by (rub.numpac,rub.pacmat,rub.periodepaie,rub.coderub))DIC_TGE_RESPAIE_RUBRIQUE on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=TGE_REF_PAC.NUMPAC AND TO_CHAR(DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE,'YYYYMM')=v_periode
 AND DIC_TGE_RESPAIE_RUBRIQUE.CODERUB = TIERS_RUB_TRANSCO.CODRUB
 join DIC_PENSION on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=DIC_PENSION.NUMPAC AND DIC_TGE_RESPAIE_RUBRIQUE.PACMAT=DIC_PENSION.PACMAT
 join SECUPACMAT on SECUPACMAT.NUMPAC=TGE_REF_PAC.NUMPAC AND SECUPACMAT.PACMAT=DIC_PENSION.PACMAT
 join DIC_TGE_RESPAIE_HISTO on DIC_TGE_RESPAIE_HISTO.NUMPAC = DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC AND DIC_TGE_RESPAIE_HISTO.PAIEZAD=DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD AND DIC_TGE_RESPAIE_HISTO.DTDEB_HISTO=DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE
 where
 TO_NUMBER(TIERS_RUB_TRANSCO.NUMERO)=1 AND TIERS_RUB_TRANSCO.TYPE='P' AND DIC_TGE_RESPAIE_RUBRIQUE.MONTANT<0 AND DIC_PENSION.MODPAI1_PEN='V' AND TGE_REF_PAC.NUMPAC = p_NumpacCible);
 
 --si plantage on met le statut de la campagne à jours en E (Erreur) et on arrete le traitement
 EXCEPTION
 WHEN OTHERS
 THEN
 v_statut := 'E';
 EXECUTE IMMEDIATE v_requete_maj_statut USING v_statut;
 COMMIT;
 RAISE;
 END;
 
 -- Insertion des Pensions 2 en mode de paiement Virement pour le numpac cible à la période en cours
 BEGIN
 Insert into DIC_PAIEMENT_TIERS (
 TIERS_MOIS_PAIE,
 TIERS_TYPE,
 TIERS_NUMPAC,
 TIERS_MATRIC,
 TIERS_PACMAT,
 TIERS_PAIEZAD,
 TIERS_NOM,
 TIERS_PRENOM,
 TIERS_CODSTE,
 TIERS_CODETB,
 TIERS_CODE_BQE,
 TIERS_NUMERO,
 TIERS_CODRUB,
 TIERS_MONTANT,
 TIERS_ACTIF,
 TIERS_BENEFICIAIRE,
 TIERS_DOM_BQE,
 TIERS_IBAN,
 TIERS_BIC,
 TIERS_POP_GFF)
 
 (select
 to_date(v_periode,'YYYYMM'),
 'P',
 TGE_REF_PAC.NUMPAC,
 DIC_PENSION.MATRIC,
 DIC_PENSION.PACMAT,
 DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD,
 SECUPACMAT.NOM,
 SECUPACMAT.PRENOM,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSSJ,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSCE,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSBE,
 TIERS_RUB_TRANSCO.NUMERO,
 DIC_TGE_RESPAIE_RUBRIQUE.CODERUB,
 ABS(DIC_TGE_RESPAIE_RUBRIQUE.MONTANT),
 'O',
 NVL(DIC_PENSION.NOM2_PEN || ' ' || DIC_PENSION.PRENOM2_PEN,DIC_PENSION.ORGA_2) ,
 DIC_PENSION.LIBQE2_PEN,
 DIC_PENSION.IBAPA2_PEN||IBACC2_PEN||IBA22_PEN||IBA32_PEN||IBA42_PEN||IBA52_PEN||IBA62_PEN||IBA72_PEN||IBA82_PEN||IBA92_PEN,
 DIC_PENSION.BIC2_PEN,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSPOP
 FROM TGE_REF_PAC
 join TIERS_RUB_TRANSCO on TGE_REF_PAC.NUMPAC = TIERS_RUB_TRANSCO.NUMPAC
 join (select rub.numpac,max(rub.paiezad) as paiezad ,rub.pacmat,rub.periodepaie,rub.coderub,sum(rub.montant) as montant from DIC_TGE_RESPAIE_RUBRIQUE rub 
    where rub.montant<0 group by (rub.numpac,rub.pacmat,rub.periodepaie,rub.coderub))DIC_TGE_RESPAIE_RUBRIQUE on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=TGE_REF_PAC.NUMPAC AND TO_CHAR(DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE,'YYYYMM')=v_periode
 AND DIC_TGE_RESPAIE_RUBRIQUE.CODERUB = TIERS_RUB_TRANSCO.CODRUB
 join DIC_PENSION on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=DIC_PENSION.NUMPAC AND DIC_TGE_RESPAIE_RUBRIQUE.PACMAT=DIC_PENSION.PACMAT
 join SECUPACMAT on SECUPACMAT.NUMPAC=TGE_REF_PAC.NUMPAC AND SECUPACMAT.PACMAT=DIC_PENSION.PACMAT 
 join DIC_TGE_RESPAIE_HISTO on DIC_TGE_RESPAIE_HISTO.NUMPAC = DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC AND DIC_TGE_RESPAIE_HISTO.PAIEZAD=DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD AND DIC_TGE_RESPAIE_HISTO.DTDEB_HISTO=DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE 
 where
 TO_NUMBER(TIERS_RUB_TRANSCO.NUMERO)=2 AND TIERS_RUB_TRANSCO.TYPE='P' AND DIC_TGE_RESPAIE_RUBRIQUE.MONTANT<0 AND DIC_PENSION.MODPAI1_PEN='V' AND TGE_REF_PAC.NUMPAC = p_NumpacCible);
 
 --si plantage on met le statut de la campagne à jours en E (Erreur) et on arrete le traitement
 EXCEPTION
 WHEN OTHERS
 THEN
 v_statut := 'E';
 EXECUTE IMMEDIATE v_requete_maj_statut USING v_statut;
 COMMIT;
 RAISE;
 END;
 
 -- Insertion des Pensions 3 en mode de paiement Virement pour le numpac cible à la période en cours
 BEGIN
 Insert into DIC_PAIEMENT_TIERS (
 TIERS_MOIS_PAIE,
 TIERS_TYPE,
 TIERS_NUMPAC,
 TIERS_MATRIC,
 TIERS_PACMAT,
 TIERS_PAIEZAD,
 TIERS_NOM,
 TIERS_PRENOM,
 TIERS_CODSTE,
 TIERS_CODETB,
 TIERS_CODE_BQE,
 TIERS_NUMERO,
 TIERS_CODRUB,
 TIERS_MONTANT,
 TIERS_ACTIF,
 TIERS_BENEFICIAIRE,
 TIERS_DOM_BQE,
 TIERS_IBAN,
 TIERS_BIC,
 TIERS_POP_GFF)
 
 (select
 to_date(v_periode,'YYYYMM'),
 'P',
 TGE_REF_PAC.NUMPAC,
 DIC_PENSION.MATRIC,
 DIC_PENSION.PACMAT,
 DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD,
 SECUPACMAT.NOM,
 SECUPACMAT.PRENOM,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSSJ,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSCE,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSBE,
 TIERS_RUB_TRANSCO.NUMERO,
 DIC_TGE_RESPAIE_RUBRIQUE.CODERUB,
 ABS(DIC_TGE_RESPAIE_RUBRIQUE.MONTANT),
 'O',
 NVL(DIC_PENSION.NOM3_PEN || ' ' || DIC_PENSION.PRENOM3_PEN,DIC_PENSION.ORGA_3) ,
 DIC_PENSION.LIBQE3_PEN,
 DIC_PENSION.IBAPA3_PEN||IBACC3_PEN||IBA23_PEN||IBA33_PEN||IBA43_PEN||IBA53_PEN||IBA63_PEN||IBA73_PEN||IBA83_PEN||IBA93_PEN,
 DIC_PENSION.BIC3_PEN,
 DIC_TGE_RESPAIE_HISTO.PREVTIERSPOP
 FROM TGE_REF_PAC
 join TIERS_RUB_TRANSCO on TGE_REF_PAC.NUMPAC = TIERS_RUB_TRANSCO.NUMPAC
 join (select rub.numpac,max(rub.paiezad) as paiezad,rub.pacmat,rub.periodepaie,rub.coderub,sum(rub.montant) as montant from DIC_TGE_RESPAIE_RUBRIQUE rub where rub.montant<0 group by (rub.numpac,rub.pacmat,rub.periodepaie,rub.coderub))DIC_TGE_RESPAIE_RUBRIQUE on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=TGE_REF_PAC.NUMPAC AND TO_CHAR(DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE,'YYYYMM')=v_periode
 AND DIC_TGE_RESPAIE_RUBRIQUE.CODERUB = TIERS_RUB_TRANSCO.CODRUB
 join DIC_PENSION on DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC=DIC_PENSION.NUMPAC AND DIC_TGE_RESPAIE_RUBRIQUE.PACMAT=DIC_PENSION.PACMAT
 join SECUPACMAT on SECUPACMAT.NUMPAC=TGE_REF_PAC.NUMPAC AND SECUPACMAT.PACMAT=DIC_PENSION.PACMAT
 join DIC_TGE_RESPAIE_HISTO on DIC_TGE_RESPAIE_HISTO.NUMPAC = DIC_TGE_RESPAIE_RUBRIQUE.NUMPAC AND DIC_TGE_RESPAIE_HISTO.PAIEZAD=DIC_TGE_RESPAIE_RUBRIQUE.PAIEZAD AND DIC_TGE_RESPAIE_HISTO.DTDEB_HISTO=DIC_TGE_RESPAIE_RUBRIQUE.PERIODEPAIE 
 where
 TO_NUMBER(TIERS_RUB_TRANSCO.NUMERO)=3 AND TIERS_RUB_TRANSCO.TYPE='P' AND DIC_TGE_RESPAIE_RUBRIQUE.MONTANT<0 AND DIC_PENSION.MODPAI1_PEN='V' AND TGE_REF_PAC.NUMPAC = p_NumpacCible);
 
 --si plantage on met le statut de la campagne à jours en E (Erreur) et on arrete le traitement
 EXCEPTION
 WHEN OTHERS
 THEN
 v_statut := 'E';
 EXECUTE IMMEDIATE v_requete_maj_statut USING v_statut;
 COMMIT;
 RAISE;
 END;
 
 -- Mise a jour du CODE CHRONO si on est en MPE et qu'on est dans une version où la table DIC_ADM_CONTRAT_SITU existe
 SELECT count(table_name) INTO v_tableExiste FROM USER_TABLES WHERE table_name = upper('DIC_ADM_CONTRAT_SITU');
 SELECT MPE INTO v_MPE FROM TGE_REF_PAC WHERE NUMPAC = p_NumpacCible;
 IF v_tableExiste > 0 and v_MPE='O' THEN
 BEGIN
 UPDATE DIC_PAIEMENT_TIERS set TIERS_CODE_CHRONO = (select CODE_CHRONO from DIC_ADM_CONTRAT_SITU WHERE DIC_PAIEMENT_TIERS.TIERS_PAIEZAD = DIC_ADM_CONTRAT_SITU.PAIEZAD AND DIC_PAIEMENT_TIERS.TIERS_NUMPAC = DIC_ADM_CONTRAT_SITU.NUMPAC)where TIERS_NUMPAC = p_NumpacCible AND TIERS_MOIS_PAIE = TO_DATE (v_periode,'YYYYMM');
 --si plantage on met le statut de la campagne à jours en E (Erreur) et on arrete le traitement
 EXCEPTION
 WHEN OTHERS
 THEN
 v_statut := 'E';
 EXECUTE IMMEDIATE v_requete_maj_statut USING v_statut;
 COMMIT;
 RAISE;
 END;
 END IF;
 
 -- Traitement terminé mise à jours du statut de la table de pilotage C pour campagne en cours et debloquage des saisies
 v_statut := 'C';
 EXECUTE IMMEDIATE v_requete_maj_statut USING v_statut;
 UPDATE TIERS_PILOTAGE SET SAISIE_BLOQUE_OPP='N',SAISIE_BLOQUE_PEN='N' where NUMPAC = p_NumpacCible AND PERIODE = TO_DATE (v_periode,'YYYYMM');
 
 COMMIT;
 
 END;
##
TAG_CHARSET=@€éèç
##
TGE_ALIM_PERIODE_INDIV_TEMP
=SQL=
create or replace PROCEDURE TGE_ALIM_PERIODE_INDIV_TEMP( p_id           IN NUMBER, p_numpac       IN VARCHAR2, p_pacmat       IN VARCHAR2,
 p_periode_paie IN VARCHAR2,
 out_req OUT CLOB,
 recueil_photo IN BOOLEAN DEFAULT TRUE)
 AS
 w_Y326                 VARCHAR2(4000 BYTE);
 w_Y327                 VARCHAR2(4000 BYTE);
 w_A302                 VARCHAR2(4000 BYTE);
 w_A301                 VARCHAR2(4000 BYTE);
 w_A520                 VARCHAR2(4000 BYTE);
 w_A521                 VARCHAR2(4000 BYTE);
 w_A523                 VARCHAR2(4000 BYTE);
 w_AB43                 VARCHAR2(4000 BYTE);
 w_AB44                 VARCHAR2(4000 BYTE);
 periode_paie_en_cours  VARCHAR2(6);
 periode_deb_retro      VARCHAR2(6);
 optionEcp      VARCHAR2(1);
 
 A01_NOM_ELT    VARCHAR2(20);
 A02_NOM_ELT    VARCHAR2(20);
 A03_NOM_ELT    VARCHAR2(20);
 requeteMappingPivot  VARCHAR2(3000);
 
 BEGIN
 TGE_IMPORT_AVANCEMENT_proc('TGE_ALIM_PER','TGE_ALIM_PERIODE_INDIV_TEMP début (' || p_id || ',' || p_numpac || ',' || p_pacmat || ',' || p_periode_paie || ')');
 BEGIN
 --Alimentation des informations sur le pac
 SELECT PERIODEENCOURS, DEB_RETRO, OPTION_ECP
 INTO periode_paie_en_cours, periode_deb_retro, optionEcp
 FROM TGE_REF_PAC
 WHERE NUMPAC = p_numpac;
 --- Calcul des noms d'elements depuis tge_map_arg_elt
 select A01_NOM_ELT, A02_NOM_ELT, A03_NOM_ELT
 into   A01_NOM_ELT, A02_NOM_ELT, A03_NOM_ELT
 from (
 SELECT NOM_ARG,NOM_ELT FROM TABLE(GET_TGE_MAP_ARG_ELT_BY_NUMPAC(p_numpac))
 )
 pivot (MAX(NOM_ELT) AS NOM_ELT FOR (NOM_ARG) in ('A01' AS A01,'A02' AS A02,'A03' AS A03));
 
 
 --Alimentation des informations sur le mapping des données
 requeteMappingPivot :='SELECT
 Y326_DONNEE ,
 Y327_DONNEE ,
 A302_DONNEE ,
 A301_DONNEE ,
 A520_DONNEE ,
 A521_DONNEE ,
 A523_DONNEE ,
 AB43_DONNEE ,
 AB44_DONNEE
 FROM (
 SELECT DISTINCT c.element,
 NVL(REPLACE(REPLACE(c.trtparticulier, ''$DONNEEGXP'', ''$TABLE.'' || c.donneegxp), ''$TABLE'', c.tablegxp), c.tablegxp || ''.'' || c.donneegxp) AS DONNEEGXP
 FROM tge_ref_mapdo c
 WHERE C.numpac = '''|| p_numpac ||'''
 AND c.element IN (''Y326'',''Y327'',''A302'',''A301'','''||A01_NOM_ELT||''','''||A02_NOM_ELT||''','''|| A03_NOM_ELT||''',''AB43'',''AB44'')
 UNION ALL
 SELECT DISTINCT c.element,
 NVL(REPLACE(REPLACE(c.trtparticulier, ''$DONNEEGXP'', ''$TABLE.'' || c.donneegxp), ''$TABLE'', c.tablegxp), c.tablegxp || ''.'' || c.donneegxp) AS DONNEEGXP
 FROM tge_ref_mapdo c
 WHERE C.numpac = ''*''
 AND c.element IN (''Y326'',''Y327'',''A302'',''A301'','''||A01_NOM_ELT||''','''||A02_NOM_ELT||''','''|| A03_NOM_ELT||''',''AB43'',''AB44'')
 AND (c.ELEMENT) NOT IN
 (
 SELECT a.element
 FROM tge_ref_mapdo a
 WHERE a.numpac = '''|| p_numpac ||'''
 AND A.ELEMENT IN (''Y326'',''Y327'',''A302'',''A301'','''||A01_NOM_ELT||''','''||A02_NOM_ELT||''','''|| A03_NOM_ELT||''',''AB43'',''AB44'')
 )
 ) pivot ( MAX(DONNEEGXP) AS DONNEE FOR (element)
 IN(''Y326'' AS Y326 ,''Y327'' AS Y327 ,''A302'' AS A302 ,''A301'' AS A301 ,'''||A01_NOM_ELT||''' AS A520 ,'''||A02_NOM_ELT||''' AS A521,'''||A03_NOM_ELT||''' AS A523,''AB43'' AS AB43,''AB44'' AS AB44))
 ';
 EXECUTE IMMEDIATE
 requeteMappingPivot
 INTO w_Y326,
 w_Y327,
 w_A302,
 w_A301,
 w_A520,
 w_A521,
 w_A523,
 w_AB43,
 w_AB44;
 EXCEPTION
 WHEN NO_DATA_FOUND THEN
 TGE_IMPORT_AVANCEMENT_proc('TGE_ALIM_PER','TGE_ALIM_PERIODE_INDIV_TEMP ERR : Erreurs de configuration de TGE_REF_MAPDO : NUMPAC = ''' || p_numpac || ''' AND ELEMENT in (''Y326'',''Y327'',''A302'',''A301'',''A520'',''A521'',''A523'')');
 raise;
 END;
 
 out_req := 'SELECT l.numpac, l.pacmat, l.PAIEZAD, l.debut_forcee, l.fin_forcee, l.entree, l.sortie, l.retour_susp, l.depart_susp, l.debut_situ, l.fin_situ, l.DT_RECUEIL_DEB, l.DT_RECUEIL_FIN, l.retro_gc, l.MOIS_PAIE, l.DATE_DEB_PERIODE, l.DATE_FIN_PERIODE from (
 SELECT
 dach_tmp_sus.numpac,
 dach_tmp_sus.pacmat,
 dach_tmp_sus.PAIEZAD,
 dach_tmp_sus.debut_forcee,
 dach_tmp_sus.fin_forcee,
 dach_tmp_sus.debut_situ as entree,
 dach_tmp_sus.fin_situ as sortie ,'
 || w_A302 || '+1 as retour_susp,  ' --pseudo date de retour de suspension / réembaucher
 || w_A301 || '-1 as depart_susp,  ' --pseudo date de départ en suspension
 || '
 dach_tmp_sus.debut_situ,
 dach_tmp_sus.fin_situ,
 dach_tmp_sus.DT_RECUEIL_DEB,
 dach_tmp_sus.DT_RECUEIL_FIN,
 dach_tmp_sus.retro_gc,
 dach_tmp_sus.NUMCNT,dach_tmp_sus.DATE_EFF,dach_tmp_sus.DSFCN,dach_tmp_sus.DSDCN,
 ' || w_A301 || ' AS sous_DSA301,
 ' || w_A302 || ' AS sous_DSA302,
 MOIS_PAIE,DATE_DEB_PERIODE,DATE_FIN_PERIODE
 FROM (
 select VR.numpac,VR.pacmat,VR.PAIEZAD,VR.NUMCNT,VR.DATE_EFF,VR.DSFCN,VR.DSDCN,VR.debut_forcee,VR.fin_forcee,VR.debut_situ,VR.fin_situ,VR.MOIS_PAIE,VR.DATE_DEB_PERIODE,VR.DATE_FIN_PERIODE,
 CASE
 WHEN TO_CHAR(VR.debut_forcee,''YYYYMMDD'') IS NOT NULL
 THEN VR.debut_forcee
 ELSE to_date(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT, 29, 8), ''DDMMYYYY'')
 END AS DT_RECUEIL_DEB,
 CASE
 WHEN TO_CHAR(VR.fin_forcee,''YYYYMMDD'') IS NOT NULL
 THEN VR.fin_forcee
 ELSE to_date(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT, 37, 8), ''DDMMYYYY'')
 END AS DT_RECUEIL_FIN,  ';
 IF periode_deb_retro IS NULL OR periode_deb_retro > periode_paie_en_cours THEN
 out_req := out_req || ' TGE_PERIODE_RECUEIL_PAIEZAD_R.retro_gc,  ';
 ELSE
 out_req := out_req || ' null as retro_gc, ';
 END IF;
 out_req := out_req || '(
 select max(dach_tmp.date_eff) from ';
 IF recueil_photo THEN
 out_req := out_req || ' PHOTO_DIC_ADM_CONTRAT_HISTO ';
 ELSE
 out_req := out_req || ' dic_adm_contrat_histo ';
 END IF;
 out_req := out_req || ' dach_tmp
 where dach_tmp.za962 is not null
 and dach_tmp.dsa301-1 <= last_day(to_date(''' || p_periode_paie || '''||''01'',''YYYYMMDD''))
 and nvl(dach_tmp.dsa302, dach_tmp.dsfsus)+1 >= to_date(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT, 29, 8), ''DDMMYYYY'')
 and dach_tmp.date_eff <= last_day(to_date(''' || p_periode_paie || '''||''01'',''YYYYMMDD'')) + 1
 and dach_tmp.numpac = VR.NUMPAC
 and dach_tmp.pacmat = VR.PACMAT
 and dach_tmp.paiezad = VR.PAIEZAD
 ) as date_eff_sus
 
 from (
 select numpac,pacmat,PAIEZAD,NUMCNT,DATE_EFF,DSFCN,DSDCN,debut_forcee,fin_forcee,debut_situ,fin_situ,NUMERO_DE_PAC,CODE_TABLE,MOIS_PAIE,DATE_DEB_PERIODE,DATE_FIN_PERIODE,MIN(NUMERO_DE_LIGNE) as min_NUMERO_DE_LIGNE from
 (SELECT CO.* FROM (select
 DIC_ADM_CONTRAT_SITU.numpac as numpac,
 DIC_ADM_CONTRAT_SITU.pacmat as pacmat,
 DIC_ADM_CONTRAT_SITU.PAIEZAD as paiezad,
 DIC_ADM_CONTRAT.DSDCN                 AS DSDCN,
 DIC_ADM_CONTRAT.DSFCN                 AS DSFCN,
 DIC_ADM_CONTRAT_HISTO.NUMCNT          AS NUMCNT,
 DIC_ADM_CONTRAT_HISTO.DATE_EFF        AS DATE_EFF, 
 ' || w_Y326 || ' as debut_forcee,
 ' || w_Y327 || ' as fin_forcee,
 ' || w_AB43 || ' as debut_situ,
 NVL(' || w_AB44 || ', TO_DATE(''20991231'',''YYYYMMDD'')) as fin_situ,
 ' || w_A520 || ' as activite,
 ' || w_A521 || ' as etablissement,
 ' || w_A523 || ' as categorie,
 DIC_ADM_CONTRAT_HISTO.MOIS_PAIE,
 DIC_ADM_CONTRAT_HISTO.DATE_DEB_PERIODE,
 DIC_ADM_CONTRAT_HISTO.DATE_FIN_PERIODE
 FROM  ';
 IF recueil_photo THEN
 out_req := out_req || ' (SELECT NUMPAC, PACMAT, NUMCNT, CURRENT_PAIEZAD as PAIEZAD, DSDCN as DSDSC, NVL(DSFCN,TO_DATE(''20991231'',''yyyymmdd'')) as DSFSC
 FROM PHOTO_DIC_ADM_CONTRAT WHERE paiezad IS NOT NULL) DIC_ADM_CONTRAT_SITU ';
 ELSE
 out_req := out_req || ' DIC_ADM_CONTRAT_SITU ';
 END IF;
 out_req := out_req || '
 left join DIC_PERIODES_RECUEIL_HIS
 on DIC_PERIODES_RECUEIL_HIS.numpac = DIC_ADM_CONTRAT_SITU.numpac
 AND DIC_PERIODES_RECUEIL_HIS.paiezad = DIC_ADM_CONTRAT_SITU.paiezad
 AND DIC_PERIODES_RECUEIL_HIS.PRH_MOIS_PAIE = ''' || p_periode_paie || '''
 inner join  ';
 IF recueil_photo THEN
 out_req := out_req || ' PHOTO_DIC_ADM_CONTRAT DIC_ADM_CONTRAT ';
 ELSE
 out_req := out_req || ' DIC_ADM_CONTRAT ';
 END IF;
 out_req := out_req || '
 on DIC_ADM_CONTRAT.NUMPAC=DIC_ADM_CONTRAT_SITU.NUMPAC
 AND DIC_ADM_CONTRAT.PACMAT=DIC_ADM_CONTRAT_SITU.PACMAT
 AND DIC_ADM_CONTRAT.NUMCNT=DIC_ADM_CONTRAT_SITU.NUMCNT
 left join ( SELECT  DIC_ADM_CONTRAT_HISTO.*,C.MOIS_PAIE, C.DATE_DEB_PERIODE_PREC, C.DATE_DEB_PERIODE, C.DATE_FIN_PERIODE
 FROM (
 SELECT distinct DACH_MAX_DATE_EFF.NUMPAC,
 DACH_MAX_DATE_EFF.PAIEZAD,
 DACH_MAX_DATE_EFF.PACMAT,
 ''' || p_periode_paie || ''' MOIS_PAIE,
 TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(''' || p_periode_paie || ''',''yyyymm''),-1),''YYYYMM'')||''01'',''yyyymmdd'') DATE_DEB_PERIODE_PREC,
 TO_DATE(''' || p_periode_paie || '''||''01'',''yyyymmdd'') DATE_DEB_PERIODE,
 last_day(to_date(''' || p_periode_paie || '''||''01'',''yyyymmdd'')) DATE_FIN_PERIODE,
 MAX(DACH_MAX_DATE_EFF.DATE_EFF)  over (partition BY DACH_MAX_DATE_EFF.NUMPAC, DACH_MAX_DATE_EFF.PAIEZAD, DACH_MAX_DATE_EFF.PACMAT) AS max_date_eff
 FROM ';
 IF recueil_photo THEN
 out_req := out_req || ' PHOTO_DIC_ADM_CONTRAT_HISTO ';
 ELSE
 out_req := out_req || ' DIC_ADM_CONTRAT_HISTO ';
 END IF;
 out_req := out_req || ' DACH_MAX_DATE_EFF
 WHERE DACH_MAX_DATE_EFF.NUMPAC = ''' || p_numpac || ''' ';
 IF p_pacmat IS NOT NULL THEN
 out_req := out_req || ' AND PACMAT = ''' || p_pacmat || ''' ';
 END IF;
 out_req := out_req || '  AND DACH_MAX_DATE_EFF.DATE_EFF <= last_day(TO_DATE( ''' || p_periode_paie || '''||''01'',''yyyymmdd''))
 ) C
 inner join ';
 IF recueil_photo THEN
 out_req := out_req || ' PHOTO_DIC_ADM_CONTRAT_HISTO DIC_ADM_CONTRAT_HISTO ';
 ELSE
 out_req := out_req || ' DIC_ADM_CONTRAT_HISTO ';
 END IF;
 out_req := out_req || ' on
 DIC_ADM_CONTRAT_HISTO.NUMPAC = C.NUMPAC
 AND DIC_ADM_CONTRAT_HISTO.paiezad = C.paiezad
 AND DIC_ADM_CONTRAT_HISTO.PACMAT = C.PACMAT
 AND DIC_ADM_CONTRAT_HISTO.DATE_EFF = C.max_date_eff
 ) DIC_ADM_CONTRAT_HISTO
 on DIC_ADM_CONTRAT_HISTO.NUMCNT=DIC_ADM_CONTRAT_SITU.NUMCNT
 AND DIC_ADM_CONTRAT_HISTO.NUMPAC=DIC_ADM_CONTRAT_SITU.NUMPAC
 AND DIC_ADM_CONTRAT_HISTO.paiezad = DIC_ADM_CONTRAT_SITU.paiezad
 AND DIC_ADM_CONTRAT_HISTO.PACMAT=DIC_ADM_CONTRAT_SITU.PACMAT
 WHERE (DIC_ADM_CONTRAT_HISTO.ZA750 IS NULL OR DIC_ADM_CONTRAT_HISTO.DRPAI2 != ''B'')
 AND (DIC_ADM_CONTRAT.NATCOL IS NULL OR DIC_ADM_CONTRAT.NATCOL in (''SAL'',''STA''))
 AND NVL(' || w_AB44 || ', TO_DATE(''20991231'',''YYYYMMDD'')) >= DIC_ADM_CONTRAT_HISTO.DATE_DEB_PERIODE_PREC
 AND NVL(DIC_ADM_CONTRAT_HISTO.DATE_EFF, ' || w_AB43 || ') <= DIC_ADM_CONTRAT_HISTO.DATE_FIN_PERIODE
 ) CO
 ) COM,TGE_REF_VRVAL
 WHERE TGE_REF_VRVAL.CODE_TABLE = ''LTP''
 AND TGE_REF_VRVAL.NUMERO_DE_PAC = COM.NUMPAC
 AND SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT, 19 , 6 ) = SUBSTR(COM.MOIS_PAIE,5, 2)||SUBSTR(COM.MOIS_PAIE,1, 4) ';
 
 IF optionEcp IS NOT NULL AND optionEcp = 'P' THEN
 out_req := out_req || '
 AND TRIM(LPAD(COM.activite,2)) BETWEEN LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,1 ,2),2) AND LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,3,2),2)
 AND TRIM(LPAD(COM.etablissement,5)) BETWEEN LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,5 ,5),5) AND LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,10,5),5)
 AND TRIM(LPAD(COM.categorie,2)) BETWEEN LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,15,2),2) AND LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,17,2),2)
 ';
 ELSE
 out_req := out_req || '
 AND IS_BETWEEN_NLS_FRENCH(TRIM(LPAD(COM.activite,2)),LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,1 ,2),2), LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,3,2),2) )  = ''TRUE''
 AND IS_BETWEEN_NLS_FRENCH(TRIM(LPAD(COM.etablissement,5)),LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,5 ,5),5), LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,10,5),5))  = ''TRUE''
 AND IS_BETWEEN_NLS_FRENCH(TRIM(LPAD(COM.categorie,2)),LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,15,2),2), LPAD(SUBSTR(TGE_REF_VRVAL.ENREGISTREMENT,17,2),2) )  = ''TRUE''
 ';
 END IF;
 
 out_req := out_req || '
 GROUP BY numpac,pacmat,PAIEZAD,NUMCNT,DATE_EFF,DSFCN,DSDCN,debut_forcee,fin_forcee,debut_situ,fin_situ,NUMERO_DE_PAC,CODE_TABLE,COM.MOIS_PAIE,COM.DATE_DEB_PERIODE,COM.DATE_FIN_PERIODE
 ) VR inner join TGE_REF_VRVAL on TGE_REF_VRVAL.NUMERO_DE_PAC = VR.NUMERO_DE_PAC AND TGE_REF_VRVAL.CODE_TABLE = VR.CODE_TABLE AND TGE_REF_VRVAL.NUMERO_DE_LIGNE = VR.min_NUMERO_DE_LIGNE
 LEFT JOIN TGE_PERIODE_RECUEIL_PAIEZAD_R
 ON TGE_PERIODE_RECUEIL_PAIEZAD_R.NUMPAC      = VR.NUMPAC
 AND TGE_PERIODE_RECUEIL_PAIEZAD_R.PACMAT     = VR.PACMAT
 AND TGE_PERIODE_RECUEIL_PAIEZAD_R.PAIEZAD    = VR.PAIEZAD
 AND TGE_PERIODE_RECUEIL_PAIEZAD_R.MOIS_PAIE  = VR.MOIS_PAIE
 AND TGE_PERIODE_RECUEIL_PAIEZAD_R.ID_TRT     = ''' || p_id || '''
 ) dach_tmp_sus
 LEFT JOIN  ';
 IF recueil_photo THEN
 out_req := out_req || ' PHOTO_DIC_ADM_CONTRAT_HISTO DIC_ADM_CONTRAT_HISTO ';
 ELSE
 out_req := out_req || ' DIC_ADM_CONTRAT_HISTO ';
 END IF;
 out_req := out_req || ' ON
 DIC_ADM_CONTRAT_HISTO.numpac = dach_tmp_sus.NUMPAC
 AND DIC_ADM_CONTRAT_HISTO.pacmat = dach_tmp_sus.PACMAT
 AND DIC_ADM_CONTRAT_HISTO.paiezad = dach_tmp_sus.PAIEZAD
 AND DIC_ADM_CONTRAT_HISTO.date_eff = dach_tmp_sus.date_eff_sus
 ) l ';
 IF not recueil_photo THEN
 out_req := out_req || ' LEFT JOIN PHOTO_DIC_ADM_CONTRAT P
 ON l.NUMPAC = P.NUMPAC
 AND l.PACMAT = P.PACMAT
 AND l.NUMCNT = P.NUMCNT
 LEFT JOIN PHOTO_DIC_ADM_CONTRAT_HISTO PH
 ON l.NUMPAC = PH.NUMPAC
 AND l.PACMAT = PH.PACMAT
 AND l.NUMCNT = PH.NUMCNT
 AND l.DATE_EFF = PH.DATE_EFF
 AND l.PAIEZAD = PH.PAIEZAD
 WHERE P.PACMAT IS NULL
 OR l.DSFCN IS NULL
 OR l.DSFCN >  l.DATE_FIN_PERIODE
 OR NVL(P.DSDCN, TO_DATE(''01.01.1900'', ''dd.MM.yyyy'')) != NVL(l.DSDCN, TO_DATE(''01.01.1900'', ''dd.MM.yyyy''))
 OR NVL(P.DSFCN, TO_DATE(''01.01.1900'', ''dd.MM.yyyy'')) != NVL(l.DSFCN, TO_DATE(''01.01.1900'', ''dd.MM.yyyy''))
 OR PH.PACMAT IS NULL
 OR l.sous_DSA301 IS NULL
 OR l.sous_DSA301 > l.DATE_FIN_PERIODE
 OR NVL(PH.DSA302, TO_DATE(''01.01.1900'', ''dd.MM.yyyy'')) != NVL(l.sous_DSA302, TO_DATE(''01.01.1900'', ''dd.MM.yyyy''))
 OR NVL(PH.DSA301, TO_DATE(''01.01.1900'', ''dd.MM.yyyy'')) != NVL(l.sous_DSA301, TO_DATE(''01.01.1900'', ''dd.MM.yyyy''))
 OR l.DATE_DEB_PERIODE BETWEEN l.ENTREE AND l.SORTIE
 OR l.ENTREE BETWEEN l.DATE_DEB_PERIODE AND  l.DATE_FIN_PERIODE ';
 END IF;
 
 TGE_IMPORT_AVANCEMENT_proc('TGE_ALIM_PER','fin TGE_ALIM_PERIODE_INDIV_TEMP OK');
 EXCEPTION
 WHEN OTHERS THEN
 TGE_IMPORT_AVANCEMENT_proc('TGE_ALIM_PER','fin TGE_ALIM_PERIODE_INDIV_TEMP KO : TGE_ALIM_PERIODE_INDIV_TEMP '||SQLCODE||' '||SQLERRM);
 raise;
 END TGE_ALIM_PERIODE_INDIV_TEMP;
##
TAG_CHARSET=@€éèç
##
TGE_CLOTURE
=SQL=
create or replace PROCEDURE TGE_CLOTURE ( p_id in number, P_NUMPAC IN VARCHAR2 ) AS /********************************************************************************
 Version     : V5.05.000
 *********************************************************************************/
 P_PERIODEENCOURS TGE_REF_PAC.PERIODEENCOURS%type;
 p_dtdebMois varchar2(8);
 p_finMois varchar2(8);
 p_histoIP varchar2(1);
 
 P_DEB_RETRO TGE_REF_PAC.DEB_RETRO%type;
 P_DEB_HISTO_RETRO TGE_REF_PAC.DEB_HISTO_RETRO%type;
 P_NB_MOIS_RETRO TGE_REF_PAC.NB_MOIS_RETRO%type;
 P_PERIDOE_HISTO_LIMITE TGE_REF_PAC.PERIODEENCOURS%type;
 w_per   VARCHAR2(6);
 w_req   CLOB;
 isRetro number :=0;
 BEGIN
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin)','Début de la clôture du numpac  '||P_NUMPAC);
 
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Recup Periode + infos Rétro)','Récupération de la période en cours,date début Rétro, date début historisation Rétro et nombre de mois Rétro à partir de TGE_REF_PAC pour le numpac : '||P_NUMPAC);
 select PERIODEENCOURS ,DEB_RETRO,DEB_HISTO_RETRO,NB_MOIS_RETRO ,to_char( add_months(to_date(PERIODEENCOURS,'yyyymm'),(-1*nvl(NB_MOIS_RETRO,1))+1),'YYYYMM') PERIDOE_HISTO_LIMITE
 into P_PERIODEENCOURS,P_DEB_RETRO,P_DEB_HISTO_RETRO,P_NB_MOIS_RETRO ,P_PERIDOE_HISTO_LIMITE
 from TGE_REF_PAC where numpac=p_numpac;
 
 IF P_DEB_RETRO is not null  AND to_date(P_PERIODEENCOURS,'YYYYMM')>=to_date(P_DEB_HISTO_RETRO,'YYYYMM') THEN
 w_per := P_PERIDOE_HISTO_LIMITE;
 isRetro :=1;
 ELSE
 w_per := P_PERIODEENCOURS;
 isRetro:=0;
 END IF;

 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge GAP_TRT_MAL_RECYCLES)','Purge de la table GAP_TRT_MAL_RECYCLES pour le numpac : '||P_NUMPAC);

 DELETE FROM  GAP_TRT_MAL_RECYCLES  WHERE NUMPAC = P_NUMPAC; 

 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge GAP_TRT_DERNIER_ENVOI)','Purge de la table GAP_TRT_DERNIER_ENVOI pour le numpac : '||P_NUMPAC);
 
 DELETE FROM  GAP_TRT_DERNIER_ENVOI  WHERE NUMPAC = P_NUMPAC; 

 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant lecture REF PER)','Récupération de la date de début et de fin du mois pour le numpac '||P_NUMPAC || '  et la periode '|| p_PERIODEENCOURS );
 select DATE_DEBUT_MOIS,DATE_FIN_MOIS into p_dtdebMois,p_finMois from TGE_REF_PER where numpac=p_numpac and periodeencours=p_PERIODEENCOURS;
 
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Insert GAP_TRT_MAL_RECYCLES)','Remplissage de la table GAP_TRT_MAL_RECYCLES pour le numpac : '||P_NUMPAC);
 
 insert into GAP_TRT_MAL_RECYCLES select ID_TRT,NUMPAC  ,PACMAT ,PAIEZAD,DATE_TRT  from 
(SELECT d.numpac,d.pacmat,max(b.id_trt)as ID_TRT,d.paiezad,nvl(max(b.DATE_DEBUT_TRT),to_date('01/01/1901','dd/mm/yyyy'))as DATE_TRT
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c, GAP_TRT_LISTE_MAT e, DIC_ADM_CONTRAT_SITU d
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 and e.id_trt=b.id_trt
AND EXISTS
 (SELECT f.numpac,
 f.pacmat
 FROM GAP_RECYCL_MATRIC f
 WHERE f.numpac=e.numpac
 AND f.pacmat  =e.pacmat
 )
 AND d.numpac       =e.numpac
 AND d.pacmat       =e.pacmat
group by d.numpac,d.pacmat,d.paiezad);

DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'GAP_TRT_MAL_RECYCLES',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);

 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Insert GAP_TRT_DERNIER_ENVOI)','Remplissage de la table GAP_TRT_DERNIER_ENVOI pour le numpac : '||P_NUMPAC);
 
 insert into GAP_TRT_DERNIER_ENVOI select ID_TRT,NUMPAC  ,PACMAT ,PAIEZAD,DATE_TRT  from
 (SELECT d.numpac,d.pacmat,max(b.id_trt)as ID_TRT,d.paiezad,nvl(max(b.DATE_DEBUT_TRT),to_date('01/01/1901','dd/mm/yyyy'))as DATE_TRT
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c, GAP_TRT_LISTE_MAT e, DIC_ADM_CONTRAT_SITU d
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 and e.id_trt=b.id_trt
 AND d.numpac       =e.numpac
 AND d.pacmat       =e.pacmat
 group by d.numpac,d.pacmat,d.paiezad);
 
 DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'GAP_TRT_DERNIER_ENVOI',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);
 --Purge et Historisation de dif_FSED
 
 BEGIN
 w_req :='Create TABLE DIF_FSED_HISTO_'||P_PERIODEENCOURS||' as select * from DIF_FSED_HISTO '  ;
 execute_immediate_string (w_req,0);
 EXCEPTION
 WHEN OTHERS THEN
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV DIF_FSED_HISTO) ','la table DIF_FSED_HISTO_'||P_PERIODEENCOURS||' existe déja ' );
 END ;
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Deb PURGE_HISTO_DIF_FSED)','Début PURGE_HISTO_DIF_FSED pour le numpac  '||P_NUMPAC );

 PURGE_HISTO_DIF_FSED ( p_id, P_NUMPAC,P_PERIODEENCOURS,P_DEB_RETRO,P_DEB_HISTO_RETRO,P_NB_MOIS_RETRO,P_PERIDOE_HISTO_LIMITE);
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Fin PURGE_HISTO_DIF_FSED)','Fin PURGE_HISTO_DIF_FSED pour le numpac  '||P_NUMPAC );
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV DIF_FSED) ',' début sauvegarde DIF_FSED'  );
 BEGIN
 w_req :='Create TABLE DIF_FSED_'||P_PERIODEENCOURS||' as select * from DIF_FSED '  ;
 execute_immediate_string (w_req,0);
 EXCEPTION 
   WHEN OTHERS THEN
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV DIF_FSED) ','la table DIF_FSED_'||P_PERIODEENCOURS||' existe déja ' );
 END ;


 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (DEBUT Supp DIF_FSED)','DEBUT Purge de la table DIF_FSED ');
 FOR C IN
 (SELECT DISTINCT to_char(id_trt) as trt FROM DIF_FSED WHERE NUMPAC =p_numpac
 )
 LOOP
 w_req :='ALTER TABLE DIF_FSED DROP PARTITION ID_'||C.trt ;
 BEGIN
 execute_immediate_string (w_req,0);
 EXCEPTION 
 when others then 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE ( Supp partition DIF_FSED)','ERREUR lors de la suppresstion partition ID_'||C.trt||' de DIF_FSED '||SQLCODE||'-'||SQLERRM);
 end ;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE ( Supp partition DIF_FSED)','suppression partition ID_'||C.trt||' de DIF_FSED ');
 END LOOP;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (FIN Supp DIF_FSED)','FIN Purge de la table DIF_FSED');
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant insert GAP TRT)','Préparation du traitement GAP_TRT pour le  '||P_NUMPAC);
 --Ajout  dans GAP_TRT
 insert into GAP_TRT (ID_TRT,NUMPAC,PERIODE_PAIE,NUMERO_ECHANGE,MODELE,NATURE,DATE_DEBUT_PAIE,DATE_FIN_PAIE,WORKFLOW_ID,DATE_PREVUE_TRT,DATE_PLANIF_TRT,DATE_DEBUT_TRT,INFO)
 values
 (p_id,P_NUMPAC,p_PERIODEENCOURS,'0000','ALP','CLOTURE',p_dtdebMois,p_finMois,'TGEPAY'||P_NUMPAC||'PACGXP'||p_PERIODEENCOURS||'0000',sysdate,sysdate,sysdate,'CLOTURE');
 
 --GAP_TRT_SUIVI
 FSED.insert_gap_trt_suivi(p_id,'PREPA_CLOTURE',null,'BATCH','CL');
 --BEGIN DIT 37805
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin Supp RELIQ)',' Début de la purge des tables  TGE_RELIQ_INCIDENTS_PAIE, TGE_RELIQ_DONNEES_PAIE, TGE_RELIQ_ELEMENTS_PAIE, TGE_RELIQ_IMPUTATIONS,TGE_RELIQ_PACMAT_TORESEND pour le numpac  '||P_NUMPAC);
 -- les tables TGE_RELIQ_* sont vidées pour le pac en question
 DELETE FROM TGE_RELIQ_INCIDENTS_PAIE  WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_DONNEES_PAIE    WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_ELEMENTS_PAIE   WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_IMPUTATIONS     WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_PACMAT_TORESEND WHERE NUMPAC = P_NUMPAC;
 DELETE FROM TGE_RELIQ_PACMAT_TORESEND_RETRO WHERE NUMPAC = P_NUMPAC;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (End Supp RELIQ)','Fin de de la purge des tables RELIQ pour le  numpac : '||P_NUMPAC);
 --FIN  DIT 37805
 
 -- Mise à jour secupacmat
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Update SECUPACMAT)','Deuxième période de recyclage : Mise à jour de la table SECUPACMAT pour le numpac : '||p_numpac);
 update SECUPACMAT set PERIODE_RECYCLAGE=2 where numpac=p_numpac;
 FSED.insert_gap_trt_suivi(p_id,'PERIODE_RECYCLAGE_2',null,'BATCH','CL');
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant insert LISTE MAT)','Préparation de la liste des matricules');
 -- RSI  Le 20/02/2015 DIT 41197:EVOL: Ajout du type de paie 'GAPSELMA'
 insert into GAP_TRT_LISTE_MAT select distinct  p_id,b.numpac,b.pacmat,null from (
 select distinct c.id_trt
 from TGE_SCHEMA_PRODUCTION a,GAP_TRT b,GAP_TRT_SUIVI c  where a.numpac=p_numpac and a.TYPE_PAIE in ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 and a.numpac=b.numpac and a.modele=b.modele and a.nature=b.nature and b.id_trt=c.id_trt and c.statut in ('PA','EX','DEMSEA') AND NVL(c.code_retour_zpp,'00')='00' and b.PERIODE_PAIE = p_PERIODEENCOURS  and b.numero_echange<>'0000') a, GAP_TRT_LISTE_MAT b where a.id_trt=b.id_trt
 and not exists (select c.numpac,c.pacmat from GAP_RECYCL_MATRIC c where c.numpac=b.numpac and c.pacmat=b.pacmat ) ;
 -- Le 25/04/2015 ajout des mal recyclés (colonne "TRAITE"='R')
 insert into GAP_TRT_LISTE_MAT select distinct  p_id,b.numpac,b.pacmat,'R' from (
 select distinct c.id_trt
 from TGE_SCHEMA_PRODUCTION a,GAP_TRT b,GAP_TRT_SUIVI c  where a.numpac=p_numpac and a.TYPE_PAIE in ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 and a.numpac=b.numpac and a.modele=b.modele and a.nature=b.nature and b.id_trt=c.id_trt and c.statut in ('PA','EX','DEMSEA') AND NVL(c.code_retour_zpp,'00')='00' and b.PERIODE_PAIE = p_PERIODEENCOURS  and b.numero_echange<>'0000') a, GAP_TRT_LISTE_MAT b where a.id_trt=b.id_trt
 and exists (select c.numpac,c.pacmat from GAP_RECYCL_MATRIC c where c.numpac=b.numpac and c.pacmat=b.pacmat ) ;
 -- photos
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant génération photo)','Début de la génération de la photo pour le numpac '||P_NUMPAC||'  à la date '||p_dtdebMois);
 tge_generation_photo(p_id,p_numpac,p_dtdebMois);
 FSED.insert_gap_trt_suivi(p_id,'PHOTO',null,'BATCH','CL');
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (après génération photo)','Fin de la génération de la photo pour le numpac '||P_NUMPAC||'  à la date '||p_dtdebMois);
 
 
 insert into bypass_trg_recycl_on_session(date_event, message) values (sysdate, 'Cloture en cours pour le NUMPAC : ' || p_numpac);
 
 -- lecture de la valeur de HISTO_IP dans TGE_REF_PAC
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant lecture REF PER)','Récupération de la valeur de HISTO_IP dans TGE_REF_PAC pour le numpac '||P_NUMPAC );
 select nvl(HISTO_IP,'N') into p_histoIP from TGE_REF_PAC where NUMPAC = p_numpac;
 
 -- purge saisies quai
 FSED.insert_gap_trt_suivi(p_id,'PURGE_QUAIS',null,'BATCH','CL');
 delete from TGE_IMPUTATIONS where numpac=p_numpac and to_date(PERIODE,'YYYYMM')<=to_date(p_PERIODEENCOURS,'YYYYMM') and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt=p_id
 and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null );
 
 IF p_histoIP = 'N' THEN
 
 w_req :='DELETE FROM TGE_INCIDENTS_PAIE z WHERE z.numpac='''||p_numpac||''' AND  ';
 if isRetro=1 then
 w_req := w_req || ' ( z.PERIODE <greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
 w_req := w_req || ' ( z.PERIODE           <=to_date('''||w_per||''',''yyyymm'')';
 end if;
 w_req := w_req||')'||' AND (z.numpac,z.paiezad) IN (SELECT DISTINCT b.numpac,
 d.paiezad FROM GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d,TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE b.id_trt ='||p_id||' AND d.numpac =b.numpac AND d.pacmat =b.pacmat AND d.numpac  =t.numpac AND d.pacmat  =t.pacmat
 AND d.paiezad   =t.paiezad AND ';
 if isRetro=1 then
 w_req := w_req || ' to_date(t.MOIS_PAIE,''YYYYMM'') <= greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
  w_req := w_req ||' to_date(t.MOIS_PAIE,''YYYYMM'') = to_date('''||p_PERIODEENCOURS||''',''YYYYMM'')';
 end if;
 w_req := w_req ||' AND (z.date_effet <= t.FIN_PERIODE_RECUEIL OR z.TYPE_IP       = ''T'')AND b.traite      IS NULL)';
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge incidents )',w_req);
 execute_immediate_string (w_req,0);
 if isRetro=1 then
 --R046
 update TGE_INCIDENTS_PAIE z
 set    z.ACTION_RETRO='H',z.ACTION_RETRO_DATE=null
 WHERE  z.numpac           =p_numpac
 AND z.PERIODE >=greatest(to_date(P_PERIDOE_HISTO_LIMITE,'YYYYMM'),to_date(nvl(P_DEB_HISTO_RETRO,'209912'),'YYYYMM'))
 AND z.PERIODE<=to_date(p_PERIODEENCOURS,'yyyymm')
 AND (z.numpac,z.paiezad) IN
 (SELECT DISTINCT b.numpac,
 d.paiezad
 FROM GAP_TRT_LISTE_MAT b,
 DIC_ADM_CONTRAT_SITU d,
 TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE b.id_trt     =p_id
 AND d.numpac       =b.numpac
 AND d.pacmat       =b.pacmat
 AND d.numpac       =t.numpac
 AND d.pacmat       =t.pacmat
 AND d.paiezad      =t.paiezad
 AND to_date(t.MOIS_PAIE,'yyyymm') = to_date(p_PERIODEENCOURS,'yyyymm')
 AND (z.date_effet <= t.FIN_PERIODE_RECUEIL
 OR z.TYPE_IP       = 'T')
 --THN
 --AND b.traite      IS NULL
 )
 AND z.date_maj<
 (
 SELECT DATE_TRT from GAP_TRT_DERNIER_ENVOI  e
 WHERE e.numpac       =z.numpac
 AND e.PAIEZAD      =z.paiezad
 );
 update TGE_INCIDENTS_PAIE z
 set    ACTION_RETRO='C',
 ACTION_RETRO_DATE =z.date_maj
 WHERE  z.numpac           =p_numpac
 AND z.PERIODE=to_date(p_PERIODEENCOURS,'yyyymm')
 AND (z.numpac,z.paiezad) IN
 (SELECT DISTINCT b.numpac,
 d.paiezad
 FROM GAP_TRT_LISTE_MAT b,
 DIC_ADM_CONTRAT_SITU d,
 TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE b.id_trt     =p_id
 AND d.numpac       =b.numpac
 AND d.pacmat       =b.pacmat
 AND d.numpac       =t.numpac
 AND d.pacmat       =t.pacmat
 AND d.paiezad      =t.paiezad
 AND to_date(t.MOIS_PAIE,'yyyymm') = to_date(p_PERIODEENCOURS,'yyyymm')
 AND (z.date_effet <= t.FIN_PERIODE_RECUEIL
 OR z.TYPE_IP       = 'T')
 --THN
 --AND b.traite      IS NULL
 )--- Pour les periodes<periodeencours on laisse l'action retro existante
 AND z.date_maj>=
 (
 SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e
 WHERE e.numpac       =z.numpac
 AND e.PAIEZAD      =z.paiezad
 );
 end if;
 END IF;
 
 w_req :='delete from TGE_DONNEES_PAIE where numpac='''||p_numpac||''' and ' ;
 if isRetro=1 then
 w_req := w_req || '( to_date(PERIODE,''YYYYMM'') < greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
 w_req := w_req ||' (  to_date(PERIODE,''YYYYMM'') <= to_date('''||p_PERIODEENCOURS||''',''YYYYMM'')';
 end if;
 w_req := w_req ||') and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt='||p_id||
 ' and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null)';
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge donnes )',w_req);
 execute_immediate_string (w_req,0);
 if isRetro=1 then
 ---R046
 update TGE_DONNEES_PAIE z
 set    z.ACTION_RETRO ='H',
 z.ACTION_RETRO_DATE =null
 where z.numpac=p_numpac
 and to_date(z.PERIODE,'YYYYMM')>=greatest(to_date(P_PERIDOE_HISTO_LIMITE,'YYYYMM'),to_date(nvl(P_DEB_HISTO_RETRO,'209912'),'YYYYMM'))
 AND to_date(z.PERIODE,'YYYYMM')<=to_date(p_PERIODEENCOURS,'yyyymm')
 AND to_date(z.date_maj,'yyyymmddHH24MI')<
 (
 SELECT DATE_TRT from GAP_TRT_DERNIER_ENVOI  e
 WHERE e.numpac       =z.numpac
 AND e.PAIEZAD      =z.paiezad
 );
 ---R046
 update TGE_DONNEES_PAIE z
 set    z.ACTION_RETRO ='C',
 z.ACTION_RETRO_DATE =to_date(z.date_maj,'yyyymmddHH24MI')
 where z.numpac=p_numpac
 AND to_date(z.PERIODE,'YYYYMM')=to_date(p_PERIODEENCOURS,'yyyymm')
 --- Pour les periodes<periodeencours on laisse l'action retro existante
 AND to_date(z.date_maj,'yyyymmddHH24MI')>=
 (
 SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e
 WHERE e.numpac       =z.numpac
 AND e.PAIEZAD      =z.paiezad
 );
 end if;
 w_req :='delete from TGE_ELEMENTS_PAIE where numpac='''||p_numpac||''' and  ' ;
 if isRetro=1 then
 w_req := w_req || '( to_date(PERIODE,''YYYYMM'') < greatest(to_date('''||P_PERIDOE_HISTO_LIMITE||''',''YYYYMM''),to_date(nvl('''||P_DEB_HISTO_RETRO||''',''209912''),''YYYYMM''))'||' OR DERNIER_CODE_OPE=''S''';
 else
 w_req := w_req ||' (  to_date(PERIODE,''YYYYMM'') <= to_date('''||p_PERIODEENCOURS||''',''YYYYMM'')';
 end if;
 w_req := w_req ||')  and (numpac,paiezad) in (select distinct b.numpac,d.paiezad from GAP_TRT_LISTE_MAT b,DIC_ADM_CONTRAT_SITU d where b.id_trt='||p_id||
 ' and d.numpac=b.numpac and d.pacmat=b.pacmat and b.traite is null )';
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge elements )',w_req);
 execute_immediate_string (w_req,0);
 if isRetro=1 then
 update TGE_ELEMENTS_PAIE z
 set    z.ACTION_RETRO ='H',
 z.ACTION_RETRO_DATE =null
 where z.numpac=p_numpac
 and to_date(z.PERIODE,'YYYYMM')>=greatest(to_date(P_PERIDOE_HISTO_LIMITE,'YYYYMM'),to_date(nvl(P_DEB_HISTO_RETRO,'209912'),'YYYYMM'))
 AND to_date(z.PERIODE,'YYYYMM')<=to_date(p_PERIODEENCOURS,'yyyymm')
 AND to_date(z.date_maj,'yyyymmddHH24MI')<
 (
 SELECT DATE_TRT from GAP_TRT_DERNIER_ENVOI  e
 WHERE e.numpac       =z.numpac
 AND e.PAIEZAD      =z.paiezad
 );

 update TGE_ELEMENTS_PAIE z
 set    z.ACTION_RETRO ='C',
 z.ACTION_RETRO_DATE =to_date(z.date_maj,'yyyymmddHH24MI')
 where z.numpac=p_numpac
 AND to_date(z.PERIODE,'YYYYMM')=to_date(p_PERIODEENCOURS,'yyyymm')
 AND to_date(z.date_maj,'yyyymmddHH24MI')>=
 (
 SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e
 WHERE e.numpac       =z.numpac
 AND e.PAIEZAD      =z.paiezad
 );
 END IF;
 
 --Nettoyage des annulations de périodes d'emploi si la suppression a été faite avant le dernier passage de paie 
    
 delete from DELETED_PAIEZAD z where numpac=p_numpac AND DATE_SUPPRESSION<
 ( SELECT max (b.DATE_DEBUT_TRT)
 FROM TGE_SCHEMA_PRODUCTION a,
 GAP_TRT b,
 GAP_TRT_SUIVI c
 WHERE a.numpac       =p_numpac
 AND a.TYPE_PAIE     IN ('PRECONTR','CONTROLE','RECYCLAG','PARTICUL','REGLE','REGLEALL','GAPSELMA')
 AND a.numpac         =b.numpac
 AND a.modele         =b.modele
 AND a.nature         =b.nature
 AND b.id_trt         =c.id_trt
 AND c.statut        IN ('PA','EX','DEMSEA')
 AND NVL(c.code_retour_zpp,'00')='00'
 AND b.PERIODE_PAIE   = p_PERIODEENCOURS
 AND b.numero_echange<>'0000'
 ) ;
 
 
 -- purge saisies quai des matricules mal recyclés
 FSED.insert_gap_trt_suivi(p_id,'PURGE_QUAIS_RECY',null,'BATCH','CL');

 delete from TGE_IMPUTATIONS z where numpac=p_numpac AND to_date(date_maj,'yyyymmddHH24MI')<
 
 (  SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e
    WHERE z.numpac       =e.numpac
    AND z.PAIEZAD      =e.paiezad
    )  and PERIODE<=p_PERIODEENCOURS ;
 
 
 
 IF p_histoIP='N' AND isRetro=0 THEN
 DELETE
 FROM TGE_INCIDENTS_PAIE z
 WHERE z.numpac            =p_numpac
 AND (z.numpac,z.paiezad) IN
 (SELECT DISTINCT t.numpac,
 t.paiezad
 FROM TGE_PERIODE_RECUEIL_PAIEZAD t
 WHERE z.numpac     =t.numpac
 AND z.paiezad      =t.paiezad
 AND t.MOIS_PAIE = p_PERIODEENCOURS
 AND (z.date_effet <= t.FIN_PERIODE_RECUEIL
 OR z.TYPE_IP       = 'T')
 )
 AND z.date_maj<(SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e
  where z.numpac  =e.numpac
  AND   z.PAIEZAD =e.paiezad)
 AND to_date(z.PERIODE)<=to_date(p_PERIODEENCOURS,'YYYYMM');

 END IF;
 
 IF isRetro=0 THEN
 delete from TGE_DONNEES_PAIE z where numpac=p_numpac AND to_date(date_maj,'yyyymmddHH24MI')<
 ( 
 SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e
 WHERE z.numpac       =e.numpac
 AND z.PAIEZAD      =e.paiezad
 ) and PERIODE<=p_PERIODEENCOURS ;

 delete from TGE_ELEMENTS_PAIE z where numpac=p_numpac AND to_date(date_maj,'yyyymmddHH24MI')<
 
 (SELECT DATE_TRT from GAP_TRT_MAL_RECYCLES  e

 WHERE z.numpac       =e.numpac
 AND  z.PAIEZAD      =e.paiezad
 )  and PERIODE<=p_PERIODEENCOURS ;
 END IF;
 
 if P_DEB_RETRO is null OR to_date(p_PERIODEENCOURS,'YYYYMM') < to_date(P_DEB_RETRO,'YYYYMM') then
 	--Recalcul des période de recueil avec les photos de dach et dac avant de changer de mois, pour corriger les saisies tardives
 	TGE_ALIM_PERIODE_INDIV(p_id, p_numpac, p_PERIODEENCOURS, NULL, NULL, 'O');
 END IF;
 
 -- M+1 sur TGE_REF_PAC
 update TGE_REF_PAC set periodeencours=to_char(add_months(to_date(periodeencours,'yyyymm'), 1),'yyyymm') where numpac=p_numpac;
 
 merge into TGE_REF_PER a using (select p_numpac as numpac,to_char(add_months(to_date(p_PERIODEENCOURS,'yyyymm'), 1),'yyyymm') as periodeencours from dual) b on (a.numpac=b.numpac and a.periodeencours=b.periodeencours)
 when matched then
 update set a.DATE_DEBUT_MOIS=b.periodeencours||'01',a.DATE_FIN_MOIS= to_char(last_day(to_date(b.periodeencours,'yyyymm')),'yyyymmdd'),a.DERNIER_NUM_ECHANGE=nvl(a.DERNIER_NUM_ECHANGE,'0000')
 when not matched then
 insert (a.numpac,a.periodeencours,a.DATE_DEBUT_MOIS,a.DATE_FIN_MOIS,a.DERNIER_NUM_ECHANGE) values (b.numpac,b.periodeencours,b.periodeencours||'01', to_char(last_day(to_date(b.periodeencours,'yyyymm')),'yyyymmdd') ,'0000'      )
 ;
 -- purge histo technique
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant purge histo)','Début de la purge pour le numpac : '||P_NUMPAC);
 tge_purge_histo(p_numpac,to_char(add_months(to_date(p_PERIODEENCOURS,'yyyymm'), 1),'yyyymm'));
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (après purge histo)','Fin de la purge pour le numpac : '||P_NUMPAC);
  
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin Insert RELIQ)','Début d insertion dans les tables RELIQ_  pour le numpac : '||P_NUMPAC);
 
 -- les tables TGE_RELIQ_* sont vidées pour le pac en question
 tge_insert_reliq (p_id,p_numpac,p_PERIODEENCOURS,isRetro);
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (End Insert RELIQ)','Fin d insertion dans les tables RELIQ_  pour le numpac : '||P_NUMPAC);
 
 -- Mise à jour secupacmat
 update SECUPACMAT set PERIODE_RECYCLAGE=0 where numpac=p_numpac;
 FSED.insert_gap_trt_suivi(p_id,'PERIODE_RECYCLAGE_0',null,'BATCH','CL');
 -- purger table matricules en recyclage
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge RECYCL)','Purger table matricules en recyclage  pour le numpac : '||P_NUMPAC);
 DELETE from GAP_RECYCL_MATRIC where numpac=p_numpac ;
 DELETE from TGE_MODIF_PACMAT_TORESEND where numpac=p_numpac ;
 DELETE from GAP_SELECTION_PACMAT where nomtraitement='RECYCLAG' and numpac=p_numpac;
 
  --Historiser les periodes rétro max par pacmat 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Histo Periode RETRO MAX)','Historiser les periodes rétro max par pacmat pour le numpac : '||P_NUMPAC);
 
 MERGE INTO GAP_TRT_LISTE_MAT_HISTO T USING
 (select numpac,pacmat,min(periode_retro) as periode_retro from
 (select numpac,pacmat,periode_retro from gap_retro_matric where numpac =p_numpac
  union all
  select numpac,pacmat,periode_retro from gap_selection_retro where numpac =p_numpac
 )group by numpac,pacmat)i ON (i.NUMPAC=t.numpac and  i.PACMAT=t.pacmat and  t.PERIODE_PAIE = p_PERIODEENCOURS) 
 when matched then update
 set RETRO_MAX =i.periode_retro ;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Purge RETRO)','Purger table matricules Rétro  pour le numpac : '||P_NUMPAC);
 -- purger table matricules  RETRO
 if isRetro=1 then
 
 BEGIN
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV TGE_MODIF_PACMAT_RETRO) ','Sauvegarde de la table TGE_MODIF_PACMAT_RETRO avant purge' );
 
 w_req :='Create TABLE TGE_MODIF_PACMAT_RETRO_'||P_PERIODEENCOURS||' as select * from TGE_MODIF_PACMAT_RETRO '  ;
 execute_immediate_string (w_req,0);
 EXCEPTION
 WHEN OTHERS THEN
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (SAV TGE_MODIF_PACMAT_RETRO) ','la table TGE_MODIF_PACMAT_RETRO_'||P_PERIODEENCOURS||' existe déja ' );
 END ;
 --R046 THN 
 DELETE from TGE_MODIF_PACMAT_RETRO z where z.numpac=p_numpac and not exists(select 1 from GAP_TRT_MAL_RECYCLES e  WHERE z.numpac =e.numpac AND z.pacmat=e.pacmat and z.DATE_MAJ>e.DATE_TRT) ;
 DELETE from GAP_RETRO_MATRIC z where z.numpac=p_numpac and not exists (select 1 from TGE_MODIF_PACMAT_RETRO e  WHERE z.numpac =e.numpac AND z.pacmat=e.pacmat);
 DELETE from GAP_RETRO_MATRIC_TRAITE where numpac=p_numpac ;
 DELETE from GAP_SELECTION_RETRO z where  z.numpac=p_numpac   and not exists(select 1 from GAP_TRT_MAL_RECYCLES e  WHERE z.numpac =e.numpac AND z.pacmat=e.pacmat);
 --Fin R046
 DELETE FROM GAP_TRT_MOIS_RETRO where  numpac=p_numpac;
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (Begin Insc Retro RELIQ)','Début d inscription retro des tables RELIQ_  pour le numpac : '||P_NUMPAC);
 tge_retro_inscription_reliq (p_id,p_numpac,p_PERIODEENCOURS);
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (End Insc Retro RELIQ)','Fin d inscription retro des tables RELIQ_ pour le numpac : '||P_NUMPAC);
 END IF;
 -- RSI Le 20/02/2015 DIT 41197 : Supprimer pour le pac en cours des matricules
 -- sélectionnés dans GAP_SELECTION_PACMAT pour les natures de traitements associés à GAPSELMA dans TGE_SCHEMA_PRODUCTION
 DELETE from GAP_SELECTION_PACMAT
 where numpac= p_numpac
 and nomtraitement in (select distinct NATURE from TGE_SCHEMA_PRODUCTION where type_paie =  'GAPSELMA' and date_fin is null and numpac=p_numpac);
  
 --On réactive les triggers pour que la colonne période de paie des incidents soit recalculée
 delete bypass_trg_recycl_on_session;
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (avant alimentation période recueil)','Début de la procédure d''alimentation des périodes de recueil pour le numpac '||P_NUMPAC);
 IF to_char(add_months(to_date(p_PERIODEENCOURS,'yyyymm'), 1),'yyyymm') = P_DEB_RETRO THEN
 	TGE_ALIM_PERIODE_INDIV(p_id, p_numpac, greatest(P_PERIDOE_HISTO_LIMITE,P_DEB_HISTO_RETRO), NULL);
 ELSE
 	TGE_ALIM_PERIODE_INDIV(p_id, p_numpac, TO_CHAR(ADD_MONTHS(TO_DATE(p_periodeencours,'yyyymm'), 1),'YYYYMM'), NULL);
 END IF;
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (après alimentation période recueil)','Fin de la procédure d''alimentation des périodes de recueil pour le numpac '||P_NUMPAC);
 
 --On désactive à nouveau les triggers
 insert into bypass_trg_recycl_on_session(date_event, message) values (sysdate, 'Cloture en cours pour le NUMPAC : ' || p_numpac);
 
 -- recalcul du flag SECUPACMAT.PRESENT_FICHIER_PAIE
 R_PRESENT_FICHIER_PAIE( p_numpac , null );
 
 FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_CLOTURE (end)','Fin de la clôture pour le numpac '||P_NUMPAC);
 FSED.insert_gap_trt_suivi(p_id,'CLOTURE_OK',null,'BATCH','CL');
 
 exception
 when others then
 FSED.FSED_ERREUR(p_id,'TGE_CLOTURE (raise)',P_NUMPAC,SQLCODE||'-'||SQLERRM);
 update SECUPACMAT set PERIODE_RECYCLAGE=1 where numpac=p_numpac;
 raise;
 END TGE_CLOTURE;
##
TAG_CHARSET=@€éèç
##
TGE_CONTROLE_40
=SQL=
create or replace PROCEDURE TGE_CONTROLE_40 ( P_LOGIN IN VARCHAR2
 , P_DATE_IMPORT IN VARCHAR2
 , P_NUMLIGNE IN VARCHAR2
 , P_CODLANG in VARCHAR2
 , P_ISFSED in NUMBER
 ) AS
/********************************************************************************
Version     : V5.05.000
*********************************************************************************/
 cNumeric_Characters varchar2(40);
 cNLS_NUMERIC_CHARACTERS varchar2(40);
 clWhere varchar2(1000);
 req varchar2(2000);
 w_exist_incident VARCHAR2(2000);
 w_err VARCHAR2(2000);
 
 /* Objets utilisés pour le contrôle sur la somme des heures réalisées */
 -- Objet contenant un tableau des lignes par collaborateur par jour avec les sommes des heures réalisées déjà créées (TGE_INCIDENTS_PAIE) et des heures réalisées ajoutées par l'import
 TYPE T_REC IS RECORD (
 numpac varchar2(6),
 paiezad varchar2(8),
 date_effet date,
 somme_heures number,
 somme_heures_trav_import number);
 TYPE typ_tab IS table of T_REC;
 tab typ_tab ;
 -- Plus petite et plus grande date de l'import
 v_dateMinImport varchar2(8);
 v_dateMaxImport varchar2(8);
 varsys varchar2(100);
 
 BEGIN
 
 SELECT substr(TRIM(VALUE),length(TRIM(VALUE)))  INTO cNLS_NUMERIC_CHARACTERS FROM nls_session_parameters where PARAMETER = 'NLS_NUMERIC_CHARACTERS';
 
 clwhere:='login='''||p_login||''' and date_import='''||p_date_import||'''';
 if p_numligne is not null then
 clwhere:=clwhere||' AND NUMLIGNE='||p_numligne;
 end if;
 -- On ne traite que les lignes qui sont en statut TRAIT et TRANS (les autres FIN, ANNULER, ... ne doivent plus être controler
 clwhere:=clwhere || ' AND (STATUT = ''TRAIT''';
 clwhere:=clwhere || ' OR STATUT = ''TRANS'')';
 
 -- Mise à blanc de tous les messages d'erreur des lignes qui vont être contrôlées
 IF p_login='BATCH' THEN
 req:='update TGE_IMPORT_INCIDENTS I SET ERREURS = '''' WHERE '||clwhere;
EXECUTE_IMMEDIATE_STRING (req,0);
 END IF;
 
 -- Numpac non vide
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00077',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND NUMPAC is null  ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- PAIEZAD non vide
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00078',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND PAIEZAD is null  ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- PERIODE non vide
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00010',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND PERIODE is null ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- TYPE_TRAITEMENT non vide
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00079',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND TYPE_TRAITEMENT is null  ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- DATE_DEBUT non vide
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00108',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND DATE_DEBUT is null  ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- DATE_FIN non vide
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00109',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND DATE_FIN is null  ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 
 -- NUMPAC controle format
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00072',p_codlang),'''','''''')||''',NUMPAC,'''||p_codlang||''') where '||clwhere||' AND  NVL(LENGTH(NUMPAC),0)>6 ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 ---controleLigneImportIncidentVide(TGE_IMPORT_INCIDENTS_sgbd p_importIncident, ArrayList<GxpErreurWithParams> p_arrErreurs)INCI0025
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','INCI0025',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') where '||clwhere||' AND CODE_IP is null AND HEURES_IP IS NULL AND HEURES_TRAV IS NULL ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- PAIEZAD >8 cara
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00073',p_codlang),'''','''''')||''',PAIEZAD,'''||p_codlang||''') where '||clwhere||' AND NVL(LENGTH(PAIEZAD),0)>8  ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- PERIODE format date OK
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00083',p_codlang),'''','''''')||''',PERIODE||''|yyyyMM'','''||p_codlang||''') WHERE '||clwhere||' AND (IS_DATE(PERIODE ,''yyyyMM'') =0)' ;
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- DATE_DEBUT format date OK
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00110',p_codlang),'''','''''')||''',DATE_DEBUT||''|yyyyMMdd'','''||p_codlang||''') WHERE '||clwhere||' AND (IS_DATE(DATE_DEBUT ,''yyyyMMdd'') =0) ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- DATE_FIN format date OK
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00111',p_codlang),'''','''''')||''',DATE_FIN||''|yyyyMMdd'','''||p_codlang||''') WHERE '||clwhere||' AND IS_DATE(DATE_FIN ,''yyyyMMdd'') =0 ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- HEURES_TRAV controle 1 numerique
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00112',p_codlang),'''','''''')||''',HEURES_TRAV,'''||p_codlang||''') WHERE '||clwhere||' AND TGE_CONTROLE_HEURE_TRAV ( HEURES_TRAV, 3, 2,'''||cNLS_NUMERIC_CHARACTERS||''')=0 ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- HEURES_IP controle 1 numerique
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00113',p_codlang),'''','''''')||''',HEURES_IP,'''||p_codlang||''') WHERE '||clwhere||' AND TGE_CONTROLE_HEURE_TRAV ( HEURES_IP, 3, 2,'''||cNLS_NUMERIC_CHARACTERS||''')=0 ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 --ORIGINE
 req:='update TGE_IMPORT_INCIDENTS INC SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00331',p_codlang),'''','''''')||''',INC.ORIGINE||''|''||INC.NUMPAC ,'''||p_codlang||''') WHERE '||clwhere;
 req:= req || ' and INC.ORIGINE is not null';
 req:= req || ' and not exists (select 1 from TGE_REF_ORIGINE_GTA G where G.CODE_ORIGINE = INC.ORIGINE and G.NUMPAC = INC.NUMPAC)';
 EXECUTE_IMMEDIATE_STRING( req,0);
 
 --ORIGINE (lig 1968)
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00100',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND (ORIGINE IS NOT NULL AND LENGTH(ORIGINE) >1) ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 --ORIGINE
  IF P_LOGIN ='BATCH' THEN 
  req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00225',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND ((ORIGINE IS NOT NULL AND ORIGINE = ''T'') OR (ORIGINE is null)) ';
  EXECUTE_IMMEDIATE_STRING( req,0);
  else if P_ISFSED=1 then
  req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00225',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND ((ORIGINE IS NOT NULL AND ORIGINE = ''T'') OR (ORIGINE is null)) ';
  EXECUTE_IMMEDIATE_STRING( req,0);
  END IF;
  END IF;
 
 -- CONTROLES EXISTENCES
 -- TYPE_TRAITEMENT (Lig 1971)
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00101',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''')';
 req:= req || ' WHERE '||clwhere||' AND ii.TYPE_TRAITEMENT IS NOT NULL AND NOT ';
 req:= req || '(';
 req:= req ||   '( exists  (SELECT RT.CODETYPTRT FROM TGE_REF_TYPETRT RT WHERE rt.numpac=ii.numpac and ii.type_traitement =RT.CODETYPTRT) )';
 req:= req || ' OR ';
 req:= req ||   '( exists (SELECT RT.CODETYPTRT FROM TGE_REF_TYPETRT RT WHERE rt.numpac=''*'' AND RT.codetyptrt= ii.type_traitement and ii.type_traitement =RT.CODETYPTRT AND NOT EXISTS (SELECT 1 FROM TGE_REF_TYPETRT RT2 WHERE RT2.NUMPAC=ii.numpac)))';
 req:= req || ')  ' ;
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- CODE_IMPUTATION (Lig 1972)
 
 select valvar into varsys from sys_varsys where module='TGE' and CODVAR='CTRL_CODE_IMPUTATION_EXISTE';
 if upper(varsys)<>'FALSE' then
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00012',p_codlang),'''','''''')||''',ii.code_imputation||''|''||ii.numPac,'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' and ii.code_imputation<>''*'' AND  ii.code_imputation IS NOT NULL AND NOT ';
 req:= req || '(';
 req:= req ||   '( exists (SELECT ri.codeimp FROM TGE_REF_IMPUTATION ri WHERE ri.numpac = ii.numpac and ri.codeimp=ii.code_imputation))';
 req:= req || ' OR ';
 req:= req ||   '(exists  (SELECT ri.codeimp FROM TGE_REF_IMPUTATION ri WHERE ri.numpac=''*'' AND  ri.codeimp=ii.code_imputation and ri.codeimp= ii.code_imputation AND NOT EXISTS (SELECT 1 FROM TGE_REF_IMPUTATION rt2 WHERE rt2.numpac=ii.numpac and rt2.codeimp= ii.code_imputation)))';
 req:= req || ')  ' ;
  EXECUTE_IMMEDIATE_STRING( req,0);
 end if;
 
 -- CODE_IP (Lig 1973)INCI0012
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','INCI0012',p_codlang),'''','''''')||''',code_ip,'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' AND ii.code_ip IS NOT NULL AND NOT ';
 req:= req || '(';
 req:= req ||   ' ( exists (SELECT * FROM TGE_REF_PRE rp WHERE ii.code_ip=rp.code_incident and rp.numpac = ii.numpac ) )';
 req:= req || ' OR ';
 req:= req ||   '(exists (SELECT * FROM TGE_REF_PRE rp WHERE ii.code_ip=rp.code_incident and rp.numpac=''*'' AND rp.code_incident=ii.code_ip AND NOT EXISTS (SELECT 1 FROM TGE_REF_PRE rp2 WHERE rp2.numpac=ii.numpac and ii.code_ip=rp2.code_incident)))';
 req:= req || ') ' ;
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- Contrôles spécifiques
 -- Date_Debut Date_Fin (lig 1977)
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00118',p_codlang),'''','''''')||''',to_char(to_date(date_debut, ''yyyymmdd''), ''dd.mm.yyyy'')||''|''||to_char(to_date(date_fin, ''yyyymmdd''), ''dd.mm.yyyy''),'''||p_codlang||''') WHERE '||clwhere||' AND  date_debut > date_fin ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 
 -- HEURES_TRAV TYPE_HEURE (lig 1978)
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00114',p_codlang),'''','''''')||''',type_heure,'''||p_codlang||''') WHERE '||clwhere||' AND heures_trav IS NOT NULL AND type_heure NOT IN (''T'',''R'') ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00115',p_codlang),'''','''''')||''',type_heure,'''||p_codlang||''') WHERE '||clwhere||' AND heures_trav IS NULL AND type_heure IS NOT NULL ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- CODE_IP HEURE_IP (lig 1979)
 /*req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00138',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND code_ip IS NOT NULL AND heures_ip IS NULL ';
  EXECUTE_IMMEDIATE_STRING( req,0);*/
 
 -- DOMAINE_IMP ligne 1980
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00119',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND (DOMAINE_IMP IS NOT NULL AND CODE_IMPUTATION IS NULL) ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00120',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND code_imputation IS NOT NULL AND heures_trav IS NOT NULL AND heures_ip IS NOT NULL AND domaine_imp != ''H'' AND domaine_imp !=''1'' ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00121',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND code_imputation IS NOT NULL AND heures_trav IS NOT NULL AND heures_ip IS NULL AND domaine_imp != ''H'' ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00122',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND code_imputation IS NOT NULL AND heures_ip IS NOT NULL AND heures_trav IS NULL AND domaine_imp != ''1'' ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 req:='update TGE_IMPORT_INCIDENTS SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00136',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') WHERE '||clwhere||' AND code_imputation IS NOT NULL AND heures_trav IS NULL AND heures_ip IS NULL AND domaine_imp != ''1'' ';
  EXECUTE_IMMEDIATE_STRING( req,0);
  
 -- controle date début incident avec les dates de bébut et fin contrat 
req:='update TGE_IMPORT_INCIDENTS ii  SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00358',p_codlang),'''','''''')||''',date_debut,'''||p_codlang||''')';
req:= req || ' where '||clwhere||'' ; 
req:= req || ' and (not exists(SELECT 1 FROM DIC_ADM_CONTRAT_SITU DACS WHERE DACS.NUMPAC=ii.NUMPAC and DACS.PAIEZAD=ii.PAIEZAD';
req:= req || ' and TO_DATE(ii.DATE_DEBUT, ''YYYYMMDD'') between DACS.DSDSC and DACS.DSFSC))';
EXECUTE_IMMEDIATE_STRING( req,0);
 
 --ctrl if heure contenuHeures(String p_heures, String p_type_ip, ArrayList<GxpErreurWithParams> p_arrErreurs) INCI0024
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||REPLACE(get_message_erreur('TGE','INCI0024',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' AND (((Ii.heures_ip IS NOT NULL OR Ii.code_ip is not null ) AND Ii.code_ip = ''HP'' AND II.heures_ip is null)
     OR (ii.HEURES_TRAV is null  AND ii.type_heure  in (''T'',''R''))
     ) ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 --ToolsTge_controles.controleAutorisationPaieZad(p_loginUserOrDelegator, p_unIncident.numPac, p_unIncident.paieZad, arrErreurs);STD00049
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('STD','STD00049',p_codlang),'''','''''')||''',paiezad||''|''||numpac,'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' AND ii.paiezad IS NOT NULL AND ii.numpac is not null AND NOT ';
 req:= req || '(';
 req:= req ||   ' ( exists (SELECT * from DIC_ADM_CONTRAT C WHERE C.NUMPAC =ii.numpac and C.CURRENT_PAIEZAD =ii.paiezad and c.numpac in (select numpac from TGE_REF_PAC where numpac = c.numpac and not nvl(mpe,''N'')=''N'')) )';
 req:= req || ' OR ';
 req:= req ||   '(exists (SELECT * from DIC_ADM_CONTRAT C ,SECUPACMAT S  WHERE C.NUMPAC = S.NUMPAC and C.PACMAT = S.PACMAT and C.NUMCNT = S.CURRENT_NUMCNT AND C.NUMPAC =ii.numpac and C.CURRENT_PAIEZAD =ii.paiezad and c.numpac in (select numpac from TGE_REF_PAC where numpac = c.numpac and nvl(mpe,''N'')=''N'')) )';
 req:= req || ') ' ;
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 --controleHoraireTheorique(p_unIncident, arrErreurs, p_transac); INCI0020 DIT 37186
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||REPLACE(get_message_erreur('TGE','INCI0020',p_codlang),'''','''''')||''',type_heure,'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' AND  ii.code_IP =''HP'' AND ii.code_imputation IS NOT NULL ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 --controleDateDebutFin(p_code_ip,p_date_debut,p_date_fin,p_arrErreurs); TGE00226 DIT 37186
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||REPLACE(get_message_erreur('TGE','TGE00226',p_codlang),'''','''''')||''',to_char(to_date(date_debut, ''yyyymmdd''), ''dd.mm.yyyy'')||''|''||to_char(to_date(date_fin, ''yyyymmdd''), ''dd.mm.yyyy''),'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' AND  ii.code_IP =''HP'' AND ii.DATE_FIN !=  ii.DATE_DEBUT ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 --controleCode_ip; INCI0027 DIT 37186
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||REPLACE(get_message_erreur('TGE','INCI0027',p_codlang),'''','''''')||''',code_ip,'''||p_codlang||''') ';
 req:= req || ' WHERE '||clwhere||' AND  ii.type_heure != ''T'' AND  ii.type_heure != ''R''  AND (ii.CODE_IP =''HP'' OR ii.CODE_IP =''HT'') ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
  -- controle saisie en demi journée DIT 42237
 req:='update TGE_IMPORT_INCIDENTS ii SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00264',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''') ';
 req:= req || ' where '||clwhere||' AND ii.CODE_IP  IS NOT NULL AND ii.CODE_IP != ''HP'' AND ii.DATE_DEBUT is not null and ii.DATE_FIN is not null  and ii.DATE_DEBUT!=ii.DATE_FIN ';
 req := req || 'AND ( exists (SELECT * FROM TGE_REF_PRE rp WHERE ii.code_ip=rp.code_incident and rp.numpac = ii.numpac AND rp.OPTION_CONSERV_HISTO =''A'' AND rp.UNITE=''J'') ) AND is_number(ii.HEURES_IP)=0.5 ';
 
  EXECUTE_IMMEDIATE_STRING( req,0);
 
  -- controle saisie du volume different de 0 ou 1 DIT 42237
 req:='update TGE_IMPORT_INCIDENTS ii  SET ERREURS=TGE_GET_MESSAGE_ERREUR(ERREURS,'''||replace(get_message_erreur('TGE','TGE00265',p_codlang),'''','''''')||''',NULL,'''||p_codlang||''')'; 
 req:= req || ' where '||clwhere||' AND ii.CODE_IP  IS NOT NULL AND ii.CODE_IP != ''HP'' ';
 req := req || 'AND ( exists (SELECT * FROM TGE_REF_PRE rp WHERE ii.code_ip=rp.code_incident and rp.numpac = ii.numpac AND rp.OPTION_CONSERV_HISTO =''A'' AND rp.UNITE=''J'') ) AND is_number(ii.HEURES_IP)!=0 AND is_number(ii.HEURES_IP)!=1  AND is_number(ii.HEURES_IP)!=0.5 ';
  EXECUTE_IMMEDIATE_STRING( req,0);
 
 -- Bloquer les imports carte 40 sur des périodes antérieures à la date de limite de rétro
 req:='MERGE INTO TGE_IMPORT_INCIDENTS II USING ';
 req:= req ||' (SELECT NUMPAC, PERIODEENCOURS, DEB_RETRO, DEB_HISTO_RETRO, NB_MOIS_RETRO, ';
 req:= req ||'  GREATEST(NVL(DEB_HISTO_RETRO, ''190001''), (TO_CHAR(ADD_MONTHS(TO_DATE(PERIODEENCOURS, ''YYYYMM''), -NB_MOIS_RETRO), ''YYYYMM''))) AS LIMITE_RETRO ';
 req:= req ||' FROM TGE_REF_PAC ) P';
 req:= req ||' ON (';
 req:= req || clwhere;
 req:= req ||' AND II.NUMPAC = P.NUMPAC';
 req:= req ||' AND II.PERIODE < P.PERIODEENCOURS';
 req:= req ||' AND ( P.DEB_RETRO IS NOT NULL AND P.DEB_RETRO <= P.PERIODEENCOURS';
 req:= req ||' ) ) WHEN MATCHED THEN UPDATE SET II.ERREURS = CASE';
 req:= req ||' WHEN II.PERIODE < P.DEB_HISTO_RETRO THEN TGE_GET_MESSAGE_ERREUR(II.ERREURS,'''||replace(get_message_erreur('TGE','TGE00336',p_codlang),'''','''''')||''',TO_CHAR(TO_DATE(P.DEB_HISTO_RETRO, ''YYYYMM''), ''MM.YYYY''),'''||p_codlang||''')';
 req:= req ||' WHEN II.PERIODE < P.LIMITE_RETRO THEN TGE_GET_MESSAGE_ERREUR(II.ERREURS,'''||replace(get_message_erreur('TGE','TGE00337',p_codlang),'''','''''')||''',TO_CHAR(TO_DATE(P.LIMITE_RETRO, ''YYYYMM''), ''MM.YYYY''),'''||p_codlang||''')';
 req:= req ||' END WHERE II.ERREURS IS NULL';
 EXECUTE_IMMEDIATE_STRING(req, 0);
 
 -- Bloquer en mode non rétro les imports carte 40 sur des périodes antérieures à la période en cours
 req := 'MERGE INTO TGE_IMPORT_INCIDENTS II USING TGE_REF_PAC P ON( '|| clwhere;
 req := req || ' AND II.NUMPAC = P.NUMPAC';
 req := req || ' AND P.PERIODEENCOURS IS NOT NULL ';
 req := req || ' AND (P.DEB_RETRO > P.PERIODEENCOURS OR P.DEB_RETRO IS NULL) ';
 req := req || ' AND II.PERIODE < P.PERIODEENCOURS) ';
 req := req || ' WHEN MATCHED THEN UPDATE ';
 req := req || ' SET II.ERREURS = TGE_GET_MESSAGE_ERREUR(II.ERREURS, ''' || replace(get_message_erreur('TGE', 'TGE00351', p_codlang), '''', '''''') || ''', NULL, ''' || p_codlang || ''')';
 req := req || ' WHERE II.ERREURS IS NULL';
 EXECUTE_IMMEDIATE_STRING(req, 0);
 
 EXCEPTION
 WHEN OTHERS THEN
 	IF (P_LOGIN != 'BATCH') THEN
 		-- On remonte l'erreur à l'application
  		raise;
  	END IF;
 END TGE_CONTROLE_40;
##
TGE_INSERT_RELIQ
=SQL=
CREATE OR REPLACE PROCEDURE TGE_INSERT_RELIQ (P_ID IN NUMBER,P_NUMPAC IN VARCHAR2 , P_PERIODE IN VARCHAR2 ,is_RETRO NUMBER) AS 
/********************************************************************************
Version     : V5.05.000
*********************************************************************************/
BEGIN
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_INSERT_RELIQ (Begin)','Début insertion pour le numpac : '||P_NUMPAC);
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_INCIDENTS_PAIE','Insertion dans TGE_RELIQ_INCIDENTS_PAIE à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_INCIDENTS_PAIE 
  (ID,NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_IP,CODE_IP,DATE_EFFET,CODE_IMPUTATION,HEURES,
   ORIGINE,LOGIN_CREATE,DATE_CREATE,ROLE_CREATE,ORIGINE_CREATE,LOGIN_MAJ,DATE_MAJ,ROLE_MAJ,ORIGINE_MAJ,
   CLE_IMPORT,CLE_ABSENCE,IDPACMAT,ENVOYE,TYPE_WRITER,JOUR_OUVRABLE,JOUR_OUVRE,JOUR_OEUVRE,JOUR_CALENDAIRE)
  select ID,NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_IP,CODE_IP,DATE_EFFET,CODE_IMPUTATION,HEURES,
         ORIGINE,LOGIN_CREATE,DATE_CREATE,ROLE_CREATE,ORIGINE_CREATE,LOGIN_MAJ,DATE_MAJ,ROLE_MAJ,ORIGINE_MAJ,
         CLE_IMPORT,CLE_ABSENCE,IDPACMAT,ENVOYE,TYPE_WRITER,JOUR_OUVRABLE,JOUR_OUVRE,JOUR_OEUVRE,JOUR_CALENDAIRE
  FROM TGE_INCIDENTS_PAIE
  WHERE NUMPAC = P_NUMPAC 
  AND   to_date(periode) <= to_date(P_PERIODE,'yyyymm')
  AND nvl(ACTION_RETRO,'H') != 'H';
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_DONNEES_PAIE','Insertion dans  TGE_RELIQ_DONNEES_PAIE à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_DONNEES_PAIE 
  (NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_DONNEE,CODE_RUBRIQUE,CODE_CAISSE,NO_SEQUENCE,SENS,CODE_IMPUTATION,
   ORIGINE,NOMBRE,TAUX,MONTANT,POURCENTAGE,DOMAINE_PRCTE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,
   PERIODE_RATTACH_DEB,PERIODE_RATTACH_FIN,DATE_DEB_ARRET,TYPE_WRITER,PERIODE_AFFECTATION,CODE_REMPLACEMENT)
   
  select NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,TYPE_DONNEE,CODE_RUBRIQUE,CODE_CAISSE,NO_SEQUENCE,SENS,CODE_IMPUTATION,
         ORIGINE,NOMBRE,TAUX,MONTANT,POURCENTAGE,DOMAINE_PRCTE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,
         PERIODE_RATTACH_DEB,PERIODE_RATTACH_FIN,DATE_DEB_ARRET,TYPE_WRITER,PERIODE_AFFECTATION,CODE_REMPLACEMENT
  FROM TGE_DONNEES_PAIE
  WHERE NUMPAC = P_NUMPAC 
  AND   periode  <=P_PERIODE
  AND nvl(ACTION_RETRO,'H') != 'H';
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_ELEMENTS_PAIE','Insertion dans  TGE_RELIQ_ELEMENTS_PAIE à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_ELEMENTS_PAIE 
  (NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,CODE_ELEMENT,INDICATIF,ORIGINE,SENS,VALEUR,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,TYPE_WRITER,CODE_REMPLACEMENT)
  select NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,CODE_ELEMENT,INDICATIF,ORIGINE,SENS,VALEUR,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,CLE_IMPORT,IDPACMAT,TYPE_WRITER,CODE_REMPLACEMENT
  FROM TGE_ELEMENTS_PAIE
  WHERE NUMPAC = P_NUMPAC 
  AND   periode  <=P_PERIODE
  AND nvl(ACTION_RETRO,'H') != 'H';
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_IMPUTATIONS','Insertion dans  TGE_RELIQ_IMPUTATIONS à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  INSERT INTO TGE_RELIQ_IMPUTATIONS 
  (NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,IMPUTATION,NO_SEQUENCE,ORIGINE,NB_UNITE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,IDPACMAT,TYPE_WRITER)
  select NUMPAC,PAIEZAD,PERIODE,TYPE_TRAITEMENT,IMPUTATION,NO_SEQUENCE,ORIGINE,NB_UNITE,DERNIER_CODE_OPE,LOGIN_MAJ,DATE_MAJ,IDPACMAT,TYPE_WRITER
  FROM TGE_IMPUTATIONS
  WHERE NUMPAC = P_NUMPAC 
  AND   periode  <=P_PERIODE;
  
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_RELIQ_PACMAT_TORESEND','Insertion dans  TGE_RELIQ_PACMAT_TORESEND à la période '|| P_PERIODE ||' et pour le numpac '|| P_NUMPAC);
  --tge_podif_pamat -retro des mal recycle 
  INSERT INTO TGE_RELIQ_PACMAT_TORESEND 
  (NUMPAC,PACMAT,TABLE_TO_SEND,DATE_MAJ)
  select  NUMPAC,PACMAT,TABLE_TO_SEND,DATE_MAJ
  FROM TGE_MODIF_PACMAT_TORESEND
  WHERE NUMPAC = P_NUMPAC ;
  IF is_RETRO =1 THEN 
  INSERT INTO TGE_RELIQ_PACMAT_TORESEND_RETRO
  WITH LISTE_DICOZ (element) AS ( select element from tge_ref_dicoz where numpac =P_NUMPAC and calcul_RETRO=1),
  LIST_TABLEGXP (tablegxp) as (
  SELECT tablegxp  FROM TGE_REF_MAPDO mapdo ,LISTE_DICOZ dicoz WHERE NUMPAC =P_NUMPAC and mapdo.element =dicoz.element
  UNION ALL 
  SELECT tablegxp  FROM TGE_REF_MAPDO mapdo ,LISTE_DICOZ dicoz WHERE NUMPAC ='*' and mapdo.element =dicoz.element
  AND TABLEGXP not in( select TABLEGXP  from TGE_REF_MAPDO mapdo ,LISTE_DICOZ dicoz  WHERE NUMPAC =P_NUMPAC and mapdo.element =dicoz.element ))

   SELECT * FROM TGE_RELIQ_PACMAT_TORESEND WHERE NUMPAC = P_NUMPAC AND TABLE_TO_SEND IN (SELECT TABLEGXP FROM LIST_TABLEGXP);
  END IF;
  FSED.FSED_AVANCEMENT_PLSQL(p_id,'TGE_INSERT_RELIQ (End)','Fin insertion pour le numpac : '||P_NUMPAC);
END TGE_INSERT_RELIQ;
##
TRG_GAP_TRT
=SQL=
CREATE OR REPLACE TRIGGER TRG_GAP_TRT FOR INSERT OR UPDATE ON GAP_TRT COMPOUND TRIGGER

 v_matric varchar2(6);
 v_ligOld GAP_TRT%ROWTYPE;
 v_ligNew GAP_TRT%ROWTYPE;
 v_periode varchar2(6);
 v_event varchar2(4000);
 v_nature VARCHAR2(32);
 v_date_fin_trait DATE;
 v_nature_varsys varchar2(4000);
 BEFORE EACH ROW IS BEGIN
 IF INSERTING THEN
 -- On initialise le 'OLD' (car :OLD n'existe pas, en insertion)
 v_ligOld := NULL; 
 ELSE
 v_ligOld.NUMPAC := :OLD.NUMPAC;
 v_ligOld.DATE_FIN_TRT  := :OLD.DATE_FIN_TRT ;
 v_ligOld.PERIODE_PAIE   := :OLD.PERIODE_PAIE  ;
 v_ligOld.NATURE   := :OLD.NATURE  ;
  END IF;
 v_ligNew.NUMPAC := :NEW.NUMPAC;
 v_ligNew.DATE_FIN_TRT := :NEW.DATE_FIN_TRT;
 v_ligNew.PERIODE_PAIE := :NEW.PERIODE_PAIE;
 v_ligNew.NATURE   := :NEW.NATURE  ;
 
select NVL(VALVAR, ' ') into v_nature_varsys from sys_varsys where module='MP' and codvar='MP_NOTIF_RESPAIE';
 v_matric := NVL(v_ligNew.NUMPAC,v_ligOld.NUMPAC);
 v_nature := NVL(v_ligNew.NATURE,v_ligOld.NATURE);
 v_date_fin_trait := NVL(v_ligNew.DATE_FIN_TRT,v_ligOld.DATE_FIN_TRT);
 v_event :='payrollProcessingJob.status.change';
 v_periode := to_char(to_date(NVL(v_ligNew.PERIODE_PAIE,v_ligOld.PERIODE_PAIE),'YYYYMM'), 'MMYYYY')  ;
 -- DEBUT TRAITEMENT MP NOTIF TR
IF  v_date_fin_trait IS NOT NULL AND v_nature = v_nature_varsys AND (v_nature = 'RN' OR v_nature = 'Z4CONLOT')  THEN
 MERGE INTO MP_EVENTS DE
 USING (SELECT v_matric AS MATRIC,v_event AS EVENT, v_periode AS CLE_SECONDAIRE FROM DUAL) Z
 ON (Z.MATRIC=DE.MATRIC AND Z.EVENT=DE.EVENT AND Z.CLE_SECONDAIRE=DE.CLE_SECONDAIRE)
 WHEN NOT MATCHED THEN INSERT (MATRIC,EVENT,CLE_SECONDAIRE,ACTION,DATE_MODIF) VALUES (v_matric,v_event,v_periode,'C',CURRENT_TIMESTAMP);
 END IF;
 -- FIN TRAITEMENT TRAITEMENT MP NOTIF TR
 END BEFORE EACH ROW; 
 END TRG_GAP_TRT;
##
TAG_CHARSET=@€éèç
##
DOC_CONTAINER_METADATA_VIEW
=SQL=
CREATE OR REPLACE FORCE VIEW DOC_CONTAINER_METADATA_VIEW (DOC_ID, DOC_TYPE, PAC, ETAB, PACMAT, PAIEZAD, COMPANY_ID, ASSOCIATE_ID, PERIODE_PAIE, EXERCICE, MOTEUR_PAIE, BULLETIN_REF, IMPORT_REF, PERIODE_PAIE_SIMUL, GRP_EDIT, NUM_ECH, ANNEXE_INC, ANNEXE_LABEL, NOM, PRENOM) AS SELECT D.DOC_ID, D.DOC_TYPE, D.PAC, D.ETAB, D.PACMAT, D.PAIEZAD, D.COMPANY_ID, D.ASSOCIATE_ID, D.PERIODE_PAIE, D.EXERCICE, D.MOTEUR_PAIE, D.BULLETIN_REF, D.IMPORT_REF, D.PERIODE_PAIE_SIMUL, SUBSTR(D.GRP_EDIT, 0, INSTR(D.GRP_EDIT, '.', 1) - 1) GRP_EDIT, D.NUM_ECH, D.ANNEXE_INC, D.ANNEXE_LABEL, NOM, PRENOM FROM SECUMATRIC S RIGHT JOIN DOC_CONTAINER_METADATA D ON S.NUMPAC = D.PAC AND S.PACMAT = D.PACMAT
##
TAG_CHARSET=@€éèç
##
SYS_USR_AOID_MATRIC_UNIQUE
=SQL=
CREATE OR REPLACE FORCE VIEW SYS_USR_AOID_MATRIC_UNIQUE (AOID, MATRIC) AS 
SELECT DISTINCT FIRST_VALUE(AOID) OVER (PARTITION BY MATRIC ORDER BY CASE WHEN AOID LIKE '%-%' THEN 1 ELSE 2 END, AOID) AS AOID, MATRIC FROM (
  SELECT AOID, MATRIC FROM SYS_USR_AOID_MATRIC WHERE MATRIC IS NOT NULL 
  UNION ALL 
  SELECT LOGIN AS AOID, REQUETEMATRIC AS MATRIC FROM SYS_USR_CONFIG WHERE REQUETEMATRIC IS NOT NULL AND REQUETEMATRIC NOT IN (SELECT MATRIC FROM SYS_USR_AOID_MATRIC WHERE MATRIC IS NOT NULL)
)
##
TAG_CHARSET=@€éèç
##
TIERS_ENVOIS_MQ_VIEW
=SQL=
CREATE OR REPLACE FORCE EDITIONABLE VIEW TIERS_ENVOIS_MQ_VIEW ("NUMPAC", "NATURE", "PERIODE", "PAIEZAD", "CODE_CHRONO", "NOM", "PRENOM", "NUMERO", "REFERENCE", "MONTANT", "LIBELLE", "BENEFICIAIRE", "DOMICILIATION", "IBAN1", "IBAN2", "IBAN3", "BIC", "CODE_BQE", "DATE_PAIEMENT", "CODSTE", "CODETB", "POP_GFF", "TYPE") AS 
 SELECT TIERS_NUMPAC,
 RPAD(NAT_PAIEMENT,4,' '),
 TO_CHAR(TIERS_MOIS_PAIE,'YYYYMM'),
 TIERS_PAIEZAD,
 RPAD(NVL(TIERS_CODE_CHRONO,' '),6,' '),
 RPAD(NVL(TIERS_NOM,' '),30,' '),
 RPAD(NVL(TIERS_PRENOM,' '),20,' '),
 LPAD(TIERS_NUMERO,2,'0'),
 RPAD(NVL(TIERS_NUM_DOS,' '),15,' '),
 LPAD(TIERS_MONTANT*100,9,0),
 RPAD(NVL(TIERS_LIBELLE,' '),35,' '),
 RPAD(NVL(TIERS_BENEFICIAIRE,' '),30,' '),
 RPAD(NVL(TIERS_DOM_BQE,' '),24,' '),
 RPAD(NVL(SUBSTR(TIERS_IBAN, 0, 2),' '),2,' '),
 RPAD(NVL(SUBSTR(TIERS_IBAN, 3, 5),' '),2,' '),
 RPAD(NVL(SUBSTR(TIERS_IBAN, 5, 34),' '),30,' '),
 RPAD(NVL(TIERS_BIC,' '),11,' '),
 LPAD(NVL(TIERS_CODE_BQE,'0'),3,'0'),
 TO_CHAR(TIERS_DATE_VIREMENT,'YYYYMMDD'),
 RPAD(NVL(TIERS_CODSTE,' '),2,' '),
 RPAD(NVL(TIERS_CODETB,' '),5,' '),
 RPAD(NVL(TIERS_POP_GFF,' '),5,' '),
 TIERS_TYPE
 FROM DIC_PAIEMENT_TIERS
 JOIN TIERS_RUB_TRANSCO
 ON TIERS_NUMPAC   =NUMPAC
 AND TIERS_CODRUB  =CODRUB
 WHERE TIERS_ACTIF ='O'
 AND TIERS_STATUT IS NULL
##
TAG_CHARSET=@€éèç
##
DIC_TGE_RESPAIE_CUMASO
=SQL IFNOTEXIST=DIC_TGE_RESPAIE_CUMASO=MTS59=
ALTER TABLE DIC_TGE_RESPAIE_CUMASO ADD (MTS59 NUMBER(13,2))
##
DIC_TGE_RESPAIE_HISTO
=SQL IFNOTEXIST=DIC_TGE_RESPAIE_HISTO=MD_SALFIX=
ALTER TABLE DIC_TGE_RESPAIE_HISTO ADD (MD_SALFIX NUMBER(7,2))
##
DIC_TGE_RESPAIE_HISTO
=SQL IFNOTEXIST=DIC_TGE_RESPAIE_HISTO=MD_SALNET=
ALTER TABLE DIC_TGE_RESPAIE_HISTO ADD (MD_SALNET NUMBER(3,2))
##
DIC_TGE_RESPAIE_HISTO
=SQL IFNOTEXIST=DIC_TGE_RESPAIE_HISTO=MD_PAT=
ALTER TABLE DIC_TGE_RESPAIE_HISTO ADD (MD_PAT NUMBER(9,2))
##
DIC_TGE_RESPAIE_HISTO
=SQL IFNOTEXIST=DIC_TGE_RESPAIE_HISTO=MD_IDENTIFIANT=
ALTER TABLE DIC_TGE_RESPAIE_HISTO ADD (MD_IDENTIFIANT VARCHAR2(11 BYTE))
##
DIC_TGE_RESPAIE_HISTO
=SQL IFNOTEXIST=DIC_TGE_RESPAIE_HISTO=MD_EKEY=
ALTER TABLE DIC_TGE_RESPAIE_HISTO ADD (MD_EKEY VARCHAR2(8 BYTE))
##
DOC_CONTAINER_METADATA
=SQL IFEXIST=DOC_CONTAINER_METADATA=MATRIC=
ALTER TABLE DOC_CONTAINER_METADATA RENAME COLUMN PACMAT TO PAIEZAD 
##
DOC_CONTAINER_METADATA
=SQL IFEXIST=DOC_CONTAINER_METADATA=MATRIC=
ALTER TABLE DOC_CONTAINER_METADATA RENAME COLUMN MATRIC TO PACMAT 
##
DOC_CONTAINER_METADATA
=SQL=
UPDATE DOC_CONTAINER_METADATA SET PACMAT = NULL WHERE DOC_TYPE = 'photo-profil'
##
MP_EVENTS
=SQL IFEXIST=MP_EVENTS=
DELETE FROM MP_EVENTS WHERE EVENT = 'payrollProcessingJob.status.change'
##
MP_REF_EVENTS
==
delete from MP_REF_EVENTS where EVENT = '/events/hr/v1/worker.work-assignment.modify/terminate'
##
MP_REF_EVENTS
==
UPDATE MP_REF_EVENTS SET OP_NUM=53803 WHERE EVENT='/events/hr/v1/worker.work-assignment.terminate' AND OP_NUM IS NULL
##
MP_REF_EVENTS
==
UPDATE MP_REF_EVENTS SET OP_NUM=50317 WHERE EVENT='/events/hr/v1/worker.work-assignment.assigned-work-location.change' AND OP_NUM IS NULL
##
REF_OBJ_LIVRABLES
=SQL IFEXIST=REF_OBJ_LIVRABLES=GENERATIONDA=
ALTER TABLE REF_OBJ_LIVRABLES MODIFY (GENERATIONDA VARCHAR2(2 BYTE))
##
TAG_CHARSET=@€éèç
##
STD_STRUC_ENTITE
=SQL IFEXIST=STD_STRUC_ENTITE=NUMPAC=
alter table STD_STRUC_ENTITE modify (NUMPAC varchar2(700))
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODMOD = 'ADM' and CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and  CODERR in ('DOCSV068','DOCSV069','DOCSV070') 
'DOCSV068','ADM','fr_fr','0','La conversion  est en cours de traitement, veuillez rafraîchir l''écran','1'
'DOCSV069','ADM','fr_fr','0','Le pdf chargé n''est pas valide','1'
'DOCSV070','ADM','fr_fr','0','La conversion par docserver a échouée','1'
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODMOD = 'TGE' and CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and CODERR in ('TGE00355','TGE00356','TGE00357')
'TGE00355','TGE','fr_fr',0,'Impossible de modifier le PAC associé à cette entité, car un ou plusieurs collaborateurs y sont affectés',1
'TGE00356','TGE','fr_fr',0,'Impossible de supprimer le(s) PAC(s) suivant(s) de la liste des PACs de l''entité, car un ou plusieurs collaborateurs y sont affectés : # ',1
'TGE00357','TGE','fr_fr',0,'Cette entité a été supprimée des VR pour le(s) PAC(s) suivant(s) : # ',1
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODMOD = 'STD' and CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and CODERR in ('ADMPD175','ADMPD176','ADMPD177','ADMPD178')
'ADMPD175','STD','fr_fr',0,'La valeur # n''existe pas pour le champ #',1
'ADMPD176','STD','fr_fr',0,'Au moins l''une des valeurs de la liste # n''existe pas pour le champ #',1
'ADMPD177','STD','fr_fr',0,'Le nombre maximum de valeurs que vous pouvez sélectionner pour la donnée # est : #',1
'ADMPD178','STD','fr_fr',0,'Les valeurs # n''existent pas pour le champ #',1
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODMOD = 'TGE' and CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and CODERR = 'TGE00358'
'TGE00358','TGE','fr_fr',0,'La date de début de l''incident n''est pas cohérente avec la période d''emploi.',1
##
SYS_DEF_ERREURS
==
delete from SYS_DEF_ERREURS where CODMOD = 'GEN' and CODLANG = 'fr_fr' and NIV_DEFINITION = '0' and CODERR = 'GENMUT10'
'GENMUT10','GEN','fr_fr',0,'Une période dans contrat courant postérieure à la date de mise à jour existe et empêche la validation. Merci de supprimer l''occurence dans contrat courant',1
##
SYS_DEF_FONCTION_EXIT
==
DELETE FROM SYS_DEF_FONCTION_EXIT WHERE NOM_FONCTION = 'DOCSERV_OBJ_PARAM_EDITION'
'DOCSERV_OBJ_PARAM_EDITION','_toDefine_','Object','DSParamExitLancementObj','Fonction exit permettant de personnaliser l''objet passé en paramètre de la fonction ExternEdition.executerequete (si les champs de fusion d''une édition DocServ sont gérés par une classe Java).'
##
SYS_REQUETES_JSP
==
DELETE FROM SYS_REQUETES_JSP WHERE NOMPAGE = 'ETATS_CONTAINER_ECP' AND IDREQUETE in ('2')
'ETATS_CONTAINER_ECP','2','Utilisateur','(WITH T1 AS (SELECT RE.*, S.LOGIN FROM SYS_DEF_REPLIB RE INNER JOIN SYS_SEC_USR_WDIR S ON S.ID_REP = RE.ID_REP AND S.LOGIN = @LOGIN@ AND RE.CHEMIN LIKE ''!%!_DSF!_!%PAIE%'' ESCAPE ''!''), T2 AS (SELECT M.* , GAP_TRT_DOC.DOC_NAME, GAP_TRT_DOC.ID_TRT FROM DOC_CONTAINER_METADATA_VIEW M INNER JOIN GAP_TRT_DOC ON M.DOC_ID = GAP_TRT_DOC.DOC_ID WHERE ID_TRT = %1 AND m.pac =%2 AND (m.periode_paie =%3 or m.periode_paie_simul =%3) AND nvl(m.num_ech, %4) = %4) SELECT (Select MAX(LIBELLE) from SYS_DEF_REPLIB where UPPER(CHEMIN) = ''%_DSF_%PAIE/''|| T2.PAC || ''/'' || UPPER(nvl( T2.GRP_EDIT, SUBSTR(T2.BULLETIN_REF, 0,INSTR(T2.BULLETIN_REF, ''.'', 1) - 1) ) ) ) AS LIBELLE, T2.* FROM T2 WHERE (SELECT COUNT(*) FROM T1 WHERE UPPER(CHEMIN) = UPPER(''%_DSF_%PAIE/'' ||T2.PAC) OR UPPER(CHEMIN) = UPPER(''%_DSF_%PAIE/'' ||T2.PAC ||''/'' ||nvl( T2.GRP_EDIT, SUBSTR(T2.BULLETIN_REF, 0, INSTR(T2.BULLETIN_REF, ''.'', 1) - 1) ) ) OR UPPER(CHEMIN) = ''%_DSF_%PAIE'') > 0)','DOC_ID,DOC_TYPE,PAC,ETAB,PACMAT,PAIEZAD,COMPANY_ID,ASSOCIATE_ID, PERIODE_PAIE,EXERCICE,MOTEUR_PAIE,BULLETIN_REF,IMPORT_REF,TO_CHAR(TO_DATE(PERIODE_PAIE_SIMUL^''YYYYmm'')^''mm.YYYY''), LIBELLE,NUM_ECH,ANNEXE_INC,ANNEXE_LABEL,DOC_NAME,ID_TRT,NOM,PRENOM',NULL,NULL,'0','true','PERIODE_PAIE ASC',NULL,'Consultation des états de paie de simulation et de paie de test','Id, Type, Pac,Etablissement,Matricule, Matricule de paie, Company id, Associate Id, Période de paie, Exercice, Moteur de paie, Réf. Bulletin, Réf. Import, Période de paie de simulation, Groupe édition,  N° échange, Inc. Annexe, Libellé annexe, Libellé document, Id Traitement,Nom,Prénom'
##
SYS_REQUETES_JSP
==
DELETE FROM SYS_REQUETES_JSP WHERE NOMPAGE||'_'||IDREQUETE IN ('RD_TAB_DEV_MODE_REMUN_1')
'RD_TAB_DEV_MODE_REMUN','1','Utilisateur','(SELECT ''B'' AS CODE, ''Brut mensuel'' AS LIBELLE, 1 AS ORDRE FROM DUAL ¿UNION ALL SELECT ''N'' AS CODE, ''Net mensuel'' AS LIBELLE, 2 AS ORDRE FROM DUAL UNION ALL SELECT ''T'' AS CODE, ''Taux horaire'' AS LIBELLE, 3 AS ORDRE FROM DUAL)','CODE, LIBELLE','CODE, LIBELLE',NULL,NULL,'false','ORDRE',NULL,'Mode de rémunération','CODE, LIBELLE'
##
SYS_REQUETES_JSP
==
DELETE FROM SYS_REQUETES_JSP WHERE NOMPAGE IN ('TAB_RD_PER_CUMCOTM','TAB_RD_PER_CUMCOT') AND IDREQUETE = '1'
##
SYS_REQUETES_JSP (NOMPAGE,IDREQUETE,NOMBASE,NOMTABLE,LISTCOLAFF,LISTCOLSET,CLAUSEWHERE,CLAUSEMAX,CLAUSEDISTINCT,CLAUSEORDRE,DESCREQ,LIBREQ,LISTLIBCOLAFF)
'TAB_RD_PER_CUMCOT','1','Utilisateur','((select  to_char(dtdeb_cumcot,''DD.MM.YYYY'') as a, regexp_replace(to_char(dtdeb_cumcot,''Month YYYY''),''[ ]+'','' '') as b, to_char(dtdeb_cumcot,''YYYYMMDD'') as c from dic_tge_respaie_cumcot where numpac = ''%1'' and pacmat = ''%2'') union (select   ''31.12.2099'' as a, ''Toutes'' as b,  ''20991231'' as c from dual))','a, b, c','a, b',NULL,'0','true','3 desc',NULL,'Recherche périodes CUMCOT',NULL
'TAB_RD_PER_CUMCOTM','1','Utilisateur','((select to_char(dtdeb_cumcotm,''YYYY'') as a, to_char(dtdeb_cumcotm,''YYYY'') as b from dic_tge_respaie_cumcotm where numpac = ''%1'' and pacmat = ''%2'') union (select  ''9999'' as a, ''Toutes'' as b from dual))','a, b','a, b',NULL,'0','true','1 desc',NULL,'Recherche périodes CUMCOTM',NULL
##
SYS_REQUETES_JSP
==
delete from SYS_REQUETES_JSP where NOMPAGE in ('REG_RD_PDE1') and IDREQUETE in( '1', '2')
##
SYS_REQUETES_JSP
==
delete from SYS_REQUETES_JSP where NOMPAGE in ('REG_RD_WKF_NB_CONTRAT_EN_COURS', 'REG_RD_WKF_NB_CONTRAT_EN_COURS_DTJOUR') and IDREQUETE = '1'
##
SYS_REQUETES_JSP (NOMPAGE,IDREQUETE,NOMBASE,NOMTABLE,LISTCOLAFF,LISTCOLSET,CLAUSEWHERE,CLAUSEMAX,CLAUSEDISTINCT,CLAUSEORDRE,DESCREQ,LIBREQ,LISTLIBCOLAFF)
'REG_RD_WKF_NB_CONTRAT_EN_COURS', '1', 'Administrateur', '(select S.MATRIC, H.PACMAT, H.NUMCNT, count(*) as COUNT_ETOILE from dic_adm_contrat_histo H ,dic_adm_contrat S where H.PACMAT= S.PACMAT and H.NUMPAC = S.NUMPAC and H.NUMCNT = S.NUMCNT and S.MATRIC=''%1'' group by S.MATRIC,H.PACMAT,H.NUMCNT having max(S.dsfcn) is null)', 'MATRIC,PACMAT,NUMCNT', 'COUNT_ETOILE', null, 0, null, null, 'Donne tous les contrats du salarié qui n''ont aucune date de  fin de contrat.', '*Contrat  en cours - sans date de sortie (pour le Matricule))', 'MATRIC,PACMAT,NUMCNT'
'REG_RD_WKF_NB_CONTRAT_EN_COURS_DTJOUR', '1', 'Administrateur', '(select S.MATRIC,H.PACMAT,max(S.DSFCN) as MAX_DSFCN, count(*) as COUNT_ETOILE from dic_adm_contrat_histo H ,dic_adm_contrat S where H.PACMAT= S.PACMAT and H.NUMPAC = S.NUMPAC and H.NUMCNT = S.NUMCNT and S.MATRIC = ''%1''  and S.DSFCN &gt; to_date(''%2'',''DD.MM.YYYY'') group by S.MATRIC,H.PACMAT,H.NUMCNT having max(S.DSFCN) is not null)', 'MATRIC, PACMAT, MAX_DSFCN', 'COUNT_ETOILE', null, 0, null, null, 'Donne tous les contrats du salarié qui ont une date de  fin de contrat &gt; à la date du jour.', '*Contrat  en cours - avec date de sortie (pour le Matricule))', 'MATRIC, PACMAT, MAX_DSFCN'
##
SYS_REQUETES_JSP
==
DELETE FROM SYS_REQUETES_JSP WHERE NOMPAGE||'_'||IDREQUETE IN ('TAB_RD_EMPLOI_2')
##
SYS_REQUETES_JSP (NOMPAGE,IDREQUETE,NOMBASE,NOMTABLE,LISTCOLAFF,LISTCOLSET,CLAUSEWHERE,CLAUSEMAX,CLAUSEDISTINCT,CLAUSEORDRE,DESCREQ,LIBREQ,LISTLIBCOLAFF)
'TAB_RD_EMPLOI','2','Utilisateur','GA_FILIERE A, GA_CODCPN C','A.QUALIFICATION, A.LIBELLE, A.COEFFICIENT, A.CODE_CPN,A.FILIERE,A.REGROUPEMENT_METIER, A.METIER','A.QUALIFICATION , A.LIBELLE , A.COEFFICIENT , A.CODE_CPN , C.LIBELLE, A.LIBELLE,A.FILIERE,A.REGROUPEMENT_METIER, A.METIER,A.CODE_INSEE_EMPLOI','A.CODE_CPN=C.CODCPN AND QUALIFICATION is not null and A.FILIERE is not null   and A.REGROUPEMENT_METIER is not null and A.METIER is not null','0','false','A.QUALIFICATION',NULL,'Filière',NULL
##
SYS_SERVICELET
==
DELETE FROM SYS_SERVICELET WHERE TYP='T' and SYNONYME='Traitement_ExportDocumentsSignes' 
'T','Traitement_ExportDocumentsSignes','fr.adp.com.gxp.std.modules.lib.signature.traitement.Traitement_ExportDocumentsSignes','O'
##
SYS_TRT_TOMAKE 
==
delete from SYS_TRT_TOMAKE where ID_TRT='Traitement_EnvoieJobStatusChange'
'Traitement_EnvoieJobStatusChange','H01'
##
SYS_TRT_TYPE
==
DELETE FROM SYS_TRT_TYPE WHERE TYPE_TRAITEMENT = 'Traitement_ExportDocumentsSignes'
'Traitement_ExportDocumentsSignes','Export externe des documents signés en paquet zip.',NULL
##
SYS_VARSYS
==
DELETE SYS_VARSYS WHERE  MODULE='MP' and CODVAR='MP_NOTIF_RESPAIE'
'MP', 'MP_NOTIF_RESPAIE', '', 'Texte', 'La nature de traitement qui doit déclencher l''envoi de la notification MP des résultats de paie.Seulement deux valeurs sont possibles : RN et Z4CONLOT. '
##
SYS_VARSYS
=SQL IFEXIST=SYS_VARSYS=
update sys_varsys set valvar = '21600' where codvar = 'GESTIL_ATTENTE_PAI' and to_number(VALVAR) <= 18000
##
TAG_CHARSET=@€éèç
##
TGE_REF_CARTE_FSED
=SQL IFEXIST=TGE_REF_CARTE_FSED=FORMATAGE_SQL=
ALTER TABLE TGE_REF_CARTE_FSED MODIFY FORMATAGE_SQL VARCHAR2(3500 BYTE)
##
TGE_REF_CARTE_FSED
==
DELETE from TGE_REF_CARTE_FSED where CODE_CARTE in ('00','00_ALP','11','29_30_DIF_FSED','29_30_DIF_FSED_RETRO','29_30_TGE_ELEMENT_PAIE','29_30_TGE_ELEMENT_PAIE_RETRO','309','309_RETRO','30_SIMULATION_PAIE','40','40_RETRO','409','409_RETRO','40_SIMULATION_PAIE','50','509','60','60_RETRO','609','609_RETRO','60_ABSENCES','60_SIMULATION_PAIE','70','70_RETRO','70_SIMULATION_PAIE','99','ANNULATION','ANNULATION_RETRO','ANNULATION_PERIODE_EMPLOI','IJEDI','W566','W566_RETRO','WL70','WL70_RETRO') and ORIGINE_CARTE='RD'
##
TGE_REF_CARTE_FSED
'00','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'00','RD','SELECT','002','00',NULL,NULL,'2','0','FALSE',NULL,NULL
'00','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','004',NULL,'TGE_REF_PAC','STATION_WEB','6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','005','TGE',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','006',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','007','5.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','009',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','010','Z2M',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','012','4.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'PARAM_ORIGINE(NUMERO_ECHANGE)'
'00','RD','SELECT','015',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'00','RD','SELECT','016',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'00','RD','SELECT','017',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,'FORMATAGE_TYPE_PASSAGE'
'00','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'00','RD','SELECT','019','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','020','1.00',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','021','181',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','022',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','023',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','024',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00','RD','SELECT','026',NULL,NULL,NULL,'153',NULL,'FALSE',NULL,NULL
'00','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'00','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC =  @@@NUMPAC@@@',NULL
'00_ALP','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'00_ALP','RD','SELECT','002','00',NULL,NULL,'2','0','FALSE',NULL,NULL
'00_ALP','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','004',NULL,'TGE_REF_PAC','STATION_WEB','6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','005','ALP',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','006',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','007','5.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','009',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','010','Z2M',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','012','4.00  ',NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'PARAM_ORIGINE(NUMERO_ECHANGE)'
'00_ALP','RD','SELECT','015',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'00_ALP','RD','SELECT','016',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'00_ALP','RD','SELECT','017',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,'FORMATAGE_TYPE_PASSAGE'
'00_ALP','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'00_ALP','RD','SELECT','019','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','020','1.00',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','021','181',NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','022',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','023',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','024',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'00_ALP','RD','SELECT','026',NULL,NULL,NULL,'153',NULL,'FALSE',NULL,NULL
'00_ALP','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'00_ALP','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC =  @@@NUMPAC@@@',NULL
'11','RD','SELECT','001',NULL,'TGE_REF_VRVAL','NUMERO_DE_PAC','6','0','FALSE',NULL,NULL
'11','RD','SELECT','002','11',NULL,NULL,'2','0','FALSE',NULL,NULL
'11','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','004',NULL,'TGE_REF_VRVAL','CODE_TABLE','3',NULL,'TRUE',NULL,'FORMATAGE_SUBSTRING(CODE_TABLE,0,3)'
'11','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,'FORMATAGE_SUBSTRING(CODE_TABLE,4,2)'
'11','RD','SELECT','007',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','008','V',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','009',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','011',NULL,'TGE_REF_VRVAL','NUMERO_DE_LIGNE','1',NULL,'FALSE','SUBSTR(@COLONNE_CIBLE@,9,1)',NULL
'11','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','013',NULL,'TGE_REF_VRVAL','LONGUEUR_INFO','3','0','FALSE',NULL,NULL
'11','RD','SELECT','014',NULL,'TGE_REF_VRVAL','ENREGISTREMENT','86',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','015',NULL,NULL,NULL,'66',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','016',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','018','3',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','019',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(LOGIN)'
'11','RD','SELECT','020',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'11','RD','SELECT','021',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','023',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','024',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'11','RD','SELECT','025',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'11','RD','SELECT','026',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'11','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRVAL',NULL
'11','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRREP',NULL
'11','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_VRVAL.NUMERO_DE_PAC = @@@NUMPAC@@@',NULL
'11','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRREP.NUMERO_DE_PAC = @@@NUMPAC@@@',NULL
'11','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRVAL.NUMERO_DE_PAC = TGE_REF_VRREP.NUMERO_DE_PAC',NULL
'11','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRVAL.CODE_TABLE = TGE_REF_VRREP.CODE_TABLE',NULL
'11','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_VRREP.TEMOIN_VR_BASE in(''O'',''K'')',NULL
'29_30_DIF_FSED','RD','SELECT','001',NULL,'DIF_FSED','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','001',NULL,'DIF_FSED_PARTIERETRO','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','004',NULL,'DIF_FSED','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','004',NULL,'DIF_FSED_PARTIERETRO','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','007',NULL,'DIF_FSED','ELEM','4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','007',NULL,'DIF_FSED_PARTIERETRO','ELEM','4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','009',NULL,'DIF_FSED','OCC','16',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','009',NULL,'DIF_FSED_PARTIERETRO','OCC','16',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','012',NULL,'DIF_FSED','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_DONNEE_VALEUR'
'29_30_DIF_FSED_RETRO','RD','SELECT','012',NULL,'DIF_FSED_PARTIERETRO','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_DONNEE_VALEUR'
'29_30_DIF_FSED','RD','SELECT','013',NULL,'DIF_FSED','TYPE_DONNEE','1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','013',NULL,'DIF_FSED_PARTIERETRO','TYPE_DONNEE','1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE_DONNEE'
'29_30_DIF_FSED','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'29_30_DIF_FSED','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'29_30_DIF_FSED','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'29_30_DIF_FSED','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED_RETRO','RD','SELECT','021','DIF_FSED_PARTIERETRO',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_DIF_FSED','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'29_30_DIF_FSED','RD','SELECT','024',NULL,'DIF_FSED','DTEFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')','FORMATAGE_DATE_EFFET'
'29_30_DIF_FSED_RETRO','RD','SELECT','024',NULL,'DIF_FSED_PARTIERETRO','DTEFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')','FORMATAGE_DATE_EFFET'
'29_30_DIF_FSED','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'29_30_DIF_FSED_RETRO','RD','SELECT','025',NULL,'DIF_FSED_PARTIERETRO','PERIODE','6',0,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'29_30_DIF_FSED','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE',' TGE_REF_DICOZ.MASQUE',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','/*+ FULL(DIF_FSED_PARTIERETRO)*/ TGE_REF_DICOZ.MASQUE',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED.CODEOP',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED_PARTIERETRO.CODEOP',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'29_30_DIF_FSED','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED.CLE',NULL
'29_30_DIF_FSED_RETRO','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DIF_FSED_PARTIERETRO.CLE',NULL
'29_30_DIF_FSED','RD','FROM_WITH','001',NULL,'DAC',NULL,NULL,NULL,NULL,'WITH DAC AS (select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') group by C.MATRIC,C.PACMAT,DACH.PAIEZAD)',NULL
'29_30_DIF_FSED','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED',NULL
'29_30_DIF_FSED_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED_PARTIERETRO',NULL
'29_30_DIF_FSED','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'29_30_DIF_FSED','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DIF_FSED_PARTIERETRO.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_DIF_FSED','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.ID_TRT = @@@ID_TRT@@@',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.ID_TRT = @@@ID_TRT@@@',NULL
'29_30_DIF_FSED','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.PAIEZAD = DAC.PAIEZAD',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.PAIEZAD = DAC.PAIEZAD',NULL
'29_30_DIF_FSED','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.ELEM = TGE_REF_DICOZ.ELEMENT',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.ELEM = TGE_REF_DICOZ.ELEMENT',NULL
'29_30_DIF_FSED','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC = @@@NUMPAC@@@)',NULL
'29_30_DIF_FSED_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and DIF_FSED_PARTIERETRO.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC = @@@NUMPAC@@@)',NULL
'29_30_DIF_FSED','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'PAIEZAD,ELEM,CLE,CODEOP,OCC',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','001',NULL,'TGE_ELEMENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','004',NULL,'TGE_ELEMENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','007',NULL,'TGE_ELEMENTS_PAIE','CODE_ELEMENT','4',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','009',NULL,'TGE_ELEMENTS_PAIE','INDICATIF','16',NULL,'FALSE',NULL,'FORMATAGE_INDICATIF'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','011',NULL,'TGE_ELEMENTS_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','012',NULL,'TGE_ELEMENTS_PAIE','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_VALEUR'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','019',NULL,'TGE_ELEMENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','020',NULL,'TGE_ELEMENTS_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE','CASE WHEN TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT = ''*'' THEN '''' ELSE TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT END',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','021',NULL,'TGE_ELEMENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','022',NULL,'TGE_ELEMENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','023',NULL,'TGE_ELEMENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','024',NULL,'TGE_ELEMENTS_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'29_30_TGE_ELEMENT_PAIE_RETRO','RD','SELECT','025',NULL,'TGE_ELEMENTS_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'29_30_TGE_ELEMENT_PAIE','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ELEMENTS_PAIE',NULL
'29_30_TGE_ELEMENT_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ELEMENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.PAIEZAD = DAC.PAIEZAD ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.CODE_ELEMENT = TGE_REF_DICOZ.ELEMENT ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_ELEMENTS_PAIE.ORIGINE is null or TGE_ELEMENTS_PAIE.ORIGINE = ''T'' or TGE_ELEMENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( MODE_3060 = ''R'' and ENVOI_MODE_R = ''O'' )))) or TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT is not null) ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ELEMENTS_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ @@@PERIODE_PAIE@@@ and TGE_ELEMENTS_PAIE.ACTION_RETRO is null ',NULL
'29_30_TGE_ELEMENT_PAIE_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,' AND TGE_ELEMENTS_PAIE.PERIODE in (SELECT periode_retro FROM gap_trt_mois_retro WHERE id_trt =@@@ID_TRT@@@ and @@@NUMPAC@@@||pacmat=tge_elements_paie.idpacmat) AND TGE_ELEMENTS_PAIE.ACTION_RETRO is not null ',NULL
'29_30_TGE_ELEMENT_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD, TGE_ELEMENTS_PAIE.CODE_ELEMENT',NULL
'309','RD','SELECT','001',NULL,'MAJELEM','PAC','6','0','FALSE',NULL,NULL
'309','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'309','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','004',NULL,'MAJELEM','MATPAIE','8','0','FALSE',NULL,NULL
'309','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'309','RD','SELECT','007',NULL,'MAJELEM','NUMERO','4','0','FALSE',NULL,NULL
'309','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','009',NULL,'MAJELEM','INDICATI','16',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','011',NULL,'MAJELEM','SENS','1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','012',NULL,'MAJELEM','INFORMAT','40',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','015',NULL,NULL,NULL,'76',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','016',NULL,'MAJELEM','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'309','RD','SELECT','017',NULL,'MAJELEM','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'309','RD','SELECT','018',NULL,'MAJELEM','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'309','RD','SELECT','019',NULL,'MAJELEM','CODR','1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','020','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','021',NULL,'MAJELEM','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'309','RD','SELECT','022',NULL,'MAJELEM','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'309','RD','SELECT','023',NULL,'MAJELEM','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'309','RD','SELECT','024',NULL,'MAJELEM','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'309','RD','SELECT','025',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','026','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','029',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','030','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'309','RD','SELECT','031',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'309','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM',NULL
'309','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'309_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'309','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'309_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO = TO_CHAR(TO_DATE(MAJELEM.PERIODE,''MMYYYY''),''YYYYMM'')',NULL
'309','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'309_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT ',NULL
'309','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'309_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'309','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'309_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJELEM.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'309','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJELEM.MATRICUL,MAJELEM.NUMERO',NULL
'30_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_ELEMENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_ELEMENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_ELEMENTS_PAIE','CODE_ELEMENT','4',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_ELEMENTS_PAIE','INDICATIF','16',NULL,'FALSE',NULL,'FORMATAGE_INDICATIF'
'30_SIMULATION_PAIE','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_ELEMENTS_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_ELEMENTS_PAIE','VALEUR','40',NULL,'FALSE',NULL,'FORMATAGE_TYPE_VALEUR'
'30_SIMULATION_PAIE','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'30_SIMULATION_PAIE','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'30_SIMULATION_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'30_SIMULATION_PAIE','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'30_SIMULATION_PAIE','RD','SELECT','019',NULL,'SIMU_TGE_ELEMENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'30_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_ELEMENTS_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE','CASE WHEN SIMU_TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT = ''*'' THEN '''' ELSE SIMU_TGE_ELEMENTS_PAIE.CODE_REMPLACEMENT END',NULL
'30_SIMULATION_PAIE','RD','SELECT','021',NULL,'SIMU_TGE_ELEMENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'30_SIMULATION_PAIE','RD','SELECT','023',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'30_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_ELEMENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'30_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_ELEMENTS_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'30_SIMULATION_PAIE','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','SIMU_TGE_ELEMENTS_PAIE.DERNIER_CODE_OPE',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'30_SIMULATION_PAIE','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'30_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'30_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_ELEMENTS_PAIE',NULL
'30_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'30_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_ELEMENTS_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'30_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'30_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_ELEMENTS_PAIE.PAIEZAD = DAC.PAIEZAD ',NULL
'30_SIMULATION_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_ELEMENTS_PAIE.CODE_ELEMENT = TGE_REF_DICOZ.ELEMENT ',NULL
'30_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD, SIMU_TGE_ELEMENTS_PAIE.CODE_ELEMENT',NULL
'40','RD','SELECT','001',NULL,'TGE_INCIDENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'40','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'40','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','004',NULL,'TGE_INCIDENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'40','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','007',NULL,'TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40','RD','SELECT','008',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','012',NULL,'TGE_INCIDENTS_PAIE','TYPE_IP','1',NULL,'FALSE','CASE WHEN @COLONNE_CIBLE@ = ''R'' THEN ''R'' WHEN @COLONNE_CIBLE@ = ''T'' THEN ''T'' ELSE '' '' END',NULL
'40','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','014','F',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','016',NULL,'TGE_INCIDENTS_PAIE','HEURES_T','5','0','TRUE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN '' '' ELSE nvl(TO_CHAR(TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_TRAVAILLEES'
'40','RD','SELECT','017',NULL,'TGE_INCIDENTS_PAIE','TEMOIN_HT','1','0','FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') and TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' ELSE ''0'' END',NULL
'40','RD','SELECT','018',NULL,'TGE_INCIDENTS_PAIE','HEURES_I','5','0','TRUE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') THEN '' '' ELSE nvl(TO_CHAR(TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_INCIDENT'
'40','RD','SELECT','019',NULL,'TGE_INCIDENTS_PAIE','TEMOIN_HI','1','0','FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') and TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') and CODE_IP is not null THEN ''1'' ELSE ''0'' END',NULL
'40','RD','SELECT','020',NULL,'TGE_INCIDENTS_PAIE','CODE_IP','5',NULL,'FALSE','CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN to_char(TGE_INCIDENTS_PAIE.CODE_IP) ELSE '' '' END',NULL
'40','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','022',NULL,'TGE_INCIDENTS_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,'FORMATAGE_40_IMPUTATION'
'40','RD','SELECT','023',NULL,'TGE_INCIDENTS_PAIE','DOM_IMPUTATION','1',NULL,'FALSE','CASE WHEN TGE_INCIDENTS_PAIE.CODE_IMPUTATION is null THEN '''' ELSE CASE WHEN (TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') THEN ''1'' WHEN TGE_INCIDENTS_PAIE.TYPE_IP = ''R'' THEN ''H'' ELSE '' '' END END',NULL
'40','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','027',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'40','RD','SELECT','028',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'40','RD','SELECT','029',NULL,'TGE_INCIDENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'40','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','031',NULL,'TGE_INCIDENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','032',NULL,'TGE_INCIDENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'40','RD','SELECT','033',NULL,'TGE_INCIDENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'40','RD','SELECT','034',NULL,'TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40','RD','SELECT','035',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'40_RETRO','RD','SELECT','035',NULL,'TGE_INCIDENTS_PAIE','PERIODE','6',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')',NULL
'40','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','037',NULL,'TGE_INCIDENTS_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'40','RD','SELECT','041',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'40','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'  /*+ opt_param(''_optimizer_push_pred_cost_based'',''false'') */ TGE_INCIDENTS_PAIE.TYPE_IP as TYPE_IP_FROM_TABLE',NULL
'40','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.CODE_IP as CODE_IP_FROM_TABLE',NULL
'40','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'40','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) group by DACH2.PACMAT,DACH2.NUMCNT,DACH2.NUMPAC ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'40','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE',NULL
'40','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'40','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_PERIODE_RECUEIL_PAIEZAD',NULL
'40','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'40','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'40','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD  ',NULL
'40','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC',NULL
'40','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = TGE_PERIODE_RECUEIL_PAIEZAD.PAIEZAD',NULL
'40','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.ORIGINE is null or TGE_INCIDENTS_PAIE.ORIGINE = ''T'' or TGE_INCIDENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_T2 = ''W'' or ( MODE_T2 = ''R'' and ENVOI_MODE_R = ''O'' )))) ',NULL
'40','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' or (TGE_INCIDENTS_PAIE.TYPE_IP=''T'' and TGE_REF_PAC.ENVOI_HP = ''O''))',NULL
'40','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') @@@OPERATEUR_RETRO@@@ TGE_REF_PAC.PERIODEENCOURS and TGE_INCIDENTS_PAIE.ACTION_RETRO is null ',NULL
'40_RETRO','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,' and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') in (SELECT periode_retro FROM gap_trt_mois_retro WHERE id_trt =@@@ID_TRT@@@ and @@@NUMPAC@@@||pacmat=TGE_INCIDENTS_PAIE.idpacmat) and NVL(TGE_INCIDENTS_PAIE.DERNIER_CODE_OPE,''M'')!=''S'' ',NULL
'40','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE = TGE_REF_PAC.PERIODEENCOURS',NULL
'40_RETRO','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') = TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE',NULL
'40','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_INCIDENTS_PAIE.TYPE_IP = ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_GENERATION_HP and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_GENERATION_HP and tge_ref_pac.envoi_hp =''O'')',NULL
'40','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET <= TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'40_RETRO','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PERIODE_RECUEIL and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'40','RD','WHERE','012',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_RECUEIL_RETRO and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_RECUEIL_RETRO and tge_ref_pac.gc_retro =''O'' AND RETRO_GC is not null))',NULL
'40','RD','WHERE','013',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE @@@OPERATEUR_RETRO@@@ (select PERIODEENCOURS from tge_ref_pac where NUMPAC = @@@NUMPAC@@@) ',NULL
'40_RETRO','RD','WHERE','013',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE in (SELECT periode_retro FROM gap_trt_mois_retro g WHERE id_trt =@@@ID_TRT@@@ and G.NUMPAC=TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC and G.pacmat=TGE_PERIODE_RECUEIL_PAIEZAD.pacmat) ',NULL
'40','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_INCIDENTS_PAIE.DATE_EFFET',NULL
'409','RD','SELECT','001',NULL,'POINTAGE','PAC','6','0','FALSE',NULL,NULL
'409','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'409','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','004',NULL,'POINTAGE','MATPAIE','8','0','FALSE',NULL,NULL
'409','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'409','RD','SELECT','007',NULL,'POINTAGE','PTJDEB','8',NULL,'FALSE','TO_CHAR(PTJDEB,''YYYYMMDD'')',NULL
'409','RD','SELECT','008',NULL,'POINTAGE','PTJFIN','8',NULL,'FALSE','TO_CHAR(PTJFIN,''YYYYMMDD'')',NULL
'409','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','016',NULL,'POINTAGE','PTJHT','5','0','TRUE',NULL,'FORMATAGE_40_HEURES_TRAVAILLEES'
'409','RD','SELECT','017',NULL,'POINTAGE','PTJHT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'409','RD','SELECT','018',NULL,'POINTAGE','PTJHI','5','0','TRUE',NULL,'FORMATAGE_40_HEURES_INCIDENT'
'409','RD','SELECT','019',NULL,'POINTAGE','PTJHI','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'409','RD','SELECT','020',NULL,'POINTAGE','PTJCI','5',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','022',NULL,'POINTAGE','IMP','18',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','023',NULL,'POINTAGE','DOMIMP','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','024',NULL,'POINTAGE','REF','6',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','025',NULL,'POINTAGE','DOMREF','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','027',NULL,'POINTAGE','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'409','RD','SELECT','028',NULL,'POINTAGE','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'409','RD','SELECT','029',NULL,'POINTAGE','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'409','RD','SELECT','030',NULL,'POINTAGE','CODR','1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','031','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','032',NULL,'POINTAGE','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'409','RD','SELECT','033',NULL,'POINTAGE','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'409','RD','SELECT','034',NULL,'POINTAGE','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'409','RD','SELECT','035',NULL,'POINTAGE','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'409','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','037','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','041','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'409','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'409','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE',''' '' as TYPE_IP_FROM_TABLE',NULL
'409','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE',''' '' as CODE_IP_FROM_TABLE',NULL
'409','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE',NULL
'409','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'409_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'409','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'409_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO = TO_CHAR(TO_DATE(POINTAGE.PERIODE,''MMYYYY''),''YYYYMM'')',NULL
'409','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'409_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT',NULL
'409','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'409_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'409','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'409_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and POINTAGE.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'409','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'POINTAGE.MATRICUL',NULL
'40_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_INCIDENTS_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','002','40',NULL,NULL,'2','0','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_INCIDENTS_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','009',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','010',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','011',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_INCIDENTS_PAIE','TYPE_IP','1',NULL,'FALSE','CASE WHEN @COLONNE_CIBLE@ = ''R'' THEN ''R'' WHEN @COLONNE_CIBLE@ = ''T'' THEN ''T'' ELSE '' '' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','014','F',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_INCIDENTS_PAIE','HEURES_T','5','0','TRUE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN '' '' ELSE nvl(TO_CHAR(SIMU_TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_TRAVAILLEES'
'40_SIMULATION_PAIE','RD','SELECT','017',NULL,'SIMU_TGE_INCIDENTS_PAIE','TEMOIN_HT','1','0','FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') and SIMU_TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' ELSE ''0'' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_INCIDENTS_PAIE','HEURES_I','5','0','TRUE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'') THEN '' '' ELSE nvl(TO_CHAR(SIMU_TGE_INCIDENTS_PAIE.HEURES),'' '') END','FORMATAGE_40_HEURES_INCIDENT'
'40_SIMULATION_PAIE','RD','SELECT','019',NULL,'SIMU_TGE_INCIDENTS_PAIE','TEMOIN_HI','1','0','FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') and SIMU_TGE_INCIDENTS_PAIE.HEURES is not null  THEN ''1'' WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') and CODE_IP is not null THEN ''1'' ELSE ''0'' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_INCIDENTS_PAIE','CODE_IP','5',NULL,'FALSE','CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''T'') THEN to_char(SIMU_TGE_INCIDENTS_PAIE.CODE_IP) ELSE '' '' END',NULL
'40_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_INCIDENTS_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,'FORMATAGE_40_IMPUTATION'
'40_SIMULATION_PAIE','RD','SELECT','023',NULL,'SIMU_TGE_INCIDENTS_PAIE','DOM_IMPUTATION','1',NULL,'FALSE','CASE WHEN SIMU_TGE_INCIDENTS_PAIE.CODE_IMPUTATION is null THEN '''' ELSE CASE WHEN (SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''A'' or SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''P'') THEN ''1'' WHEN SIMU_TGE_INCIDENTS_PAIE.TYPE_IP = ''R'' THEN ''H'' ELSE '' '' END END',NULL
'40_SIMULATION_PAIE','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','026',NULL,NULL,NULL,'73',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','027',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'40_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'40_SIMULATION_PAIE','RD','SELECT','029',NULL,'SIMU_TGE_INCIDENTS_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'40_SIMULATION_PAIE','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_INCIDENTS_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'40_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'40_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_INCIDENTS_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_INCIDENTS_PAIE','PERIODE','6',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')',NULL
'40_SIMULATION_PAIE','RD','SELECT','036',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','037',NULL,'SIMU_TGE_INCIDENTS_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','038',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'40_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.TYPE_IP as TYPE_IP_FROM_TABLE',NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.CODE_IP as CODE_IP_FROM_TABLE',NULL
'40_SIMULATION_PAIE','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'40_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'40_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE',NULL
'40_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'40_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_INCIDENTS_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'40_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'40_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD  ',NULL
'40_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_INCIDENTS_PAIE.DATE_EFFET',NULL
'50','RD','SELECT','001',NULL,'TGE_IMPUTATIONS','NUMPAC','6','0','FALSE',NULL,NULL
'50','RD','SELECT','002','50',NULL,NULL,'2','0','FALSE',NULL,NULL
'50','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','004',NULL,'TGE_IMPUTATIONS','PAIEZAD','8','0','TRUE',NULL,NULL
'50','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','007',NULL,'TGE_IMPUTATIONS','NB_UNITE','15','0','TRUE',NULL,'FORMATAGE_NBRE_IMPUTATION'
'50','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','009',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','011',NULL,'TGE_IMPUTATIONS','IMPUTATION','18',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','015',NULL,NULL,NULL,'106',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','016',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'50','RD','SELECT','017',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'50','RD','SELECT','018',NULL,'TGE_IMPUTATIONS','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'50','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','020',NULL,'TGE_IMPUTATIONS','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','021',NULL,'TGE_IMPUTATIONS','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'50','RD','SELECT','022',NULL,'TGE_IMPUTATIONS','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'50','RD','SELECT','023',NULL,'TGE_IMPUTATIONS','PERIODE','8',NULL,'FALSE','@COLONNE_CIBLE@||''01''',NULL
'50','RD','SELECT','024',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'50','RD','SELECT','025',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','026',NULL,'TGE_IMPUTATIONS','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'50','RD','SELECT','029',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'50','RD','SELECT','030',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'50','RD','SELECT','031',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'50','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'50','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'50','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_IMPUTATIONS',NULL
'50','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_IMPUTATIONS.NUMPAC = @@@NUMPAC@@@',NULL
'50','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.PAIEZAD = DAC.PAIEZAD',NULL
'50','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.DERNIER_CODE_OPE <> ''S''',NULL
'50','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_IMPUTATIONS.ORIGINE is null or TGE_IMPUTATIONS.ORIGINE = ''T'' or TGE_IMPUTATIONS.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( (MODE_3060 = ''R'' or MODE_3060 = ''F'') and ENVOI_MODE_R = ''O'' ))))',NULL
'50','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_IMPUTATIONS.PERIODE <= @@@PERIODE_PAIE@@@',NULL
'50','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'509','RD','SELECT','001',NULL,'MAJIMPU','PAC','6','0','FALSE',NULL,NULL
'509','RD','SELECT','002','50',NULL,NULL,'2','0','FALSE',NULL,NULL
'509','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','004',NULL,'MAJIMPU','MATPAIE','8','0','FALSE',NULL,NULL
'509','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'509','RD','SELECT','007',NULL,'MAJIMPU','NOMBRE','15','0','FALSE',NULL,NULL
'509','RD','SELECT','008',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','009',NULL,'MAJIMPU','CODEUTIL','3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','010',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','011',NULL,'MAJIMPU','IMPUTATI','18',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','012',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','014',NULL,NULL,NULL,'106',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','015',NULL,'MAJIMPU','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'509','RD','SELECT','016',NULL,'MAJIMPU','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'509','RD','SELECT','017',NULL,'MAJIMPU','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'509','RD','SELECT','018',NULL,'MAJIMPU','CODR','1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','019','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','020',NULL,'MAJIMPU','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'509','RD','SELECT','021',NULL,'MAJIMPU','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'509','RD','SELECT','022',NULL,'MAJIMPU','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'509','RD','SELECT','023',NULL,'MAJIMPU','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'509','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','025','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','026',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','027',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','028',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','029','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'509','RD','SELECT','030',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'509','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU',NULL
'509','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'509','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'509','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJIMPU.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'509','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'509','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and MAJIMPU.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'509','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'MAJIMPU.MATRICUL',NULL
'60','RD','SELECT','001',NULL,'TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'60','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','007',NULL,'TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','009',NULL,'TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'60','RD','SELECT','010',NULL,'TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','011',NULL,'TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60','RD','SELECT','012',NULL,'TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','013',NULL,'TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60','RD','SELECT','014',NULL,'TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60','RD','SELECT','015',NULL,'TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'60','RD','SELECT','016',NULL,'TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','018',NULL,'TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','020',NULL,'TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','022',NULL,'TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'60','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','024',NULL,'TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','025',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','026',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60','RD','SELECT','027',NULL,NULL,NULL,'9',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60','RD','SELECT','030',NULL,'TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'60','RD','SELECT','031',NULL,'TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','032',NULL,'TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','033',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60','RD','SELECT','034',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60','RD','SELECT','035',NULL,'TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60','RD','SELECT','036',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'60_RETRO','RD','SELECT','036',NULL,'TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','038',NULL,'TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'60','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'60','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE',NULL
'60','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'60','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.TYPE_DONNEE = ''1''',NULL
'60','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'60','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_DONNEES_PAIE.ORIGINE is null or TGE_DONNEES_PAIE.ORIGINE = ''T'' or TGE_DONNEES_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( (MODE_3060 = ''R'' or MODE_3060 = ''F'') and ENVOI_MODE_R = ''O'' )))) or TGE_DONNEES_PAIE.CODE_REMPLACEMENT is not null)',NULL
'60','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ (SELECT PERIODEENCOURS FROM TGE_REF_PAC WHERE NUMPAC = @@@NUMPAC@@@) and TGE_DONNEES_PAIE.ACTION_RETRO is null',NULL
'60_RETRO','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_DONNEES_PAIE.PERIODE in (SELECT periode_retro FROM gap_trt_mois_retro WHERE id_trt =@@@ID_TRT@@@ and @@@NUMPAC@@@||pacmat=TGE_DONNEES_PAIE.idpacmat) AND TGE_DONNEES_PAIE.ACTION_RETRO is not null ',NULL'60','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'60','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'609','RD','SELECT','001',NULL,'RUBDV','PAC','6','0','FALSE',NULL,NULL
'609','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,'FORMATAGE_NUMERO_CARTE_609'
'609','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','004',NULL,'RUBDV','MATPAIE','8','0','FALSE',NULL,NULL
'609','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'TRUE',NULL,NULL
'609','RD','SELECT','007',NULL,'RUBDV','RUBCOD','4','0','FALSE',NULL,NULL
'609','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','009',NULL,'RUBDV','RUBMTS','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'609','RD','SELECT','010',NULL,'RUBDV','RUBMTS','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','011',NULL,'RUBDV','RUBNBR','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'609','RD','SELECT','012',NULL,'RUBDV','RUBNBR','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','013',NULL,'RUBDV','RUBTAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'609','RD','SELECT','014',NULL,'RUBDV','RUBTAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1)'
'609','RD','SELECT','015',NULL,'RUBDV','RUBPCT','6',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','016',NULL,'RUBDV','RUBDOM','1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','018',NULL,'RUBDV','RUBSIGNE','1',NULL,'FALSE',NULL,'FORMATAGE_RUBSIGNE'
'609','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','020',NULL,'RUBDV','RUBIMPU','18',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','022',NULL,NULL,NULL,'10',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','023',NULL,NULL,NULL,'55',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','024',NULL,'RUBDV','MATRICUL','8','','TRUE',NULL,'FORMATAGE_PACMAT'
'609','RD','SELECT','025',NULL,'RUBDV','CODECHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'609','RD','SELECT','026',NULL,'RUBDV','CODO','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'609','RD','SELECT','027',NULL,'RUBDV','CODR','1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','028','TGE-GEST',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','029',NULL,'RUBDV','DATMAJ','8',NULL,'FALSE','TO_CHAR(DATMAJ,''YYYYMMDD'')',NULL
'609','RD','SELECT','030',NULL,'RUBDV','HEURMAJ','6',NULL,'FALSE','TO_CHAR(DATMAJ,''HHMMSS'')',NULL
'609','RD','SELECT','031',NULL,'RUBDV','DATEFFET','8',NULL,'FALSE','TO_CHAR(DATEFFET,''YYYYMMDD'')',NULL
'609','RD','SELECT','032',NULL,'RUBDV','PERIODE','6',NULL,'FALSE','TO_CHAR(TO_DATE(@COLONNE_CIBLE@,''MMYYYY''),''YYYYMM'')',NULL
'609','RD','SELECT','033',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','034','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','035',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','036',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','037',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','039','E',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'609','RD','SELECT','040',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'609','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV',NULL
'609','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC',NULL
'609_RETRO','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO',NULL
'609','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV.PERIODE = @@@PERIODE_PAIE_GESTIL@@@',NULL
'609_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'EVTDETAIL_MATRIC_RETRO.PERIODE_RETRO =  TO_CHAR(TO_DATE(RUBDV.PERIODE,''MMYYYY''),''YYYYMM'') ',NULL
'609','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATRICUL = EVTDETAIL_MATRIC.PACMAT',NULL
'609_RETRO','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATRICUL = EVTDETAIL_MATRIC_RETRO.PACMAT',NULL
'609','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'609_RETRO','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and EVTDETAIL_MATRIC_RETRO.IDENT = ''@@@ID_TRT_GESTIL@@@''',NULL
'609','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATPAIE = EVTDETAIL_MATRIC.PAIEZAD',NULL
'609_RETRO','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and RUBDV.MATPAIE = EVTDETAIL_MATRIC_RETRO.PAIEZAD',NULL
'609','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'RUBDV.MATRICUL,RUBDV.RUBCOD',NULL
'60_ABSENCES','RD','SELECT','001',NULL,'TGE_ABSENCES','NUMPAC','6','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60_ABSENCES','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','007',NULL,'TGE_REF_PRE','RUB_ECHANGE','4',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','008',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','009',NULL,'TGE_ABSENCES','DUREE_CALC','15','0','TRUE','CASE WHEN TGE_REF_PRE.UNITE_TENUE = ''H'' THEN to_char(TGE_ABSENCES.DUREE_CALC_HEURES) WHEN TGE_REF_PRE.UNITE_TENUE = ''C'' THEN to_char(TGE_ABSENCES.DUREE_CALC_CALENDAIRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''O'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''S'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRABLE) WHEN TGE_REF_PRE.UNITE_TENUE = ''U'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OEUVRE) ELSE '''' END','FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_ABSENCES','RD','SELECT','010',NULL,'TGE_ABSENCES','TEMOIN_DUREE_CALC','1',NULL,'FALSE','CASE WHEN TGE_REF_PRE.UNITE_TENUE = ''H'' THEN to_char(TGE_ABSENCES.DUREE_CALC_HEURES) WHEN TGE_REF_PRE.UNITE_TENUE = ''C'' THEN to_char(TGE_ABSENCES.DUREE_CALC_CALENDAIRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''O'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRE) WHEN TGE_REF_PRE.UNITE_TENUE = ''S'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OUVRABLE) WHEN TGE_REF_PRE.UNITE_TENUE = ''U'' THEN to_char(TGE_ABSENCES.DUREE_CALC_OEUVRE) ELSE '''' END','VALEUR_CONDITIONEE(NULL;0;1)'
'60_ABSENCES','RD','SELECT','011',NULL,NULL,NULL,'110',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','012',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60_ABSENCES','RD','SELECT','013',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60_ABSENCES','RD','SELECT','014',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','016',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(LOGIN)'
'60_ABSENCES','RD','SELECT','017',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60_ABSENCES','RD','SELECT','018',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60_ABSENCES','RD','SELECT','019',NULL,'TGE_ABSENCES','DATE_DEBUT','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_ABSENCES','RD','SELECT','020',NULL,'TGE_REF_PAC','PERIODEENCOURS','6',NULL,'FALSE','@COLONNE_CIBLE@||''01''',NULL
'60_ABSENCES','RD','SELECT','021',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','022','TT',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','023',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','024',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','025',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60_ABSENCES','RD','SELECT','026',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT','027',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60_ABSENCES','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','distinct TGE_INCIDENTS_PAIE.CLE_ABSENCE',NULL
'60_ABSENCES','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60_ABSENCES','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'60_ABSENCES','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_INCIDENTS_PAIE',NULL
'60_ABSENCES','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES',NULL
'60_ABSENCES','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PRE',NULL
'60_ABSENCES','RD','FROM','005',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'60_ABSENCES','RD','FROM','006',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_PERIODE_RECUEIL_PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'60_ABSENCES','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.NUMPAC = TGE_REF_PRE.NUMPAC',NULL
'60_ABSENCES','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MATRIC = DAC.MATRIC',NULL
'60_ABSENCES','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.ID = TGE_INCIDENTS_PAIE.CLE_ABSENCE',NULL
'60_ABSENCES','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.NUMPAC = TGE_PERIODE_RECUEIL_PAIEZAD.NUMPAC',NULL
'60_ABSENCES','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_INCIDENTS_PAIE.PAIEZAD = TGE_PERIODE_RECUEIL_PAIEZAD.PAIEZAD',NULL
'60_ABSENCES','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MOTIF = TGE_REF_PRE.CODE_INCIDENT',NULL
'60_ABSENCES','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.RUB_ECHANGE is not null',NULL
'60_ABSENCES','RD','WHERE','012',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.ORIGINE is null or TGE_INCIDENTS_PAIE.ORIGINE = ''T'' or TGE_INCIDENTS_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_T2 = ''W'' or ( MODE_T2 = ''R'' and ENVOI_MODE_R = ''O'' )))) ',NULL
'60_ABSENCES','RD','WHERE','013',NULL,NULL,NULL,NULL,NULL,NULL,'and (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' or (TGE_INCIDENTS_PAIE.TYPE_IP=''T'' and TGE_REF_PAC.ENVOI_HP = ''O''))',NULL
'60_ABSENCES','RD','WHERE','014',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') <= TGE_REF_PAC.PERIODEENCOURS',NULL
'60_ABSENCES','RD','WHERE','015',NULL,NULL,NULL,NULL,NULL,NULL,'and TO_CHAR(TGE_INCIDENTS_PAIE.PERIODE,''YYYYMM'') = TGE_PERIODE_RECUEIL_PAIEZAD.MOIS_PAIE',NULL
'60_ABSENCES','RD','WHERE','016',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_INCIDENTS_PAIE.TYPE_IP = ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_GENERATION_HP and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_GENERATION_HP and tge_ref_pac.envoi_hp =''O'')',NULL
'60_ABSENCES','RD','WHERE','017',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PERIODE_RECUEIL and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PERIODE_RECUEIL)',NULL
'60_ABSENCES','RD','WHERE','018',NULL,NULL,NULL,NULL,NULL,NULL,'or (TGE_INCIDENTS_PAIE.TYPE_IP <> ''T'' and TGE_INCIDENTS_PAIE.DATE_EFFET between TGE_PERIODE_RECUEIL_PAIEZAD.DEBUT_PER_RECUEIL_RETRO and TGE_PERIODE_RECUEIL_PAIEZAD.FIN_PER_RECUEIL_RETRO and tge_ref_pac.gc_retro =''O'' AND RETRO_GC is not null))',NULL
'60_ABSENCES','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_REF_PRE.RUB_ECHANGE',NULL
'60_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','002','60',NULL,NULL,'2','0','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'60_SIMULATION_PAIE','RD','SELECT','010',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','013',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'60_SIMULATION_PAIE','RD','SELECT','014',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'60_SIMULATION_PAIE','RD','SELECT','015',NULL,'SIMU_TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'60_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'60_SIMULATION_PAIE','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','026',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','027',NULL,NULL,NULL,'9',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'60_SIMULATION_PAIE','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'60_SIMULATION_PAIE','RD','SELECT','030',NULL,'SIMU_TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'60_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'60_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'60_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'60_SIMULATION_PAIE','RD','SELECT','036',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','038',NULL,'SIMU_TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'60_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'60_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'60_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'60_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'60_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE',NULL
'60_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'60_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE = ''1''',NULL
'60_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'60_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70','RD','SELECT','001',NULL,'TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'70','RD','SELECT','002','70',NULL,NULL,'2','0','FALSE',NULL,NULL
'70','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','004',NULL,'TGE_DONNEES_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'70','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','007',NULL,'TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','009',NULL,'TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'70','RD','SELECT','010',NULL,'TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','011',NULL,'TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70','RD','SELECT','012',NULL,'TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','013',NULL,'TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70','RD','SELECT','014',NULL,'TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70','RD','SELECT','015',NULL,'TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'70','RD','SELECT','016',NULL,'TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','018',NULL,'TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','020',NULL,'TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','022',NULL,'TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'70','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','024',NULL,'TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','025',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','026',NULL,'TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70','RD','SELECT','027',NULL,'TGE_DONNEES_PAIE','PERIODE_AFFECTATION','9',NULL,'FALSE','CASE WHEN ( nvl(TO_CHAR(@COLONNE_CIBLE@,''YYYYMM''),'''') is null) THEN '''' ELSE CASE WHEN (TGE_REF_PAC.MPE=''S'') THEN TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||'' '' ELSE TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')||''001'' END END',NULL
'70','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'70','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'70','RD','SELECT','030',NULL,'TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'70','RD','SELECT','031',NULL,'TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','032',NULL,'TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','033',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70','RD','SELECT','034',NULL,'TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'70','RD','SELECT','035',NULL,'TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70','RD','SELECT','036',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'70_RETRO','RD','SELECT','036',NULL,'TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','038',NULL,'TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'70','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'70','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'70','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'70','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'70','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(select C.MATRIC,C.PACMAT,max(DACS.CODE_CHRONO) CODE_CHRONO,DACH.PAIEZAD,min(C.DSDCN) DSDCN,max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO from DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH, GAP_TRT_LISTE_MAT L where C.NUMPAC=@@@NUMPAC@@@ and DACH.NUMPAC=@@@NUMPAC@@@ and C.NUMPAC=DACH.NUMPAC and C.PACMAT=DACH.PACMAT and C.NUMCNT=DACH.NUMCNT and C.NUMPAC=DACS.NUMPAC and C.PACMAT=DACS.PACMAT and C.NUMCNT=DACS.NUMCNT and DACH.date_eff = (select MAX(dach2.DATE_EFF) from DIC_ADM_CONTRAT_HISTO dach2 where dach2.numpac =@@@NUMPAC@@@ and c.numpac = dach2.numpac and c.pacmat = dach2.pacmat and c.numcnt = dach2.numcnt and dach2.DATE_EFF <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm''))) and C.DSDCN <=last_day(to_date(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH.DATE_SORTIE_SIT_BO >= add_months((to_date(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) and L.ID_TRT=@@@ID_TRT@@@ and L.NUMPAC=@@@NUMPAC@@@ and C.PACMAT=L.PACMAT group by C.MATRIC,C.PACMAT,DACH.PAIEZAD) DAC',NULL
'70','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE',NULL
'70','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'70','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_DONNEES_PAIE.NUMPAC = @@@NUMPAC@@@',NULL
'70','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'70','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.TYPE_DONNEE in (''2'',''3'')',NULL
'70','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.DERNIER_CODE_OPE <> ''S''',NULL
'70','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'70','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_DONNEES_PAIE.ORIGINE is null or TGE_DONNEES_PAIE.ORIGINE = ''T'' or TGE_DONNEES_PAIE.ORIGINE in ( select CODE_ORIGINE from TGE_REF_ORIGINE_GTA where NUMPAC = @@@NUMPAC@@@ and (MODE_3060 = ''W'' or ( (MODE_3060 = ''R'' or MODE_3060 = ''F'') and ENVOI_MODE_R = ''O'' )))) or TGE_DONNEES_PAIE.CODE_REMPLACEMENT is not null)',NULL
'70','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_DONNEES_PAIE.PERIODE @@@OPERATEUR_RETRO@@@ (SELECT PERIODEENCOURS FROM TGE_REF_PAC WHERE NUMPAC = @@@NUMPAC@@@) and TGE_DONNEES_PAIE.ACTION_RETRO is null',NULL
'70_RETRO','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,' and TGE_DONNEES_PAIE.PERIODE in (SELECT periode_retro FROM gap_trt_mois_retro WHERE id_trt =@@@ID_TRT@@@ and @@@NUMPAC@@@||pacmat=TGE_DONNEES_PAIE.idpacmat) AND TGE_DONNEES_PAIE.ACTION_RETRO is not null ',NULL'70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'70_SIMULATION_PAIE','RD','SELECT','001',NULL,'SIMU_TGE_DONNEES_PAIE','NUMPAC','6','0','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','002','70',NULL,NULL,'2','0','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','004',NULL,'SIMU_TGE_DONNEES_PAIE','PAIEZAD','8','0','TRUE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','007',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_RUBRIQUE','4',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','009',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','13','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(100)'
'70_SIMULATION_PAIE','RD','SELECT','010',NULL,'SIMU_TGE_DONNEES_PAIE','MONTANT','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','011',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70_SIMULATION_PAIE','RD','SELECT','012',NULL,'SIMU_TGE_DONNEES_PAIE','NOMBRE','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','013',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','15','0','TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(10000)'
'70_SIMULATION_PAIE','RD','SELECT','014',NULL,'SIMU_TGE_DONNEES_PAIE','TAUX','1',NULL,'FALSE',NULL,'VALEUR_CONDITIONEE(NULL;0;1) '
'70_SIMULATION_PAIE','RD','SELECT','015',NULL,'SIMU_TGE_DONNEES_PAIE','POURCENTAGE','6',NULL,'TRUE',NULL,'FORMATAGE_MULTIPLI_VALEUR(1000)'
'70_SIMULATION_PAIE','RD','SELECT','016',NULL,'SIMU_TGE_DONNEES_PAIE','DOMAINE_PRCTE','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','017',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','018',NULL,'SIMU_TGE_DONNEES_PAIE','SENS','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','020',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_IMPUTATION','18',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','021',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','022',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_CAISSE','10',NULL,'FALSE',NULL,'VALEUR_CONDITIONNEE_AVEC_AUTRE_COLONNE(TYPE_DONNEE;3;CODE_CAISSE;)'
'70_SIMULATION_PAIE','RD','SELECT','023',NULL,NULL,NULL,'22',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','024',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_DEB_ARRET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','025',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_DEB','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','026',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_RATTACH_FIN','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','027',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE_AFFECTATION','9',NULL,'FALSE','CASE WHEN ( nvl(TO_CHAR(@COLONNE_CIBLE@,''YYYYMM''),'''') is null) THEN '''' ELSE CASE WHEN (TGE_REF_PAC.MPE=''S'') THEN TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||'' '' ELSE TO_CHAR(@COLONNE_CIBLE@,''YYYYMM'')||''001'' END END',NULL
'70_SIMULATION_PAIE','RD','SELECT','028',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'70_SIMULATION_PAIE','RD','SELECT','029',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'70_SIMULATION_PAIE','RD','SELECT','030',NULL,'SIMU_TGE_DONNEES_PAIE','ORIGINE','1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'70_SIMULATION_PAIE','RD','SELECT','031',NULL,'SIMU_TGE_DONNEES_PAIE','CODE_REMPLACEMENT','1',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','032',NULL,'SIMU_TGE_DONNEES_PAIE','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','033',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'70_SIMULATION_PAIE','RD','SELECT','034',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'70_SIMULATION_PAIE','RD','SELECT','035',NULL,'SIMU_TGE_DONNEES_PAIE','DATE_EFFET','8',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')',NULL
'70_SIMULATION_PAIE','RD','SELECT','036',NULL,'SIMU_TGE_DONNEES_PAIE','PERIODE','6',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','037',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','038',NULL,'SIMU_TGE_DONNEES_PAIE','TYPE_TRAITEMENT','2',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','039',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','040',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','041',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'70_SIMULATION_PAIE','RD','SELECT','042',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT','043',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'70_SIMULATION_PAIE','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE',NULL
'70_SIMULATION_PAIE','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'70_SIMULATION_PAIE','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-17) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'70_SIMULATION_PAIE','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE',NULL
'70_SIMULATION_PAIE','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'70_SIMULATION_PAIE','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'SIMU_TGE_DONNEES_PAIE.DOS_NUM = @@@WORKFLOWID@@@',NULL
'70_SIMULATION_PAIE','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'70_SIMULATION_PAIE','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.TYPE_DONNEE in (''2'',''3'')',NULL
'70_SIMULATION_PAIE','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and SIMU_TGE_DONNEES_PAIE.PAIEZAD = DAC.PAIEZAD',NULL
'70_SIMULATION_PAIE','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,SIMU_TGE_DONNEES_PAIE.CODE_RUBRIQUE',NULL
'99','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'99','RD','SELECT','002','99',NULL,NULL,'2','0','FALSE',NULL,NULL
'99','RD','SELECT','003',NULL,NULL,NULL,'12',NULL,'FALSE',NULL,NULL
'99','RD','SELECT','004',NULL,NULL,NULL,'7','0','TRUE',NULL,'FORMATAGE_NBRE_LIGNE'
'99','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'99','RD','SELECT','006',NULL,NULL,NULL,'8','0','TRUE',NULL,'FORMATAGE_NBRE_CARACTERE'
'99','RD','SELECT','007',NULL,NULL,NULL,'204',NULL,'FALSE',NULL,NULL
'99','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'99','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'ANNULATION','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','007','££££',NULL,NULL,'4','0','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','012',NULL,NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'ANNULATION','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'ANNULATION','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'ANNULATION','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'ANNULATION','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'ANNULATION_RETRO','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'ANNULATION_RETRO','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'ANNULATION','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'ANNULATION','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'ANNULATION','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'ANNULATION_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ), TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO)AS(SELECT PACMAT,NUMPAC,PERIODE_RETRO FROM gap_trt_mois_retro WHERE id_trt = @@@ID_TRT@@@)SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC,RETRO.PERIODE_RETRO AS PERIODE, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,TABLE_RETRO RETRO WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND RETRO.NUMPAC =C.NUMPAC  AND RETRO.PACMAT =C.PACMAT AND to_date(RETRO.PERIODE_RETRO,''yyyymm'') >= trunc(DACS.dsdsc,''month'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ,RETRO.PERIODE_RETRO) DAC',NULL'ANNULATION','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and DAC.PAIEZAD not in (select PAIEZAD from DELETED_PAIEZAD where NUMPAC=@@@NUMPAC@@@)',NULL
'ANNULATION','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','001',NULL,'DELETED_PAIEZAD','NUMPAC','6','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','004',NULL,'DELETED_PAIEZAD','PAIEZAD','8','0','TRUE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','007','$$$$',NULL,NULL,'4','0','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','012',NULL,NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','017',NULL,'DELETED_PAIEZAD','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','018',NULL,'DELETED_PAIEZAD','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'ANNULATION_PERIODE_EMPLOI','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD',NULL
'ANNULATION_PERIODE_EMPLOI','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'ANNULATION_PERIODE_EMPLOI','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD.NUMPAC = @@@NUMPAC@@@',NULL
'ANNULATION_PERIODE_EMPLOI','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC=@@@NUMPAC@@@ and (TGE_REF_PAC.MPE is not null and TGE_REF_PAC.MPE <> ''N'')',NULL
'ANNULATION_PERIODE_EMPLOI','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DELETED_PAIEZAD.PAIEZAD',NULL
'IJEDI','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'IJEDI','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'IJEDI','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'IJEDI','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','007','T653',NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','009',NULL,'TGE_ABSENCES','DATE_DEBUT','16',NULL,'FALSE','TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD'')||MOTIF',NULL
'IJEDI','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','012',NULL,'TGE_ABSENCES','DATE_FIN','40',NULL,'FALSE','least(TO_CHAR(@COLONNE_CIBLE@,''YYYYMMDD''),nvl(TO_CHAR(DAC.DATE_SORTIE_SIT_BO,''YYYYMMDD''),''20991231''))',NULL
'IJEDI','RD','SELECT','013',NULL,'TGE_REF_DICOZ','TYPE','1',NULL,'FALSE',NULL,'FORMATAGE_TYPE'
'IJEDI','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,'FORMATAGE_COMPLEMENT_DESCRIPTIF_FROM_TYPE'
'IJEDI','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'IJEDI','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'IJEDI','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','021',NULL,'TGE_ABSENCES','LOGIN_MAJ','8',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','022',NULL,'TGE_ABSENCES','DATE_MAJ','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'IJEDI','RD','SELECT','023',NULL,'TGE_ABSENCES','DATE_MAJ','6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'IJEDI','RD','SELECT','024',NULL,'TGE_REF_PAC','PERIODEENCOURS','8',NULL,'FALSE','@COLONNE_CIBLE@||''01''','FORMATAGE_DATE_EFFET'
'IJEDI','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'IJEDI','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'IJEDI','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'IJEDI','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'IJEDI','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_REF_DICOZ.MASQUE',NULL
'IJEDI','RD','SELECT_EN_PLUS','002',NULL,NULL,NULL,'4',NULL,'FALSE','TO_CHAR(DAC.DSDCN,''YYYYMMDD'') as DSDCN',NULL
'IJEDI','RD','SELECT_EN_PLUS','003',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'IJEDI','RD','SELECT_EN_PLUS','004',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ABSENCES.MOTIF',NULL
'IJEDI','RD','SELECT_EN_PLUS','005',NULL,NULL,NULL,'4',NULL,'FALSE','TGE_ABSENCES.ID',NULL
'IJEDI','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'IJEDI','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES',NULL
'IJEDI','RD','FROM','003',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_DICOZ',NULL
'IJEDI','RD','FROM','004',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'IJEDI','RD','FROM','005',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PRE',NULL
'IJEDI','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_ABSENCES.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','002',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','003',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','004',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.NUMPAC = @@@NUMPAC@@@',NULL
'IJEDI','RD','WHERE','005',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PAC.IJEDI in (''M'',''E'')',NULL
'IJEDI','RD','WHERE','006',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MOTIF = TGE_REF_PRE.CODE_INCIDENT',NULL
'IJEDI','RD','WHERE','007',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_ABSENCES.MATRIC = DAC.MATRIC',NULL
'IJEDI','RD','WHERE','008',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.MOTIF_ABS is not null',NULL
'IJEDI','RD','WHERE','009',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_PRE.OPTION_CONSERV_HISTO = ''A''',NULL
'IJEDI','RD','WHERE','010',NULL,NULL,NULL,NULL,NULL,NULL,'and TGE_REF_DICOZ.ELEMENT = ''T653''',NULL
'IJEDI','RD','WHERE','011',NULL,NULL,NULL,NULL,NULL,NULL,'and ((TGE_ABSENCES.DATE_DEBUT <= DAC.DSDCN and (DAC.DSDCN is null or (TGE_ABSENCES.DATE_FIN >= DAC.DSDCN))) or (TGE_ABSENCES.DATE_DEBUT >= DAC.DSDCN and (DAC.DATE_SORTIE_SIT_BO is null or (TGE_ABSENCES.DATE_DEBUT <= DAC.DATE_SORTIE_SIT_BO))))',NULL
'IJEDI','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'W566','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'W566','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'W566','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'W566','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','007','W566',NULL,NULL,'4','0','FALSE',NULL,NULL
'W566','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','012','200',NULL,NULL,'40',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','013','N',NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'W566','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'W566','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'W566','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'W566','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'W566','RD','SELECT','024',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie;01)'
'W566_RETRO','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'W566','RD','SELECT','025',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'PARAM_ORIGINE(periode_paie)'
'W566_RETRO','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'W566','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'W566','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'W566','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'W566','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC ) DAC',NULL
'W566_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select TO_CHAR(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''YYYYMM'') mois from dual connect by TO_CHAR(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''YYYYMM'' )< @@@PERIODE_PAIE@@@),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO)AS (SELECT PACMAT,NUMPAC,PERIODE_RETRO FROM gap_trt_mois_retro WHERE id_trt =@@@ID_TRT@@@) SELECT C.PACMAT, DACH.PAIEZAD, C.MATRIC,D.mois as periode, MIN(C.DSDCN) DSDCN, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and DACS.NUMCNT = T.NUMCNT and DACS.PAIEZAD = DACH.PAIEZAD and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND D.mois >=(select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ) AND D.mois >=TO_CHAR(DACS.dsdsc,''YYYYMM'') GROUP BY C.PACMAT, DACH.PAIEZAD, C.MATRIC,D.mois ) DAC',NULL
'W566','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'W566','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'W566','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD',NULL
'W566_RETRO','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
'WL70','RD','SELECT','001',NULL,'TGE_REF_PAC','NUMPAC','6','0','FALSE',NULL,NULL
'WL70','RD','SELECT','002','30',NULL,NULL,'2','0','FALSE',NULL,NULL
'WL70','RD','SELECT','003',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','004',NULL,'DAC','PAIEZAD','8','0','TRUE',NULL,NULL
'WL70','RD','SELECT','005',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','006',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','007','WL70',NULL,NULL,'4','0','FALSE',NULL,NULL
'WL70','RD','SELECT','008',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','009',NULL,NULL,NULL,'16',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','010',NULL,NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','011',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','012',NULL,'DAC','DTRETRO','40',NULL,'FALSE',NULL,NULL
'WL70_RETRO','RD','SELECT','012',NULL,'DAC','DSDSC','40',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','013',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','014',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','015',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','016',NULL,NULL,NULL,'75',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','017',NULL,'DAC','PACMAT','8',NULL,'FALSE',NULL,'FORMATAGE_PACMAT'
'WL70','RD','SELECT','018',NULL,'DAC','CODE_CHRONO','6',NULL,'FALSE',NULL,'FORMATAGE_CODE_CHRONO'
'WL70','RD','SELECT','019',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(code_origine)'
'WL70','RD','SELECT','020',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','021','DIF_FSED',NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','022',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'WL70','RD','SELECT','023',NULL,NULL,NULL,'6',NULL,'FALSE',NULL,'FORMATAGE_DATE(HHMNSS)'
'WL70','RD','SELECT','024',NULL,'DAC','PERIODE','8',NULL,'FALSE',NULL,'FORMATAGE_DATE(AAAAMMJJ)'
'WL70','RD','SELECT','025',NULL,'DAC','PERIODE','6',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','026',NULL,NULL,NULL,'8',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','027','TT',NULL,NULL,'2',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','028',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','029',NULL,NULL,NULL,'3',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT','030',NULL,NULL,NULL,'1',NULL,'FALSE',NULL,'PARAM_ORIGINE(TYPE_PAIE)'
'WL70','RD','SELECT','031',NULL,NULL,NULL,'1','E','FALSE',NULL,NULL
'WL70','RD','SELECT','032',NULL,NULL,NULL,'4',NULL,'FALSE',NULL,NULL
'WL70','RD','SELECT_EN_PLUS','001',NULL,NULL,NULL,'4',NULL,'FALSE','DAC.CODE_CHRONO',NULL
'WL70','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT, DACH2.PAIEZAD) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )<= TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO) AS (SELECT PACMAT,NUMPAC,min(PERIODE_RETRO) over (partition by PACMAT, NUMPAC) FROM GAP_RETRO_MATRIC_ALL WHERE NUMPAC = @@@NUMPAC@@@) SELECT C.PACMAT, DACS.PAIEZAD, C.MATRIC, to_char(D.mois,''yyyymm'') as periode,  MIN(DACS.DSDSC) DSDSC, MAX(DACS.DSFSC) DSFSC, MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO, TO_CHAR(trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month''),''ddmmyyyy'') DTRETRO   FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D, TABLE_RETRO R WHERE C.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and R.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'')  AND DACS.PACMAT= R.PACMAT AND DACS.DSDSC <= trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month'') AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois <=trunc(DACS.dsfsc,''month'') GROUP BY C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm''),R.PERIODE_RETRO ) DAC',NULL
'WL70_RETRO','RD','FROM','001',NULL,NULL,NULL,NULL,NULL,NULL,'(WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT, DACH2.PAIEZAD) FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 WHERE L.ID_TRT = @@@ID_TRT@@@ and L.NUMPAC = @@@NUMPAC@@@ and DACH2.NUMPAC = @@@NUMPAC@@@ and DACH2.PACMAT = L.PACMAT and DACH2.DATE_EFF <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')),-@@@NB_MOIS_PAIE_INIT@@@) ),date_R (mois) AS ( select trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'') mois from dual connect by trunc(ADD_MONTHS(TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM''),level-1-24),''month'' )<= TO_DATE(@@@PERIODE_PAIE@@@,''YYYYMM'')),TABLE_RETRO (PACMAT,NUMPAC,PERIODE_RETRO) AS (SELECT PACMAT,NUMPAC,min(PERIODE_RETRO) over (partition by PACMAT, NUMPAC) FROM GAP_RETRO_MATRIC_ALL WHERE NUMPAC = @@@NUMPAC@@@) SELECT C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm'') as periode,  TO_CHAR(MIN(DACS.DSDSC),''ddmmyyyy'') DSDSC, MAX(DACS.DSFSC) DSFSC,MAX(DACS.CODE_CHRONO) CODE_CHRONO, max(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO, TO_CHAR(MIN(DACS.DSDSC),''yyyymm'') MOISCOMP FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH,date_R D, TABLE_RETRO R WHERE C.NUMPAC = @@@NUMPAC@@@ and DACS.NUMPAC = @@@NUMPAC@@@ and DACH.NUMPAC = @@@NUMPAC@@@ and R.NUMPAC = @@@NUMPAC@@@ and C.PACMAT = T.PACMAT and C.NUMCNT = T.NUMCNT and DACH.PACMAT = T.PACMAT and DACH.NUMCNT = T.NUMCNT and DACH.DATE_EFF = T.DATE_EFF and DACS.PACMAT = T.PACMAT AND DACS.PACMAT= R.PACMAT and C.DSDCN <= LAST_DAY(TO_DATE(@@@PERIODE_PAIE@@@,''yyyymm'')) and NVL(DACH.DRPAI2, ''B'') <> ''B'' and C.NATCOL IN (''SAL'',''STA'') AND DACS.DSDSC >= trunc( LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')), ''month'') AND DACS.DSFSC >= LAST_DAY(TO_DATE( R.PERIODE_RETRO, ''yyyymm'')) AND D.mois >=trunc(to_date((select min(RETRO.PERIODE_RETRO) from  table_retro RETRO where RETRO.NUMPAC=C.NUMPAC AND RETRO.PACMAT =C.PACMAT ),''YYYYMM''),''month'') AND D.mois <=trunc(DACS.dsfsc,''month'') GROUP BY C.PACMAT, DACS.PAIEZAD, C.MATRIC,to_char(D.mois,''yyyymm''),R.PERIODE_RETRO ) DAC',NULL
'WL70','RD','FROM','002',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC',NULL
'WL70','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@',NULL
'WL70_RETRO','RD','WHERE','001',NULL,NULL,NULL,NULL,NULL,NULL,'TGE_REF_PAC.NUMPAC = @@@NUMPAC@@@ AND DAC.PERIODE >=DAC.MOISCOMP',NULL
'WL70','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
'WL70_RETRO','RD','ORDER_BY','001',NULL,NULL,NULL,NULL,NULL,NULL,'DAC.PAIEZAD,DAC.PERIODE',NULL
##
TGE_REF_MAPDO
==
DELETE FROM TGE_REF_MAPDO WHERE ELEMENT = 'B502' AND NUMPAC = '*'
'*','B502','**','RD_TXHOR','DIC_ADM_CONTRAT_HISTO',NULL,NULL,NULL,NULL,NULL,'N'
##
TGE_REF_MAPTA
==
DELETE FROM TGE_REF_MAPTA WHERE NUMPAC='*' AND ROWNUMBER='180'
'*','180','DIC_PERIODES_RECUEIL_HIS','AV','DIC_PERIODES_RECUEIL_HIS','A','H2','00',null,null,null
##
TGE_REF_MAPTA
==
DELETE FROM TGE_REF_MAPTA WHERE NUMPAC = '*' and (ROWNUMBER = '181' OR TABLEPHY='DIC_PENSION_ALIM')
'*','181','DIC_PENSION_ALIM','AV','DIC_PENSION_ALIM','A','AVPERS','00',NULL,NULL,NULL
##
TGE_REF_MAPTA
==
DELETE FROM TGE_REF_MAPTA WHERE NUMPAC = '*' and TABLEPHY='DIC_TGE_PERIODES_RECUEIL'
##
TGE_REF_MAPTA
==
DELETE FROM TGE_REF_MAPTA WHERE NUMPAC='*' AND TABLEPHY='DIC_PERIODES_RECUEIL_HIS'
'*','180','DIC_PERIODES_RECUEIL_HIS','AV','DIC_PERIODES_RECUEIL_HIS','A','H2','00',null,null,null
##
TGE_REF_MAPTA
==
delete from TGE_REF_MAPTA where NUMPAC = '*' and (ROWNUMBER = '182' OR TABLEPHY='DIC_C2P_HISTO')
'*','182','DIC_C2P_HISTO',NULL,'DIC_C2P_HISTO','A','AVPERS','00',NULL,NULL,NULL
##
TGE_REF_MAPTA
==
delete from TGE_REF_MAPTA where NUMPAC = '*' and (ROWNUMBER = '183' OR TABLEPHY='DIC_MEDICAL_HISTO')
'*','183','DIC_MEDICAL_HISTO',NULL,'DIC_MEDICAL_HISTO','A','AVPERS','00',NULL,NULL,NULL
##
TGE_REF_STATUT_ZPP
==
DELETE FROM TGE_REF_STATUT_ZPP WHERE CODESTATUT = 'SYNCGES'
'SYNCGES','Synchronisation des matricules avec GESTIL'
##
WKF_BRANCH_GEN
==
delete from WKF_BRANCH_GEN WHERE OP_EMET_NUM = 53803 AND CODE_RETOUR='Valider' AND OP_DEST_NUM = 53800
'53803','Valider','53800','53804','19','false','true','true','false','false','20210728112500','false',null
##
WKF_BRANCH_GEN
==
UPDATE WKF_BRANCH_GEN SET FCT_NUM=19 WHERE FCT_NUM=1 AND OP_EMET_NUM IN (SELECT OP_NUM FROM MP_REF_EVENTS WHERE OP_NUM IS NOT NULL) AND OP_DEST_NUM IN (SELECT OP_NUM FROM WKF_OPERATIONS WHERE OP_STATUTPROC IN ('N','I'))
##
WKF_OPERATIONS
==
delete from WKF_OPERATIONS WHERE OP_NUM = 53803
'53803','5038','INITDEPAPI','Initialiser le départ depuis l''API','0','0','I','true','false','false',null,'_PARAM_DYN_','false','false','false','20210728112500','false','0','false',null,null,null,null,null,'false',null,'0','true'
##
WKF_OPERATIONS
==
UPDATE WKF_OPERATIONS SET OP_ABREV='UX init refus demat', OP_LIBELLE='UX Initialisation refus démat' WHERE OP_NUM=55000
##
WKF_OPERATIONS
==
UPDATE WKF_OPERATIONS SET OP_ABREV='UX val refus demat', OP_LIBELLE='UX validation de la demande démat' WHERE OP_NUM=55001
##
WKF_OPERATIONS
==
UPDATE WKF_OPERATIONS SET OP_ABREV='UX fin demat', OP_LIBELLE='UX fin wkf dématérialisation' WHERE OP_NUM=55002
##
WKF_OP_ROLE
==
delete from WKF_OP_ROLE WHERE OP_NUM = 53803
'53803','3','*'
##
WKF_OP_ROLE
==
delete from WKF_OP_ROLE WHERE OP_NUM in (40203,40201)
'40203','3','*'
'40201','3','*'
##
WKF_OP_ROLE
==
delete from WKF_OP_ROLE WHERE OP_NUM in (51500,51501)
'51500','1','*'
'51501','3','*'
##
WKF_TRANSITIONS
==
delete from WKF_TRANSITIONS WHERE TR_NUM = 53804
'53804','5038','T53804 vers (Init)'
##
TAG_CHARSET=@€éèç
##
META_DONNEE_GENERALE
==
DELETE FROM META_DONNEE_GENERALE WHERE NOM_DONNEE IN ('RD_MODREM','RD_TXHOR') AND COMPANY_ID='*'
##
META_DONNEE_GENERALE (COMPANY_ID,NOM_DONNEE,LIBELLE_DONNEE,NOM_DICTIONNAIRE,TYPE_DONNEE,LONGUEUR_MASQUE_NB_ENTIERS,NB_DECIMAUX,CHECKBOX_VALEUR_ON,CHECKBOX_VALEUR_OFF,MODELE,UTILISATION,ACTIF,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,PERSONNALISE,MINUSCULES_AUTORISEES,NOM_DONNEE_CLE_DIC_REFERENCE,PROPAGER_TOUTES_OCCURRENCES)
'*','RD_MODREM','Mode de rémunération','DIC_ADM_CONTRAT_HISTO','X','1',NULL,NULL,NULL,NULL,'GZ','O',NULL,'1033',NULL,NULL,NULL,NULL,'W'
'*','RD_TXHOR','Taux horaire','DIC_ADM_CONTRAT_HISTO','9','2','3',NULL,NULL,NULL,'GZS','O',NULL,'1033',NULL,NULL,'G',NULL,'W'
##
REF_DONNEE_GENERALE
==
DELETE FROM REF_DONNEE_GENERALE WHERE NOM_DONNEE IN ('RD_MODREM','RD_TXHOR') AND COMPANY_ID='*'
##
REF_DONNEE_GENERALE (COMPANY_ID,NOM_DONNEE,LIBELLE_DONNEE,NOM_DICTIONNAIRE,TYPE_DONNEE,LONGUEUR_MASQUE_NB_ENTIERS,NB_DECIMAUX,CHECKBOX_VALEUR_ON,CHECKBOX_VALEUR_OFF,MODELE,UTILISATION,ACTIF,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,PERSONNALISE,MINUSCULES_AUTORISEES,NOM_DONNEE_CLE_DIC_REFERENCE,PROPAGER_TOUTES_OCCURRENCES)
'*','RD_MODREM','Mode de rémunération','DIC_ADM_CONTRAT_HISTO','X','1',NULL,NULL,NULL,NULL,'GZ','O',NULL,'1033',NULL,NULL,NULL,NULL,'W'
'*','RD_TXHOR','Taux horaire','DIC_ADM_CONTRAT_HISTO','9','2','3',NULL,NULL,NULL,'GZS','O',NULL,'1033',NULL,NULL,'G',NULL,'W'
##
META_DONNEE_ECRAN
==
DELETE FROM META_DONNEE_ECRAN WHERE NOM_DONNEE IN ('RD_MODREM','RD_TXHOR') AND COMPANY_ID='*'
##
META_DONNEE_ECRAN (COMPANY_ID,NOM_DONNEE,NOM_PAGE,LIBELLE_DONNEE,EST_OBLIGATOIRE,MODE_SAISIE,APPELTABLE_NOMPAGE,APPELTABLE_IDREQUETE,APPELTABLE_LISTELIBELLE,APPELTABLE_LISTECHAMPS,APPELTABLE_PARAMETRES,AFFICHE_CHOIX_VIDE_SELECT,VALEUR_DEFAUT,ID_REGLEGESTION_AUT_RD,ID_REGLEGESTION_AUT_CLI,TYPE_REGLEGESTION_AUT_CLI,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,ID_REGLEGESTION_CTL_RD,ID_REGLEGESTION_CTL_CLI,TYPE_REGLEGESTION_CTL_CLI,SEARCH_STRUCTURE_PARAM,REFRESH_AFTER_CHANGE,SPAN_CHECK_VALUE,LIB_ALIGN_TOP,NB_LIGNE_TEXTEAREA,NB_COLONNE_TEXTEAREA)
'*','RD_MODREM','*','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N','B',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','ASS_EMB_CONF_ENTREE_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','ASS_EMB_INIT_ECR5','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','NEW_PEREMP_CONF_ENTREE_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_CHGT_REM_MAN_OP1_REM','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP1_EC3','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP1_EC4','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP1_RECAP1','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP2_EC2','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP3_EC1','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP3_EC4','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP3_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP4_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP5_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP2_EC3','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP2_RE2_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP3_CONF','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP4_CONF','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_INSERT_CONF_ENTREE_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_MUT_SOC_ACCEPT','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','*','Taux horaire','R_RD_AFFICHAGE_TXHOR','text',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','ASS_EMB_CONF_ENTREE_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','ASS_MUT_SOC_ACCEPT','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','NEW_PEREMP_CONF_ENTREE_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP1_EC4','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP1_RECAP1','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP3_EC1','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP3_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP4_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP5_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_OP2_RE2_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_OP3_CONF','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_OP4_CONF','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_INSERT_CONF_ENTREE_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_MUT_SOC_ACCEPT','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
##
REF_DONNEE_ECRAN
==
DELETE FROM REF_DONNEE_ECRAN WHERE NOM_DONNEE IN ('RD_MODREM','RD_TXHOR') AND COMPANY_ID='*'
##
REF_DONNEE_ECRAN (COMPANY_ID,NOM_DONNEE,NOM_PAGE,LIBELLE_DONNEE,EST_OBLIGATOIRE,MODE_SAISIE,APPELTABLE_NOMPAGE,APPELTABLE_IDREQUETE,APPELTABLE_LISTELIBELLE,APPELTABLE_LISTECHAMPS,APPELTABLE_PARAMETRES,AFFICHE_CHOIX_VIDE_SELECT,VALEUR_DEFAUT,ID_REGLEGESTION_AUT_RD,ID_REGLEGESTION_AUT_CLI,TYPE_REGLEGESTION_AUT_CLI,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,ID_REGLEGESTION_CTL_RD,ID_REGLEGESTION_CTL_CLI,TYPE_REGLEGESTION_CTL_CLI,SEARCH_STRUCTURE_PARAM,REFRESH_AFTER_CHANGE,SPAN_CHECK_VALUE,LIB_ALIGN_TOP,NB_LIGNE_TEXTEAREA,NB_COLONNE_TEXTEAREA)
'*','RD_MODREM','*','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N','B',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','ASS_EMB_CONF_ENTREE_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','ASS_EMB_INIT_ECR5','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','NEW_PEREMP_CONF_ENTREE_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_CHGT_REM_MAN_OP1_REM','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP1_EC3','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP1_EC4','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP1_RECAP1','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP2_EC2','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP3_EC1','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP3_EC4','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP3_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP4_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_MAN_OP5_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP2_EC3','Mode de rémunération','R_NPA_AFFICHAGE','text','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP2_RE2_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP3_CONF','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_EMB_OP4_CONF','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_INSERT_CONF_ENTREE_RECAP','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_MODREM','WKF_MUT_SOC_ACCEPT','Mode de rémunération','R_NPA_AFFICHAGE','span','RD_TAB_DEV_MODE_REMUN','1','Code,libellé','#OUI,#OUI',NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','*','Taux horaire','R_RD_AFFICHAGE_TXHOR','text',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','ASS_EMB_CONF_ENTREE_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','ASS_MUT_SOC_ACCEPT','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','NEW_PEREMP_CONF_ENTREE_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP1_EC4','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP1_RECAP1','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP3_EC1','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP3_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP4_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_MAN_OP5_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_OP2_RE2_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_OP3_CONF','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_EMB_OP4_CONF','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_INSERT_CONF_ENTREE_RECAP','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','RD_TXHOR','WKF_MUT_SOC_ACCEPT','Taux horaire','R_RD_AFFICHAGE_TXHOR','span',NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
##
META_GROUPE_DONNEES_INFO
==
DELETE FROM META_GROUPE_DONNEES_INFO WHERE ID_GROUPE IN ('RD_APP_MODREM','RD_APP_REMUN','RD_APP_SALBRUT','RD_APP_TXHOR') AND COMPANY_ID='*'
##
META_GROUPE_DONNEES_INFO (COMPANY_ID,ID_GROUPE,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,EST_ONGLET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,LIBELLE_GROUPE,DESCRIPTION_GROUPE,PERSONNALISE)
'*','RD_APP_MODREM','NPA_AFFICHAGE',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : mode de rémunération',NULL,NULL
'*','RD_APP_REMUN','NPA_AFFICHAGE',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : données rémunération',NULL,NULL
'*','RD_APP_SALBRUT','RD_AFFICHAGE_SAFBA',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : données salaire brut',NULL,NULL
'*','RD_APP_TXHOR','RD_AFFICHAGE_TXHOR',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : donnée taux horaire',NULL,NULL
##
REF_GROUPE_DONNEES_INFO
==
DELETE FROM REF_GROUPE_DONNEES_INFO WHERE ID_GROUPE IN ('RD_APP_MODREM','RD_APP_REMUN','RD_APP_SALBRUT','RD_APP_TXHOR') AND COMPANY_ID='*'
##
REF_GROUPE_DONNEES_INFO (COMPANY_ID,ID_GROUPE,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,EST_ONGLET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,LIBELLE_GROUPE,DESCRIPTION_GROUPE,PERSONNALISE)
'*','RD_APP_MODREM','NPA_AFFICHAGE',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : mode de rémunération',NULL,NULL
'*','RD_APP_REMUN','NPA_AFFICHAGE',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : données rémunération',NULL,NULL
'*','RD_APP_SALBRUT','RD_AFFICHAGE_SAFBA',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : données salaire brut',NULL,NULL
'*','RD_APP_TXHOR','RD_AFFICHAGE_TXHOR',NULL,NULL,'N',NULL,'1033',NULL,'Appointement : donnée taux horaire',NULL,NULL
##
META_GROUPE_DONNEES
==
DELETE FROM META_GROUPE_DONNEES WHERE ID_GROUPE IN ('RD_APP_MODREM','RD_APP_REMUN','RD_APP_SALBRUT','RD_APP_TXHOR') AND COMPANY_ID='*'
##
META_GROUPE_DONNEES (COMPANY_ID,ID_GROUPE,NOM_DONNEE,ORDRE,A_COTE_DONNEE_PRECEDENTE,SUFFIXE_OU_LIBELLE,TABLEAU_REQUETE_NOMPAGE,TABLEAU_REQUETE_IDREQUETE,NOM_PAGE_AJOUT,NOM_PAGE_MODIF,ID_REGLEGESTION_CTL_RD_SUPP,ID_REGLEGESTION_CTL_CLI_SUPP,TYPE_REGLEGESTION_CTL_CLI_SUPP,MASQUER_LE_LIBELLE,DONNEE_CODE_EDITION,MESSAGE_CONFIRMATION,BOUTONS_TABLEAU_MULTIPLE)
'*','RD_APP_MODREM','RD_MODREM','2',NULL,'FDonneeGµ',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#EOL_1','2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#EOL_2','4',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#EOL_3','6',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#GROUPE_1','3',NULL,'RD_APP_SALBRUT',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#GROUPE_2','5',NULL,'RD_APP_SALNET',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#GROUPE_3','7',NULL,'RD_APP_TXHOR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','RD_MODREM','1',NULL,'FDonneeGµ',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','#EOL_1','2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','#EOL_2','4',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','SAFBA','1','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','SAFBA_PRORAT','3','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','ZP895','5','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_TXHOR','RD_TXHOR','2','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
##
REF_GROUPE_DONNEES
==
DELETE FROM REF_GROUPE_DONNEES WHERE ID_GROUPE IN ('RD_APP_MODREM','RD_APP_REMUN','RD_APP_SALBRUT','RD_APP_TXHOR') AND COMPANY_ID='*'
##
REF_GROUPE_DONNEES (COMPANY_ID,ID_GROUPE,NOM_DONNEE,ORDRE,A_COTE_DONNEE_PRECEDENTE,SUFFIXE_OU_LIBELLE,TABLEAU_REQUETE_NOMPAGE,TABLEAU_REQUETE_IDREQUETE,NOM_PAGE_AJOUT,NOM_PAGE_MODIF,ID_REGLEGESTION_CTL_RD_SUPP,ID_REGLEGESTION_CTL_CLI_SUPP,TYPE_REGLEGESTION_CTL_CLI_SUPP,MASQUER_LE_LIBELLE,DONNEE_CODE_EDITION,MESSAGE_CONFIRMATION,BOUTONS_TABLEAU_MULTIPLE)
'*','RD_APP_MODREM','RD_MODREM','2',NULL,'FDonneeGµ',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#EOL_1','2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#EOL_2','4',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#EOL_3','6',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#GROUPE_1','3',NULL,'RD_APP_SALBRUT',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#GROUPE_2','5',NULL,'RD_APP_SALNET',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','#GROUPE_3','7',NULL,'RD_APP_TXHOR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_REMUN','RD_MODREM','1',NULL,'FDonneeGµ',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','#EOL_1','2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','#EOL_2','4',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','SAFBA','1','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','SAFBA_PRORAT','3','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_SALBRUT','ZP895','5','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
'*','RD_APP_TXHOR','RD_TXHOR','2','N','FDonneeGµ€',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL
##
META_REGLEGESTION_DESC
==
DELETE FROM META_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','RD_AFFICHAGE_SAFBA','RD_AFFICHAGE_SALNET','RD_AFFICHAGE_TXHOR','ZA819_*_OBLIG') AND COMPANY_ID='*'
##
META_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','CTL','motif  augmentation oblig. lorsque le salaire maj',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£B","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":4},{"TYPE":"SI","OPERANDE_1":"DONNEE£CHOIX_AUGMENTATION","OPERATEUR":"IN","OPERANDE_2":"VALEUR£I£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":5},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":6},{"TYPE":"SI","OPERANDE_1":"DONNEE£MOTAUI","OPERATEUR":"EQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":7},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£TRAV_SAFBA_OLD","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":8},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£TRAV_SAFBA_OLD","OPERATEUR":"NEQ","OPERANDE_2":"DONNEE£SAFBA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":9},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":10},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENAPP05£NOM_DONNEE_FOCUS=DONNEE^MOTAUI","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":11},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":12},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":13},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":14},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":15}]','motif  augmentation oblig. lorsque le salaire maj','N',NULL,'/*¿ * MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE :¿ * motif  augmentation oblig. lorsque le salaire maj¿ */¿¿if (DIC_DONNEES_VIRTUELLES.RD_MODREM != "B") {¿	return;¿}¿if (DIC_DONNEES_VIRTUELLES.CHOIX_AUGMENTATION.IN("I")) {¿	if (DIC_ADM_CONTRAT_HISTO.MOTAUI == vide && DIC_DONNEES_VIRTUELLES.TRAV_SAFBA_OLD != vide && DIC_DONNEES_VIRTUELLES.TRAV_SAFBA_OLD != DIC_ADM_CONTRAT_HISTO.SAFBA) {¿		ERR("GENAPP05", DIC_ADM_CONTRAT_HISTO.MOTAUI);¿	}¿}¿','motif  augmentation oblig. lorsque le salaire maj'
'*','RD_AFFICHAGE_SAFBA','AFF','Affichage conditionnel SAFBA  : NON NPA et MODREM = B',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£NPA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£STA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£B","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"}]','La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = B','M',NULL,'/*¿ * RD_AFFICHAGE_SAFBA :¿ * La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = B¿ */¿¿if (DIC_ADM_CONTRAT.NATCOL != vide && DIC_ADM_CONTRAT.NATCOL != "NPA" && DIC_ADM_CONTRAT.NATCOL != "STA" && DIC_DONNEES_VIRTUELLES.RD_MODREM == "B") {¿}¿','Affichage conditionnel SAFBA  : NON NPA et MODREM = B'
'*','RD_AFFICHAGE_SALNET','AFF','Affichage conditionnel SALNET  : NON NPA et MODREM = N',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£NPA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£STA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = N','M',NULL,'/*¿ * RD_AFFICHAGE_SALNET :¿ * La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = N¿ */¿¿if (DIC_ADM_CONTRAT.NATCOL != vide && DIC_ADM_CONTRAT.NATCOL != "NPA" && DIC_ADM_CONTRAT.NATCOL != "STA" && DIC_DONNEES_VIRTUELLES.RD_MODREM == "N") {¿}¿','Affichage conditionnel SALNET  : NON NPA et MODREM = N'
'*','RD_AFFICHAGE_TXHOR','AFF','Affichage conditionnel SALNET  : NON NPA et MODREM = T',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£NPA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£STA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£T","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = N','M',NULL,'/*¿ * RD_AFFICHAGE_TXHOR :¿ * La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = T¿ */¿¿if (DIC_ADM_CONTRAT.NATCOL != vide && DIC_ADM_CONTRAT.NATCOL != "NPA" && DIC_ADM_CONTRAT.NATCOL != "STA" && DIC_DONNEES_VIRTUELLES.RD_MODREM == "T") {¿}¿','Affichage conditionnel TXHOR  : NON NPA et MODREM = T'
'*','ZA819_*_OBLIG','CTL','Code horaire de rémunération obligatoire si mode de rémun = taux horaire',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£T","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£ZA819","OPERATEUR":"EQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENHOR48£NOM_DONNEE_FOCUS=DONNEE^ZA819","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Code horaire de rémunération obligatoire si mode de rémun = taux horaire','N',NULL,'/*¿ * ZA819_*_OBLIG :¿ * Code horaire de rémunération obligatoire si mode de rémun = taux horaire¿ */¿¿if (DIC_DONNEES_VIRTUELLES.RD_MODREM == "T" && DIC_ADM_CONTRAT_HISTO.ZA819 == vide) {¿	ERR("GENHOR48", DIC_ADM_CONTRAT_HISTO.ZA819);¿}¿','Code horaire de rémunération obligatoire si mode de rémun = taux horaire'
##
REF_REGLEGESTION_DESC
==
DELETE FROM REF_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','RD_AFFICHAGE_SAFBA','RD_AFFICHAGE_SALNET','RD_AFFICHAGE_TXHOR','ZA819_*_OBLIG') AND COMPANY_ID='*'
##
REF_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','CTL','motif  augmentation oblig. lorsque le salaire maj',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£B","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":4},{"TYPE":"SI","OPERANDE_1":"DONNEE£CHOIX_AUGMENTATION","OPERATEUR":"IN","OPERANDE_2":"VALEUR£I£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":5},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":6},{"TYPE":"SI","OPERANDE_1":"DONNEE£MOTAUI","OPERATEUR":"EQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":7},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£TRAV_SAFBA_OLD","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":8},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£TRAV_SAFBA_OLD","OPERATEUR":"NEQ","OPERANDE_2":"DONNEE£SAFBA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":9},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":10},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENAPP05£NOM_DONNEE_FOCUS=DONNEE^MOTAUI","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":11},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":12},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":13},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":14},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":15}]','motif  augmentation oblig. lorsque le salaire maj','N',NULL,'/*¿ * MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE :¿ * motif  augmentation oblig. lorsque le salaire maj¿ */¿¿if (DIC_DONNEES_VIRTUELLES.RD_MODREM != "B") {¿	return;¿}¿if (DIC_DONNEES_VIRTUELLES.CHOIX_AUGMENTATION.IN("I")) {¿	if (DIC_ADM_CONTRAT_HISTO.MOTAUI == vide && DIC_DONNEES_VIRTUELLES.TRAV_SAFBA_OLD != vide && DIC_DONNEES_VIRTUELLES.TRAV_SAFBA_OLD != DIC_ADM_CONTRAT_HISTO.SAFBA) {¿		ERR("GENAPP05", DIC_ADM_CONTRAT_HISTO.MOTAUI);¿	}¿}¿','motif  augmentation oblig. lorsque le salaire maj'
'*','RD_AFFICHAGE_SAFBA','AFF','Affichage conditionnel SAFBA  : NON NPA et MODREM = B',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£NPA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£STA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£B","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"}]','La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = B','M',NULL,'/*¿ * RD_AFFICHAGE_SAFBA :¿ * La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = B¿ */¿¿if (DIC_ADM_CONTRAT.NATCOL != vide && DIC_ADM_CONTRAT.NATCOL != "NPA" && DIC_ADM_CONTRAT.NATCOL != "STA" && DIC_DONNEES_VIRTUELLES.RD_MODREM == "B") {¿}¿','Affichage conditionnel SAFBA  : NON NPA et MODREM = B'
'*','RD_AFFICHAGE_SALNET','AFF','Affichage conditionnel SALNET  : NON NPA et MODREM = N',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£NPA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£STA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = N','M',NULL,'/*¿ * RD_AFFICHAGE_SALNET :¿ * La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = N¿ */¿¿if (DIC_ADM_CONTRAT.NATCOL != vide && DIC_ADM_CONTRAT.NATCOL != "NPA" && DIC_ADM_CONTRAT.NATCOL != "STA" && DIC_DONNEES_VIRTUELLES.RD_MODREM == "N") {¿}¿','Affichage conditionnel SALNET  : NON NPA et MODREM = N'
'*','RD_AFFICHAGE_TXHOR','AFF','Affichage conditionnel SALNET  : NON NPA et MODREM = T',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£NPA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£NATCOL","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£STA","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£T","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = N','M',NULL,'/*¿ * RD_AFFICHAGE_TXHOR :¿ * La donnée ne doit pas s''afficher si NPA. Elle ne s''affiche que si MODREM = T¿ */¿¿if (DIC_ADM_CONTRAT.NATCOL != vide && DIC_ADM_CONTRAT.NATCOL != "NPA" && DIC_ADM_CONTRAT.NATCOL != "STA" && DIC_DONNEES_VIRTUELLES.RD_MODREM == "T") {¿}¿','Affichage conditionnel TXHOR  : NON NPA et MODREM = T'
'*','ZA819_*_OBLIG','CTL','Code horaire de rémunération obligatoire si mode de rémun = taux horaire',NULL,'1033',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£RD_MODREM","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£T","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£ZA819","OPERATEUR":"EQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENHOR48£NOM_DONNEE_FOCUS=DONNEE^ZA819","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Code horaire de rémunération obligatoire si mode de rémun = taux horaire','N',NULL,'/*¿ * ZA819_*_OBLIG :¿ * Code horaire de rémunération obligatoire si mode de rémun = taux horaire¿ */¿¿if (DIC_DONNEES_VIRTUELLES.RD_MODREM == "T" && DIC_ADM_CONTRAT_HISTO.ZA819 == vide) {¿	ERR("GENHOR48", DIC_ADM_CONTRAT_HISTO.ZA819);¿}¿','Code horaire de rémunération obligatoire si mode de rémun = taux horaire'
##
META_REGLEGESTION
==
DELETE FROM META_REGLEGESTION WHERE ID_REGLEGESTION IN ('MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','RD_AFFICHAGE_SAFBA','RD_AFFICHAGE_SALNET','RD_AFFICHAGE_TXHOR','ZA819_*_OBLIG') AND COMPANY_ID='*'
##
META_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','1',NULL,'DONNEE£RD_MODREMµVALEUR£BµNEQ',NULL,NULL,'2','3'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','2','££','FIN','££','£','FIN','FIN'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','3',NULL,'DONNEE£CHOIX_AUGMENTATIONµVALEUR£I£µIN',NULL,NULL,'4','FIN'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','4',NULL,'DONNEE£MOTAUIµ@vide££µEQµDONNEE£TRAV_SAFBA_OLDµ@vide££µNEQµ#ET#µDONNEE£TRAV_SAFBA_OLDµDONNEE£SAFBAµNEQµ#ET#',NULL,NULL,'7','FIN'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','7','££','ERR','CODEERREUR£GENAPP05£NOM_DONNEE_FOCUS=DONNEE^MOTAUI','£','FIN','FIN'
'*','RD_AFFICHAGE_SAFBA','1',NULL,'DONNEE£NATCOLµ@vide££µNEQµDONNEE£NATCOLµVALEUR£NPAµNEQµ#ET#µDONNEE£NATCOLµVALEUR£STAµNEQµ#ET#µDONNEE£RD_MODREMµVALEUR£BµEQµ#ET#',NULL,NULL,'FIN','FIN'
'*','RD_AFFICHAGE_SALNET','1',NULL,'DONNEE£NATCOLµ@vide£µNEQµDONNEE£NATCOLµVALEUR£NPAµNEQµ#ET#µDONNEE£NATCOLµVALEUR£STAµNEQµ#ET#µDONNEE£RD_MODREMµVALEUR£NµEQµ#ET#',NULL,NULL,'FIN','FIN'
'*','RD_AFFICHAGE_TXHOR','1',NULL,'DONNEE£NATCOLµ@vide£µNEQµDONNEE£NATCOLµVALEUR£NPAµNEQµ#ET#µDONNEE£NATCOLµVALEUR£STAµNEQµ#ET#µDONNEE£RD_MODREMµVALEUR£TµEQµ#ET#',NULL,NULL,'FIN','FIN'
'*','ZA819_*_OBLIG','1',NULL,'DONNEE£RD_MODREMµVALEUR£TµEQµDONNEE£ZA819µ@vide£µEQµ#ET#',NULL,NULL,'3','FIN'
'*','ZA819_*_OBLIG','3','££','ERR','CODEERREUR£GENHOR48£NOM_DONNEE_FOCUS=DONNEE^ZA819','£','FIN','FIN'
##
REF_REGLEGESTION
==
DELETE FROM REF_REGLEGESTION WHERE ID_REGLEGESTION IN ('MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','RD_AFFICHAGE_SAFBA','RD_AFFICHAGE_SALNET','RD_AFFICHAGE_TXHOR','ZA819_*_OBLIG') AND COMPANY_ID='*'
##
REF_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','1',NULL,'DONNEE£RD_MODREMµVALEUR£BµNEQ',NULL,NULL,'2','3'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','2','££','FIN','££','£','FIN','FIN'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','3',NULL,'DONNEE£CHOIX_AUGMENTATIONµVALEUR£I£µIN',NULL,NULL,'4','FIN'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','4',NULL,'DONNEE£MOTAUIµ@vide££µEQµDONNEE£TRAV_SAFBA_OLDµ@vide££µNEQµ#ET#µDONNEE£TRAV_SAFBA_OLDµDONNEE£SAFBAµNEQµ#ET#',NULL,NULL,'7','FIN'
'*','MOTAUI_*_CTL_PRESENCE_OBLIGATOIRE','7','££','ERR','CODEERREUR£GENAPP05£NOM_DONNEE_FOCUS=DONNEE^MOTAUI','£','FIN','FIN'
'*','RD_AFFICHAGE_SAFBA','1',NULL,'DONNEE£NATCOLµ@vide££µNEQµDONNEE£NATCOLµVALEUR£NPAµNEQµ#ET#µDONNEE£NATCOLµVALEUR£STAµNEQµ#ET#µDONNEE£RD_MODREMµVALEUR£BµEQµ#ET#',NULL,NULL,'FIN','FIN'
'*','RD_AFFICHAGE_SALNET','1',NULL,'DONNEE£NATCOLµ@vide£µNEQµDONNEE£NATCOLµVALEUR£NPAµNEQµ#ET#µDONNEE£NATCOLµVALEUR£STAµNEQµ#ET#µDONNEE£RD_MODREMµVALEUR£NµEQµ#ET#',NULL,NULL,'FIN','FIN'
'*','RD_AFFICHAGE_TXHOR','1',NULL,'DONNEE£NATCOLµ@vide£µNEQµDONNEE£NATCOLµVALEUR£NPAµNEQµ#ET#µDONNEE£NATCOLµVALEUR£STAµNEQµ#ET#µDONNEE£RD_MODREMµVALEUR£TµEQµ#ET#',NULL,NULL,'FIN','FIN'
'*','ZA819_*_OBLIG','1',NULL,'DONNEE£RD_MODREMµVALEUR£TµEQµDONNEE£ZA819µ@vide£µEQµ#ET#',NULL,NULL,'3','FIN'
'*','ZA819_*_OBLIG','3','££','ERR','CODEERREUR£GENHOR48£NOM_DONNEE_FOCUS=DONNEE^ZA819','£','FIN','FIN'
##
TAG_CHARSET=@€éèç
##
META_REGLEGESTION_DESC
==
DELETE FROM META_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('RD_AFF_DSDMUT_C','RD_AFF_DSDMUT_E','RD_CTL_DSDMUT_E_INF_DSFMUT_E','RD_CTRL_DATES_CNT_PROF','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','RD_DATES_CTRL_VALIDITE','RD_DSDMUT_C_*_COHERENCE_DATE') AND COMPANY_ID='*'
##
META_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','RD_AFF_DSDMUT_C','AFF','Affichage date début et fin mutuelle CJT si code à Oui',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£MUTCON","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£O","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Affichage date début et fin mutuelle CJT si code à Oui','M',NULL,'/*¿ * RD_AFF_DSDMUT_C :¿ * Affichage date début et fin mutuelle CJT si code à Oui¿ */¿¿if (DIC_CONJOIN.MUTCON == "O") {¿}¿','Affichage date début et fin mutuelle CJT si code à Oui'
'*','RD_AFF_DSDMUT_E','AFF','Affichage date début et fin mutuelle ENF si code à Oui',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£ENFMUT","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£O","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Affichage date début et fin mutuelle ENF si code à Oui','M',NULL,'/*¿ * RD_AFF_DSDMUT_E :¿ * Affichage date début et fin mutuelle ENF si code à Oui¿ */¿¿if (DIC_ENFANT.ENFMUT == "O") {¿}¿','Affichage date début et fin mutuelle ENF si code à Oui'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','CTL','Contrôle Date de début mutuelle ENF inferieure à date de fin',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDMUT_E","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFMUT_E","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_E§DATE_FIN=DONNEE^DSFMUT_E","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£ENFMUT","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDMUT_E","OPERATEUR":"EQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFMUT_E","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"@vide£","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£DSFMUT_E","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','contrôle de cohérence entre Date de début DSDMUT_E  et date de fin DSFMUT_E','N',NULL,'/*¿ * RD_CTL_DSDMUT_E_INF_DSFMUT_E :¿ * contrôle de cohérence entre Date de début DSDMUT_E  et date de fin DSFMUT_E¿ */¿¿if (DIC_ENFANT.DSDMUT_E != vide && DIC_ENFANT.DSFMUT_E != vide) {¿	DTFIN_GT_DTDEB(DIC_ENFANT.DSDMUT_E, DIC_ENFANT.DSFMUT_E);¿}¿if (DIC_ENFANT.ENFMUT == "N") {¿	if (DIC_ENFANT.DSDMUT_E == vide && DIC_ENFANT.DSFMUT_E != vide) {¿		DIC_ENFANT.DSFMUT_E = vide;¿	}¿}¿','Contrôle Date de début mutuelle ENF inferieure à date de fin'
'*','RD_CTRL_DATES_CNT_PROF','CTL','La date fin du CNT Prof doit être postérieure à sa date de début',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDCP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFCP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSFCP","OPERATEUR":"LT","OPERANDE_2":"DONNEE£DSDCP","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GEN00001£NOM_DONNEE_FOCUS=DONNEE^DSFCP","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','La date fin du CNT Prof doit être postérieurs à sa date de début','N',NULL,'/*¿ * RD_CTRL_DATES_CNT_PROF :¿ * La date fin du CNT Prof doit être postérieure à sa date de début¿ */¿¿if (DIC_ADM_CONTRAT_HISTO.DSDCP != vide && DIC_ADM_CONTRAT_HISTO.DSFCP != vide) {¿	if (DIC_ADM_CONTRAT_HISTO.DSFCP < DIC_ADM_CONTRAT_HISTO.DSDCP) {¿		ERR("GEN00001", DIC_ADM_CONTRAT_HISTO.DSFCP);¿	}¿}¿','La date fin du CNT Prof doit être postérieure à sa date de début'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','CTL','Contrôle de cohérence de la date de restitution du véhicule de fonction',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£VEH_DATEREST","OPERATEUR":"EQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":4},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":5},{"TYPE":"SI","OPERANDE_1":"DONNEE£VEH_DATEREST","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":6},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":7},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDCN","OPERATEUR":"GT","OPERANDE_2":"DONNEE£VEH_DATEREST","RESULTAT":"","PAR_OUVR":1,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":8},{"TYPE":"OU_SI","OPERANDE_1":"DONNEE£VEH_DATEATRIB","OPERATEUR":"GT","OPERANDE_2":"DONNEE£VEH_DATEREST","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":1,"FLAG_DELETE":"N","rowIdx":9},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":10},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENWK110£NOM_DONNEE_FOCUS=DONNEE^VEH_DATEREST","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":11},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":12},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":13},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":14},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":15}]','La date de restitution du véhicule de fonction doit être postérieure à la date d''attribution et à la date début de contrat','N',NULL,'/*¿ * RD_CTRL_DATE_RESTIT_VEH_CONTRAT :¿ * La date de restitution du véhicule de fonction doit être postérieure à la date d''attribution et à la date début de contrat¿ */¿¿if (ECR_NWF() && DIC_ADM_CONTRAT_HISTO.VEH_DATEREST == vide) {¿	return;¿}¿if (DIC_ADM_CONTRAT_HISTO.VEH_DATEREST != vide) {¿	if ((DIC_ADM_CONTRAT.DSDCN > DIC_ADM_CONTRAT_HISTO.VEH_DATEREST || DIC_ADM_CONTRAT_HISTO.VEH_DATEATRIB > DIC_ADM_CONTRAT_HISTO.VEH_DATEREST)) {¿		ERR("GENWK110", DIC_ADM_CONTRAT_HISTO.VEH_DATEREST);¿	}¿}¿','Contrôle de cohérence de la date de restitution du véhicule de fonction (doit être > date attribution et DSDCN)'
'*','RD_DATES_CTRL_VALIDITE','CTL','Contrôle cohérence date naturalisation et date entrée en France  / date naissance / date du jour',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"@donneecourante£","OPERATEUR":"EQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DATE_LT_DTJOUR£DATE=@donneecourante","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSNAI§DATE_FIN=@donneecourante","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0}]','Contrôle cohérence date naturalisation et date entrée en France valorisées avec date naissance et date du jour','N',NULL,'/*¿ * RD_DATES_CTRL_VALIDITE :¿ * Contrôle cohérence date naturalisation et date entrée en France valorisées avec date naissance et date du jour¿ */¿¿if (donneecourante == vide) {¿	return;¿}¿DATE_LT_DTJOUR(donneecourante);¿DTFIN_GT_DTDEB(DIC_ADM_PERSO.DSNAI, donneecourante);¿','Contrôle cohérence date naturalisation et date entrée en France  / date naissance / date du jour'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','CTL','Contrôle cohérence date début mutuelle CJT',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£MUTCON","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£O","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£ABS_DONNEE_OBL£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£PRES_DONNEE_INT£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDMUT_C","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFMUT_C","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_C§DATE_FIN=DONNEE^DSFMUT_C","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Vérification de la cohérence entre l''indicateur "A charge mutuelle" et les dates de mutuelle de l''écran conjoint.¿- La date de début est obligatoire lorsque le FLAG est  valorisé à Oui¿- La date de début est interdite lorsque le FLAG est valorisé à Non¿- Lorsque les deux dates sont valorisées, un contrôle de cohérence vérifie que la date de début est inférieure  à la date de fin','N',NULL,'/*¿ * RD_DSDMUT_C_*_COHERENCE_DATE :¿ * Vérification de la cohérence entre l''indicateur "A charge mutuelle" et les dates de mutuelle de l''écran conjoint.¿ * - La date de début est obligatoire lorsque le FLAG est  valorisé à Oui¿ * - La date de début est interdite lorsque le FLAG est valorisé à Non¿ * - Lorsque les deux dates sont valorisées, un contrôle de cohérence vérifie que la date de début est inférieure  à la date de fin¿ */¿¿if (DIC_CONJOIN.MUTCON == "O") {¿	ABS_DONNEE_OBL(DIC_CONJOIN.DSDMUT_C);¿} else {¿	PRES_DONNEE_INT(DIC_CONJOIN.DSDMUT_C);¿}¿if (DIC_CONJOIN.DSDMUT_C != vide && DIC_CONJOIN.DSFMUT_C != vide) {¿	DTFIN_GT_DTDEB(DIC_CONJOIN.DSDMUT_C, DIC_CONJOIN.DSFMUT_C);¿}¿','Contrôle cohérence date début mutuelle CJT'
##
REF_REGLEGESTION_DESC
==
DELETE FROM REF_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('RD_AFF_DSDMUT_C','RD_AFF_DSDMUT_E','RD_CTL_DSDMUT_E_INF_DSFMUT_E','RD_CTRL_DATES_CNT_PROF','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','RD_DATES_CTRL_VALIDITE','RD_DSDMUT_C_*_COHERENCE_DATE') AND COMPANY_ID='*'
##
REF_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','RD_AFF_DSDMUT_C','AFF','Affichage date début et fin mutuelle CJT si code à Oui',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£MUTCON","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£O","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Affichage date début et fin mutuelle CJT si code à Oui','M',NULL,'/*¿ * RD_AFF_DSDMUT_C :¿ * Affichage date début et fin mutuelle CJT si code à Oui¿ */¿¿if (DIC_CONJOIN.MUTCON == "O") {¿}¿','Affichage date début et fin mutuelle CJT si code à Oui'
'*','RD_AFF_DSDMUT_E','AFF','Affichage date début et fin mutuelle ENF si code à Oui',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£ENFMUT","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£O","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Affichage date début et fin mutuelle ENF si code à Oui','M',NULL,'/*¿ * RD_AFF_DSDMUT_E :¿ * Affichage date début et fin mutuelle ENF si code à Oui¿ */¿¿if (DIC_ENFANT.ENFMUT == "O") {¿}¿','Affichage date début et fin mutuelle ENF si code à Oui'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','CTL','Contrôle Date de début mutuelle ENF inferieure à date de fin',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDMUT_E","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFMUT_E","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_E§DATE_FIN=DONNEE^DSFMUT_E","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£ENFMUT","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDMUT_E","OPERATEUR":"EQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFMUT_E","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"@vide£","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£DSFMUT_E","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','contrôle de cohérence entre Date de début DSDMUT_E  et date de fin DSFMUT_E','N',NULL,'/*¿ * RD_CTL_DSDMUT_E_INF_DSFMUT_E :¿ * contrôle de cohérence entre Date de début DSDMUT_E  et date de fin DSFMUT_E¿ */¿¿if (DIC_ENFANT.DSDMUT_E != vide && DIC_ENFANT.DSFMUT_E != vide) {¿	DTFIN_GT_DTDEB(DIC_ENFANT.DSDMUT_E, DIC_ENFANT.DSFMUT_E);¿}¿if (DIC_ENFANT.ENFMUT == "N") {¿	if (DIC_ENFANT.DSDMUT_E == vide && DIC_ENFANT.DSFMUT_E != vide) {¿		DIC_ENFANT.DSFMUT_E = vide;¿	}¿}¿','Contrôle Date de début mutuelle ENF inferieure à date de fin'
'*','RD_CTRL_DATES_CNT_PROF','CTL','La date fin du CNT Prof doit être postérieure à sa date de début',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDCP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFCP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSFCP","OPERATEUR":"LT","OPERANDE_2":"DONNEE£DSDCP","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GEN00001£NOM_DONNEE_FOCUS=DONNEE^DSFCP","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','La date fin du CNT Prof doit être postérieurs à sa date de début','N',NULL,'/*¿ * RD_CTRL_DATES_CNT_PROF :¿ * La date fin du CNT Prof doit être postérieure à sa date de début¿ */¿¿if (DIC_ADM_CONTRAT_HISTO.DSDCP != vide && DIC_ADM_CONTRAT_HISTO.DSFCP != vide) {¿	if (DIC_ADM_CONTRAT_HISTO.DSFCP < DIC_ADM_CONTRAT_HISTO.DSDCP) {¿		ERR("GEN00001", DIC_ADM_CONTRAT_HISTO.DSFCP);¿	}¿}¿','La date fin du CNT Prof doit être postérieure à sa date de début'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','CTL','Contrôle de cohérence de la date de restitution du véhicule de fonction',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£VEH_DATEREST","OPERATEUR":"EQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":4},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":5},{"TYPE":"SI","OPERANDE_1":"DONNEE£VEH_DATEREST","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":6},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":7},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDCN","OPERATEUR":"GT","OPERANDE_2":"DONNEE£VEH_DATEREST","RESULTAT":"","PAR_OUVR":1,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":8},{"TYPE":"OU_SI","OPERANDE_1":"DONNEE£VEH_DATEATRIB","OPERATEUR":"GT","OPERANDE_2":"DONNEE£VEH_DATEREST","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":1,"FLAG_DELETE":"N","rowIdx":9},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":10},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENWK110£NOM_DONNEE_FOCUS=DONNEE^VEH_DATEREST","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":11},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":12},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":13},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":14},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":15}]','La date de restitution du véhicule de fonction doit être postérieure à la date d''attribution et à la date début de contrat','N',NULL,'/*¿ * RD_CTRL_DATE_RESTIT_VEH_CONTRAT :¿ * La date de restitution du véhicule de fonction doit être postérieure à la date d''attribution et à la date début de contrat¿ */¿¿if (ECR_NWF() && DIC_ADM_CONTRAT_HISTO.VEH_DATEREST == vide) {¿	return;¿}¿if (DIC_ADM_CONTRAT_HISTO.VEH_DATEREST != vide) {¿	if ((DIC_ADM_CONTRAT.DSDCN > DIC_ADM_CONTRAT_HISTO.VEH_DATEREST || DIC_ADM_CONTRAT_HISTO.VEH_DATEATRIB > DIC_ADM_CONTRAT_HISTO.VEH_DATEREST)) {¿		ERR("GENWK110", DIC_ADM_CONTRAT_HISTO.VEH_DATEREST);¿	}¿}¿','Contrôle de cohérence de la date de restitution du véhicule de fonction (doit être > date attribution et DSDCN)'
'*','RD_DATES_CTRL_VALIDITE','CTL','Contrôle cohérence date naturalisation et date entrée en France  / date naissance / date du jour',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"@donneecourante£","OPERATEUR":"EQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DATE_LT_DTJOUR£DATE=@donneecourante","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSNAI§DATE_FIN=@donneecourante","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0}]','Contrôle cohérence date naturalisation et date entrée en France valorisées avec date naissance et date du jour','N',NULL,'/*¿ * RD_DATES_CTRL_VALIDITE :¿ * Contrôle cohérence date naturalisation et date entrée en France valorisées avec date naissance et date du jour¿ */¿¿if (donneecourante == vide) {¿	return;¿}¿DATE_LT_DTJOUR(donneecourante);¿DTFIN_GT_DTDEB(DIC_ADM_PERSO.DSNAI, donneecourante);¿','Contrôle cohérence date naturalisation et date entrée en France  / date naissance / date du jour'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','CTL','Contrôle cohérence date début mutuelle CJT',NULL,'1052',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£MUTCON","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£O","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£ABS_DONNEE_OBL£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£PRES_DONNEE_INT£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDMUT_C","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£DSFMUT_C","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FCTL","OPERANDE_2":"FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_C§DATE_FIN=DONNEE^DSFMUT_C","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Vérification de la cohérence entre l''indicateur "A charge mutuelle" et les dates de mutuelle de l''écran conjoint.¿- La date de début est obligatoire lorsque le FLAG est  valorisé à Oui¿- La date de début est interdite lorsque le FLAG est valorisé à Non¿- Lorsque les deux dates sont valorisées, un contrôle de cohérence vérifie que la date de début est inférieure  à la date de fin','N',NULL,'/*¿ * RD_DSDMUT_C_*_COHERENCE_DATE :¿ * Vérification de la cohérence entre l''indicateur "A charge mutuelle" et les dates de mutuelle de l''écran conjoint.¿ * - La date de début est obligatoire lorsque le FLAG est  valorisé à Oui¿ * - La date de début est interdite lorsque le FLAG est valorisé à Non¿ * - Lorsque les deux dates sont valorisées, un contrôle de cohérence vérifie que la date de début est inférieure  à la date de fin¿ */¿¿if (DIC_CONJOIN.MUTCON == "O") {¿	ABS_DONNEE_OBL(DIC_CONJOIN.DSDMUT_C);¿} else {¿	PRES_DONNEE_INT(DIC_CONJOIN.DSDMUT_C);¿}¿if (DIC_CONJOIN.DSDMUT_C != vide && DIC_CONJOIN.DSFMUT_C != vide) {¿	DTFIN_GT_DTDEB(DIC_CONJOIN.DSDMUT_C, DIC_CONJOIN.DSFMUT_C);¿}¿','Contrôle cohérence date début mutuelle CJT'
##
META_REGLEGESTION
==
DELETE FROM META_REGLEGESTION WHERE ID_REGLEGESTION IN ('RD_AFF_DSDMUT_C','RD_AFF_DSDMUT_E','RD_CTL_DSDMUT_E_INF_DSFMUT_E','RD_CTRL_DATES_CNT_PROF','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','RD_DATES_CTRL_VALIDITE','RD_DSDMUT_C_*_COHERENCE_DATE') AND COMPANY_ID='*'
##
META_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','RD_AFF_DSDMUT_C','1',NULL,'DONNEE£MUTCONµVALEUR£OµEQ',NULL,NULL,'FIN','FIN'
'*','RD_AFF_DSDMUT_E','1',NULL,'DONNEE£ENFMUTµVALEUR£OµEQ',NULL,NULL,'FIN','FIN'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','1',NULL,'DONNEE£DSDMUT_Eµ@vide£µNEQµDONNEE£DSFMUT_Eµ@vide£µNEQµ#ET#',NULL,NULL,'3','4'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','3','££','FCTL','FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_E§DATE_FIN=DONNEE^DSFMUT_E','£','4','4'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','4',NULL,'DONNEE£ENFMUTµVALEUR£NµEQ',NULL,NULL,'5','FIN'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','5',NULL,'DONNEE£DSDMUT_Eµ@vide£µEQµDONNEE£DSFMUT_Eµ@vide£µNEQµ#ET#',NULL,NULL,'7','FIN'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','7','@vide£','VAL','££','DONNEE£DSFMUT_E','FIN','FIN'
'*','RD_CTRL_DATES_CNT_PROF','1',NULL,'DONNEE£DSDCPµ@vide£µNEQµDONNEE£DSFCPµ@vide£µNEQµ#ET#',NULL,NULL,'3','FIN'
'*','RD_CTRL_DATES_CNT_PROF','3',NULL,'DONNEE£DSFCPµDONNEE£DSDCPµLT',NULL,NULL,'4','FIN'
'*','RD_CTRL_DATES_CNT_PROF','4','££','ERR','CODEERREUR£GEN00001£NOM_DONNEE_FOCUS=DONNEE^DSFCP','£','FIN','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','1',NULL,'££µ££µECR_NWFµDONNEE£VEH_DATERESTµ@vide££µEQµ#ET#',NULL,NULL,'3','4'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','3','££','FIN','££','£','FIN','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','4',NULL,'DONNEE£VEH_DATERESTµ@vide££µNEQ',NULL,NULL,'5','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','5',NULL,'DONNEE£DSDCNµDONNEE£VEH_DATERESTµGTµDONNEE£VEH_DATEATRIBµDONNEE£VEH_DATERESTµGTµ#OU#',NULL,NULL,'7','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','7','££','ERR','CODEERREUR£GENWK110£NOM_DONNEE_FOCUS=DONNEE^VEH_DATEREST','£','FIN','FIN'
'*','RD_DATES_CTRL_VALIDITE','1',NULL,'@donneecourante£µ@vide£µEQ',NULL,NULL,'2','3'
'*','RD_DATES_CTRL_VALIDITE','2','££','FIN','££','£','FIN','FIN'
'*','RD_DATES_CTRL_VALIDITE','3','££','FCTL','FONCTION£DATE_LT_DTJOUR£DATE=@donneecourante','£',NULL,NULL
'*','RD_DATES_CTRL_VALIDITE','4','££','FCTL','FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSNAI§DATE_FIN=@donneecourante','£',NULL,NULL
'*','RD_DSDMUT_C_*_COHERENCE_DATE','1',NULL,'DONNEE£MUTCONµVALEUR£OµEQ',NULL,NULL,'2','3'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','2','££','FCTL','FONCTION£ABS_DONNEE_OBL£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=','£','4','4'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','3','££','FCTL','FONCTION£PRES_DONNEE_INT£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=','£','4','4'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','4',NULL,'DONNEE£DSDMUT_Cµ@vide£µNEQµDONNEE£DSFMUT_Cµ@vide£µNEQµ#ET#',NULL,NULL,'6','FIN'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','6','££','FCTL','FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_C§DATE_FIN=DONNEE^DSFMUT_C','£','FIN','FIN'
##
REF_REGLEGESTION
==
DELETE FROM REF_REGLEGESTION WHERE ID_REGLEGESTION IN ('RD_AFF_DSDMUT_C','RD_AFF_DSDMUT_E','RD_CTL_DSDMUT_E_INF_DSFMUT_E','RD_CTRL_DATES_CNT_PROF','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','RD_DATES_CTRL_VALIDITE','RD_DSDMUT_C_*_COHERENCE_DATE') AND COMPANY_ID='*'
##
REF_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','RD_AFF_DSDMUT_C','1',NULL,'DONNEE£MUTCONµVALEUR£OµEQ',NULL,NULL,'FIN','FIN'
'*','RD_AFF_DSDMUT_E','1',NULL,'DONNEE£ENFMUTµVALEUR£OµEQ',NULL,NULL,'FIN','FIN'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','1',NULL,'DONNEE£DSDMUT_Eµ@vide£µNEQµDONNEE£DSFMUT_Eµ@vide£µNEQµ#ET#',NULL,NULL,'3','4'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','3','££','FCTL','FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_E§DATE_FIN=DONNEE^DSFMUT_E','£','4','4'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','4',NULL,'DONNEE£ENFMUTµVALEUR£NµEQ',NULL,NULL,'5','FIN'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','5',NULL,'DONNEE£DSDMUT_Eµ@vide£µEQµDONNEE£DSFMUT_Eµ@vide£µNEQµ#ET#',NULL,NULL,'7','FIN'
'*','RD_CTL_DSDMUT_E_INF_DSFMUT_E','7','@vide£','VAL','££','DONNEE£DSFMUT_E','FIN','FIN'
'*','RD_CTRL_DATES_CNT_PROF','1',NULL,'DONNEE£DSDCPµ@vide£µNEQµDONNEE£DSFCPµ@vide£µNEQµ#ET#',NULL,NULL,'3','FIN'
'*','RD_CTRL_DATES_CNT_PROF','3',NULL,'DONNEE£DSFCPµDONNEE£DSDCPµLT',NULL,NULL,'4','FIN'
'*','RD_CTRL_DATES_CNT_PROF','4','££','ERR','CODEERREUR£GEN00001£NOM_DONNEE_FOCUS=DONNEE^DSFCP','£','FIN','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','1',NULL,'££µ££µECR_NWFµDONNEE£VEH_DATERESTµ@vide££µEQµ#ET#',NULL,NULL,'3','4'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','3','££','FIN','££','£','FIN','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','4',NULL,'DONNEE£VEH_DATERESTµ@vide££µNEQ',NULL,NULL,'5','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','5',NULL,'DONNEE£DSDCNµDONNEE£VEH_DATERESTµGTµDONNEE£VEH_DATEATRIBµDONNEE£VEH_DATERESTµGTµ#OU#',NULL,NULL,'7','FIN'
'*','RD_CTRL_DATE_RESTIT_VEH_CONTRAT','7','££','ERR','CODEERREUR£GENWK110£NOM_DONNEE_FOCUS=DONNEE^VEH_DATEREST','£','FIN','FIN'
'*','RD_DATES_CTRL_VALIDITE','1',NULL,'@donneecourante£µ@vide£µEQ',NULL,NULL,'2','3'
'*','RD_DATES_CTRL_VALIDITE','2','££','FIN','££','£','FIN','FIN'
'*','RD_DATES_CTRL_VALIDITE','3','££','FCTL','FONCTION£DATE_LT_DTJOUR£DATE=@donneecourante','£',NULL,NULL
'*','RD_DATES_CTRL_VALIDITE','4','££','FCTL','FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSNAI§DATE_FIN=@donneecourante','£',NULL,NULL
'*','RD_DSDMUT_C_*_COHERENCE_DATE','1',NULL,'DONNEE£MUTCONµVALEUR£OµEQ',NULL,NULL,'2','3'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','2','££','FCTL','FONCTION£ABS_DONNEE_OBL£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=','£','4','4'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','3','££','FCTL','FONCTION£PRES_DONNEE_INT£NOM_DONNEE_1=DONNEE^DSDMUT_C§NOM_DONNEE_2=§NOM_DONNEE_3=§NOM_DONNEE_4=§NOM_DONNEE_5=','£','4','4'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','4',NULL,'DONNEE£DSDMUT_Cµ@vide£µNEQµDONNEE£DSFMUT_Cµ@vide£µNEQµ#ET#',NULL,NULL,'6','FIN'
'*','RD_DSDMUT_C_*_COHERENCE_DATE','6','££','FCTL','FONCTION£DTFIN_GT_DTDEB£DATE_DEB=DONNEE^DSDMUT_C§DATE_FIN=DONNEE^DSFMUT_C','£','FIN','FIN'
##
TAG_CHARSET=@€éèç
##
META_REGLEGESTION_DESC
==
DELETE FROM META_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('TRAV_DSFCNP_MASQUEE_SI_VIDE','ZA380_MASQUEE_SI_VIDE','ZMODCNT_MASQUEE_SI_VIDE') AND COMPANY_ID='*'
##
META_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','TRAV_DSFCNP_MASQUEE_SI_VIDE','AFF','la date de fin prévue (TRAV_DSFCNP) est masquée si vide',NULL,'1046',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£TRAV_DSFCNP","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"}]','la date de fin prévue (TRAV_DSFCNP) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)','C',NULL,'/*¿ * TRAV_DSFCNP_MASQUEE_SI_VIDE :¿ * la date de fin prévue (TRAV_DSFCNP) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)¿ */¿¿if (DIC_DONNEES_VIRTUELLES.TRAV_DSFCNP != vide) {¿}¿','la date de fin prévue (TRAV_DSFCNP) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)'
'*','ZA380_MASQUEE_SI_VIDE','AFF','le motif de recours (ZA380) est masquée si vide',NULL,'1046',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','le motif de recours (ZA380) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)','C',NULL,'/*¿ * ZA380_MASQUEE_SI_VIDE :¿ * le motif de recours (ZA380) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)¿ */¿¿if (DIC_ADM_CONTRAT_HISTO.ZA380 != vide) {¿}¿','le motif de recours (ZA380) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)'
'*','ZMODCNT_MASQUEE_SI_VIDE','AFF','le motif d''embauche (ZMODCNT) est masquée si vide',NULL,'1046',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£ZMODCNT","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','lle motif d''embauche (ZMODCNT) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)','C',NULL,'/*¿ * ZMODCNT_MASQUEE_SI_VIDE :¿ * lle motif d''embauche (ZMODCNT) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)¿ */¿¿if (DIC_ADM_CONTRAT_HISTO.ZMODCNT != vide) {¿}¿','le motif d''embauche (ZMODCNT) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)'
##
REF_REGLEGESTION_DESC
==
DELETE FROM REF_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('TRAV_DSFCNP_MASQUEE_SI_VIDE','ZA380_MASQUEE_SI_VIDE','ZMODCNT_MASQUEE_SI_VIDE') AND COMPANY_ID='*'
##
REF_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','TRAV_DSFCNP_MASQUEE_SI_VIDE','AFF','la date de fin prévue (TRAV_DSFCNP) est masquée si vide',NULL,'1046',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£TRAV_DSFCNP","OPERATEUR":"NEQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N"}]','la date de fin prévue (TRAV_DSFCNP) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)','C',NULL,'/*¿ * TRAV_DSFCNP_MASQUEE_SI_VIDE :¿ * la date de fin prévue (TRAV_DSFCNP) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)¿ */¿¿if (DIC_DONNEES_VIRTUELLES.TRAV_DSFCNP != vide) {¿}¿','la date de fin prévue (TRAV_DSFCNP) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)'
'*','ZA380_MASQUEE_SI_VIDE','AFF','le motif de recours (ZA380) est masquée si vide',NULL,'1046',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','le motif de recours (ZA380) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)','C',NULL,'/*¿ * ZA380_MASQUEE_SI_VIDE :¿ * le motif de recours (ZA380) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)¿ */¿¿if (DIC_ADM_CONTRAT_HISTO.ZA380 != vide) {¿}¿','le motif de recours (ZA380) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)'
'*','ZMODCNT_MASQUEE_SI_VIDE','AFF','le motif d''embauche (ZMODCNT) est masquée si vide',NULL,'1046',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£ZMODCNT","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','lle motif d''embauche (ZMODCNT) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)','C',NULL,'/*¿ * ZMODCNT_MASQUEE_SI_VIDE :¿ * lle motif d''embauche (ZMODCNT) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)¿ */¿¿if (DIC_ADM_CONTRAT_HISTO.ZMODCNT != vide) {¿}¿','le motif d''embauche (ZMODCNT) est masquée si vide (données contrat affichées en rappel dans processus écran infos départ)'
##
META_REGLEGESTION
==
DELETE FROM META_REGLEGESTION WHERE ID_REGLEGESTION IN ('TRAV_DSFCNP_MASQUEE_SI_VIDE','ZA380_MASQUEE_SI_VIDE','ZMODCNT_MASQUEE_SI_VIDE') AND COMPANY_ID='*'
##
META_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','TRAV_DSFCNP_MASQUEE_SI_VIDE','1',NULL,'DONNEE£TRAV_DSFCNPµ@vide££µNEQ',NULL,NULL,'FIN','FIN'
'*','ZA380_MASQUEE_SI_VIDE','1',NULL,'DONNEE£ZA380µ@vide£µNEQ',NULL,NULL,'FIN','FIN'
'*','ZMODCNT_MASQUEE_SI_VIDE','1',NULL,'DONNEE£ZMODCNTµ@vide£µNEQ',NULL,NULL,'FIN','FIN'
##
REF_REGLEGESTION
==
DELETE FROM REF_REGLEGESTION WHERE ID_REGLEGESTION IN ('TRAV_DSFCNP_MASQUEE_SI_VIDE','ZA380_MASQUEE_SI_VIDE','ZMODCNT_MASQUEE_SI_VIDE') AND COMPANY_ID='*'
##
REF_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','TRAV_DSFCNP_MASQUEE_SI_VIDE','1',NULL,'DONNEE£TRAV_DSFCNPµ@vide££µNEQ',NULL,NULL,'FIN','FIN'
'*','ZA380_MASQUEE_SI_VIDE','1',NULL,'DONNEE£ZA380µ@vide£µNEQ',NULL,NULL,'FIN','FIN'
'*','ZMODCNT_MASQUEE_SI_VIDE','1',NULL,'DONNEE£ZMODCNTµ@vide£µNEQ',NULL,NULL,'FIN','FIN'
##
TAG_CHARSET=@€éèç
##
META_GROUPE_DONNEES_INFO
==
DELETE FROM META_GROUPE_DONNEES_INFO WHERE ID_GROUPE IN ('RD_WKF_ETC_ECR') AND COMPANY_ID='*'
##
META_GROUPE_DONNEES_INFO (COMPANY_ID,ID_GROUPE,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,EST_ONGLET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,LIBELLE_GROUPE,DESCRIPTION_GROUPE,PERSONNALISE)
'*','RD_WKF_ETC_ECR',NULL,NULL,NULL,'N',NULL,'1054',NULL,'Groupe de l''écran unitaire Etat Civil (ETC) pour les processus','Groupe ETC_ECR dédié aux processus (sans les données CJT).',NULL
##
REF_GROUPE_DONNEES_INFO
==
DELETE FROM REF_GROUPE_DONNEES_INFO WHERE ID_GROUPE IN ('RD_WKF_ETC_ECR') AND COMPANY_ID='*'
##
REF_GROUPE_DONNEES_INFO (COMPANY_ID,ID_GROUPE,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,EST_ONGLET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,LIBELLE_GROUPE,DESCRIPTION_GROUPE,PERSONNALISE)
'*','RD_WKF_ETC_ECR',NULL,NULL,NULL,'N',NULL,'1054',NULL,'Groupe de l''écran unitaire Etat Civil (ETC) pour les processus','Groupe ETC_ECR dédié aux processus (sans les données CJT).',NULL
##
META_GROUPE_DONNEES
==
DELETE FROM META_GROUPE_DONNEES WHERE ID_GROUPE IN ('RD_WKF_ETC_ECR') AND COMPANY_ID='*'
##
META_GROUPE_DONNEES (COMPANY_ID,ID_GROUPE,NOM_DONNEE,ORDRE,A_COTE_DONNEE_PRECEDENTE,SUFFIXE_OU_LIBELLE,TABLEAU_REQUETE_NOMPAGE,TABLEAU_REQUETE_IDREQUETE,NOM_PAGE_AJOUT,NOM_PAGE_MODIF,ID_REGLEGESTION_CTL_RD_SUPP,ID_REGLEGESTION_CTL_CLI_SUPP,TYPE_REGLEGESTION_CTL_CLI_SUPP,MASQUER_LE_LIBELLE,DONNEE_CODE_EDITION,MESSAGE_CONFIRMATION,BOUTONS_TABLEAU_MULTIPLE,TITRE_CMP_SORTIE_MANAGER,DEFAULT_VALUE_SORTIE_MANAGER)
'*','RD_WKF_ETC_ECR','#EOL_1','7','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_13','113','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_14','120','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_2','13','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_26','19',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_27','42',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_31','149',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_32','3',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_33','46',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_34','16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_35','51',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_5','121',NULL,'Famille et personnes à charge',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','AGEAG','37','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DEFPRO','74','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DEPNAI','44','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DSNAI','36','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DSSITF','119','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','LINAIS','45','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','MATREP','5',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NATACT','57','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NIROM','112',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NOM','14','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NOMJF','15','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NOMUSA','17',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PAYSNA','55','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PERCA','152','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PRENO2','29',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PRENOM','26','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PREUSA','18',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PSEUDO','33','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','SEXE','12','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','SITFAM','118','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','TITRE','11','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_36','38',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_4','30','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_5','34','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_7','56','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_8','69','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_1','94',NULL,'ETC_SECU_NON',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_2','91',NULL,'ETC_SECU_OUI',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_3','49',NULL,'ETC_LINAIS_ET',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_4','50',NULL,'ETC_LINAIS_FR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_5','39',NULL,'ETC_DECES',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_6','122',NULL,'ETC_ENF',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_1','9',NULL,'Identité',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_2','35',NULL,'Naissance',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_3','72',NULL,'Numéro de sécurité sociale',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_4','117',NULL,'Situation familiale',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
##
REF_GROUPE_DONNEES
==
DELETE FROM REF_GROUPE_DONNEES WHERE ID_GROUPE IN ('RD_WKF_ETC_ECR') AND COMPANY_ID='*'
##
REF_GROUPE_DONNEES (COMPANY_ID,ID_GROUPE,NOM_DONNEE,ORDRE,A_COTE_DONNEE_PRECEDENTE,SUFFIXE_OU_LIBELLE,TABLEAU_REQUETE_NOMPAGE,TABLEAU_REQUETE_IDREQUETE,NOM_PAGE_AJOUT,NOM_PAGE_MODIF,ID_REGLEGESTION_CTL_RD_SUPP,ID_REGLEGESTION_CTL_CLI_SUPP,TYPE_REGLEGESTION_CTL_CLI_SUPP,MASQUER_LE_LIBELLE,DONNEE_CODE_EDITION,MESSAGE_CONFIRMATION,BOUTONS_TABLEAU_MULTIPLE,TITRE_CMP_SORTIE_MANAGER,DEFAULT_VALUE_SORTIE_MANAGER)
'*','RD_WKF_ETC_ECR','#EOL_1','7','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_13','113','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_14','120','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_2','13','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_26','19',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_27','42',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_31','149',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_32','3',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_33','46',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_34','16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_35','51',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_5','121',NULL,'Famille et personnes à charge',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','AGEAG','37','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DEFPRO','74','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DEPNAI','44','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DSNAI','36','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','DSSITF','119','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','LINAIS','45','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','MATREP','5',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NATACT','57','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NIROM','112',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NOM','14','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NOMJF','15','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','NOMUSA','17',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PAYSNA','55','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PERCA','152','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PRENO2','29',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PRENOM','26','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PREUSA','18',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','PSEUDO','33','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','SEXE','12','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','SITFAM','118','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','TITRE','11','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_36','38',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_4','30','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_5','34','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_7','56','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#EOL_8','69','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_1','94',NULL,'ETC_SECU_NON',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_2','91',NULL,'ETC_SECU_OUI',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_3','49',NULL,'ETC_LINAIS_ET',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_4','50',NULL,'ETC_LINAIS_FR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_5','39',NULL,'ETC_DECES',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#GROUPE_6','122',NULL,'ETC_ENF',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_1','9',NULL,'Identité',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_2','35',NULL,'Naissance',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_3','72',NULL,'Numéro de sécurité sociale',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
'*','RD_WKF_ETC_ECR','#LIBELLE_4','117',NULL,'Situation familiale',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
##
TAG_CHARSET=@€éèç
##
META_DONNEE_ECRAN
==
DELETE FROM META_DONNEE_ECRAN WHERE NOM_DONNEE IN ('MAAFFP','PREAVI') AND COMPANY_ID='*' AND NOM_PAGE='INIT_DEP_FROM_API'
##
META_DONNEE_ECRAN (COMPANY_ID,NOM_DONNEE,NOM_PAGE,LIBELLE_DONNEE,EST_OBLIGATOIRE,MODE_SAISIE,APPELTABLE_NOMPAGE,APPELTABLE_IDREQUETE,APPELTABLE_LISTELIBELLE,APPELTABLE_LISTECHAMPS,APPELTABLE_PARAMETRES,AFFICHE_CHOIX_VIDE_SELECT,VALEUR_DEFAUT,ID_REGLEGESTION_AUT_RD,ID_REGLEGESTION_AUT_CLI,TYPE_REGLEGESTION_AUT_CLI,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,ID_REGLEGESTION_CTL_RD,ID_REGLEGESTION_CTL_CLI,TYPE_REGLEGESTION_CTL_CLI,SEARCH_STRUCTURE_PARAM,REFRESH_AFTER_CHANGE,SPAN_CHECK_VALUE,LIB_ALIGN_TOP,NB_LIGNE_TEXTEAREA,NB_COLONNE_TEXTEAREA)
'*','MAAFFP','INIT_DEP_FROM_API','Code maintien affiliation prévoyance','N','select',NULL,NULL,'OUI,NON','01,00',NULL,'N',NULL,NULL,NULL,NULL,'NPA_AFFICHAGE',NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','PREAVI','INIT_DEP_FROM_API','Période de préavis','N','select','TAB_RD_NONOUI','1',NULL,NULL,NULL,'N','N','DEP_API_VALO_FLAG_PREAVIS',NULL,'C','NPA_AFFICHAGE',NULL,'C','PREAVI_*_CTL_DATES',NULL,'C','CODTS=^RECH_TYPE=^IS_DATE_VIDE_DATE_JOUR=^RECH_NIVMIN_SELECT=^RECH_NIVMAX_SELECT=^RECH_AVECDROPLIST=^RECH_AVECSECU=^RECH_MODULEVARSYS=^RECH_ACOCHER=^RECH_LISTE_HORS_ARBRE=^RECH_FOR_AFFECT_COLLAB=^AFFICHE_ARBORESCENCE=^INCLURE_LIBELLE_TS=^AFFICHE_DESC=^AFF_NIVMIN=^AFF_NIVMAX=^AFF_NIVMAX_MEME_SI_DEDUITE=',NULL,NULL,NULL,NULL,NULL
##
REF_DONNEE_ECRAN
==
DELETE FROM REF_DONNEE_ECRAN WHERE NOM_DONNEE IN ('MAAFFP','PREAVI') AND COMPANY_ID='*' AND NOM_PAGE='INIT_DEP_FROM_API'
##
REF_DONNEE_ECRAN (COMPANY_ID,NOM_DONNEE,NOM_PAGE,LIBELLE_DONNEE,EST_OBLIGATOIRE,MODE_SAISIE,APPELTABLE_NOMPAGE,APPELTABLE_IDREQUETE,APPELTABLE_LISTELIBELLE,APPELTABLE_LISTECHAMPS,APPELTABLE_PARAMETRES,AFFICHE_CHOIX_VIDE_SELECT,VALEUR_DEFAUT,ID_REGLEGESTION_AUT_RD,ID_REGLEGESTION_AUT_CLI,TYPE_REGLEGESTION_AUT_CLI,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,ID_REGLEGESTION_CTL_RD,ID_REGLEGESTION_CTL_CLI,TYPE_REGLEGESTION_CTL_CLI,SEARCH_STRUCTURE_PARAM,REFRESH_AFTER_CHANGE,SPAN_CHECK_VALUE,LIB_ALIGN_TOP,NB_LIGNE_TEXTEAREA,NB_COLONNE_TEXTEAREA)
'*','MAAFFP','INIT_DEP_FROM_API','Code maintien affiliation prévoyance','N','select',NULL,NULL,'OUI,NON','01,00',NULL,'N',NULL,NULL,NULL,NULL,'NPA_AFFICHAGE',NULL,NULL,NULL,NULL,NULL,NULL,'N','N','N','0','0'
'*','PREAVI','INIT_DEP_FROM_API','Période de préavis','N','select','TAB_RD_NONOUI','1',NULL,NULL,NULL,'N','N','DEP_API_VALO_FLAG_PREAVIS',NULL,'C','NPA_AFFICHAGE',NULL,'C','PREAVI_*_CTL_DATES',NULL,'C','CODTS=^RECH_TYPE=^IS_DATE_VIDE_DATE_JOUR=^RECH_NIVMIN_SELECT=^RECH_NIVMAX_SELECT=^RECH_AVECDROPLIST=^RECH_AVECSECU=^RECH_MODULEVARSYS=^RECH_ACOCHER=^RECH_LISTE_HORS_ARBRE=^RECH_FOR_AFFECT_COLLAB=^AFFICHE_ARBORESCENCE=^INCLURE_LIBELLE_TS=^AFFICHE_DESC=^AFF_NIVMIN=^AFF_NIVMAX=^AFF_NIVMAX_MEME_SI_DEDUITE=',NULL,NULL,NULL,NULL,NULL
##
META_ECRAN
==
DELETE FROM META_ECRAN WHERE NOM_PAGE IN ('INIT_DEP_FROM_API') AND COMPANY_ID='*'
##
META_ECRAN (COMPANY_ID,NOM_PAGE,LIBELLE_PAGE,CODE_DESTINATION,ROLE_ECRAN,NOM_DICTIONNAIRE,MODULE_ECRAN,BOUTONS_ECRAN,ID_GROUPE_DONNEES,TYPE_ECRAN,NOM_SERVICELET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,PERSONNALISE,ID_REGLEGESTION_AUT_RD,ID_REGLEGESTION_AUT_CLI,TYPE_REGLEGESTION_AUT_CLI,ID_REGLEGESTION_CTL_RD,ID_REGLEGESTION_CTL_CLI,TYPE_REGLEGESTION_CTL_CLI,CODEDI,TOUTES_PERIODES_EMPLOI,SURCHARGE_EDITION,PERSO_PJ_UX,DESCRIPTION_DA)
'*','INIT_DEP_FROM_API','Initialisation du départ depuis l''API','RD','EXP',NULL,'WKF',NULL,'DONNEES_DEP_FROM_API','W',NULL,NULL,'1055','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL
##
REF_ECRAN
==
DELETE FROM REF_ECRAN WHERE NOM_PAGE IN ('INIT_DEP_FROM_API') AND COMPANY_ID='*'
##
REF_ECRAN (COMPANY_ID,NOM_PAGE,LIBELLE_PAGE,CODE_DESTINATION,ROLE_ECRAN,NOM_DICTIONNAIRE,MODULE_ECRAN,BOUTONS_ECRAN,ID_GROUPE_DONNEES,TYPE_ECRAN,NOM_SERVICELET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,PERSONNALISE,ID_REGLEGESTION_AUT_RD,ID_REGLEGESTION_AUT_CLI,TYPE_REGLEGESTION_AUT_CLI,ID_REGLEGESTION_CTL_RD,ID_REGLEGESTION_CTL_CLI,TYPE_REGLEGESTION_CTL_CLI,CODEDI,TOUTES_PERIODES_EMPLOI,SURCHARGE_EDITION,PERSO_PJ_UX,DESCRIPTION_DA)
'*','INIT_DEP_FROM_API','Initialisation du départ depuis l''API','RD','EXP',NULL,'WKF',NULL,'DONNEES_DEP_FROM_API','W',NULL,NULL,'1055','N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL
##
META_GROUPE_DONNEES_INFO
==
DELETE FROM META_GROUPE_DONNEES_INFO WHERE ID_GROUPE IN ('DONNEES_DEP_FROM_API') AND COMPANY_ID='*'
##
META_GROUPE_DONNEES_INFO (COMPANY_ID,ID_GROUPE,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,EST_ONGLET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,LIBELLE_GROUPE,DESCRIPTION_GROUPE,PERSONNALISE)
'*','DONNEES_DEP_FROM_API',NULL,NULL,NULL,NULL,NULL,'1055',NULL,'Données de départ reçues de l''API','Données de départ reçues de l''API',NULL
##
REF_GROUPE_DONNEES_INFO
==
DELETE FROM REF_GROUPE_DONNEES_INFO WHERE ID_GROUPE IN ('DONNEES_DEP_FROM_API') AND COMPANY_ID='*'
##
REF_GROUPE_DONNEES_INFO (COMPANY_ID,ID_GROUPE,ID_REGLEGESTION_AFF_RD,ID_REGLEGESTION_AFF_CLI,TYPE_REGLEGESTION_AFF_CLI,EST_ONGLET,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,LIBELLE_GROUPE,DESCRIPTION_GROUPE,PERSONNALISE)
'*','DONNEES_DEP_FROM_API',NULL,NULL,NULL,NULL,NULL,'1055',NULL,'Données de départ reçues de l''API','Données de départ reçues de l''API',NULL
##
META_GROUPE_DONNEES
==
DELETE FROM META_GROUPE_DONNEES WHERE ID_GROUPE IN ('DONNEES_DEP_FROM_API') AND COMPANY_ID='*'
##
META_GROUPE_DONNEES (COMPANY_ID,ID_GROUPE,NOM_DONNEE,ORDRE,A_COTE_DONNEE_PRECEDENTE,SUFFIXE_OU_LIBELLE,TABLEAU_REQUETE_NOMPAGE,TABLEAU_REQUETE_IDREQUETE,NOM_PAGE_AJOUT,NOM_PAGE_MODIF,ID_REGLEGESTION_CTL_RD_SUPP,ID_REGLEGESTION_CTL_CLI_SUPP,TYPE_REGLEGESTION_CTL_CLI_SUPP,MASQUER_LE_LIBELLE,DONNEE_CODE_EDITION,MESSAGE_CONFIRMATION,BOUTONS_TABLEAU_MULTIPLE,TITRE_CMP_SORTIE_MANAGER,DEFAULT_VALUE_SORTIE_MANAGER)
'*','DONNEES_DEP_FROM_API','#GROUPE_1','1',NULL,'WKFASS_FCN_ECR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','DONNEES_DEP_FROM_API','#GROUPE_2','2',NULL,'ASS_ECR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
##
REF_GROUPE_DONNEES
==
DELETE FROM REF_GROUPE_DONNEES WHERE ID_GROUPE IN ('DONNEES_DEP_FROM_API') AND COMPANY_ID='*'
##
REF_GROUPE_DONNEES (COMPANY_ID,ID_GROUPE,NOM_DONNEE,ORDRE,A_COTE_DONNEE_PRECEDENTE,SUFFIXE_OU_LIBELLE,TABLEAU_REQUETE_NOMPAGE,TABLEAU_REQUETE_IDREQUETE,NOM_PAGE_AJOUT,NOM_PAGE_MODIF,ID_REGLEGESTION_CTL_RD_SUPP,ID_REGLEGESTION_CTL_CLI_SUPP,TYPE_REGLEGESTION_CTL_CLI_SUPP,MASQUER_LE_LIBELLE,DONNEE_CODE_EDITION,MESSAGE_CONFIRMATION,BOUTONS_TABLEAU_MULTIPLE,TITRE_CMP_SORTIE_MANAGER,DEFAULT_VALUE_SORTIE_MANAGER)
'*','DONNEES_DEP_FROM_API','#GROUPE_1','1',NULL,'WKFASS_FCN_ECR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
'*','DONNEES_DEP_FROM_API','#GROUPE_2','2',NULL,'ASS_ECR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL
##
META_REGLEGESTION_DESC
==
DELETE FROM META_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('DEP_API_VALO_FLAG_PREAVIS') AND COMPANY_ID='*'
##
META_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','DEP_API_VALO_FLAG_PREAVIS','AUT','Valorisation des flags de préavis lors d''un départ par API',NULL,'1055',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDPE","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":1,"PAR_FERM":0},{"TYPE":"OU_SI","OPERANDE_1":"DONNEE£DSFPE","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":1},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£O","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREAVI","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£N","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREAVI","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSFPP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£O","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREFF","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£N","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREFF","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSFNP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£O","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PRPAY","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£N","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PRPAY","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"REGLE","OPERANDE_2":"IDREGLE£PREAVI_*_RAZ£","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0}]',NULL,'N',NULL,'/*¿ * DEP_API_VALO_FLAG_PREAVIS :¿ * ¿ */¿¿if ((DIC_ADM_CONTRAT_HISTO.DSDPE != vide || DIC_ADM_CONTRAT_HISTO.DSFPE != vide)) {¿	DIC_ADM_CONTRAT_HISTO.PREAVI = "O";¿} else {¿	DIC_ADM_CONTRAT_HISTO.PREAVI = "N";¿}¿if (DIC_ADM_CONTRAT_HISTO.DSFPP != vide) {¿	DIC_ADM_CONTRAT_HISTO.PREFF = "O";¿} else {¿	DIC_ADM_CONTRAT_HISTO.PREFF = "N";¿}¿if (DIC_ADM_CONTRAT_HISTO.DSFNP != vide) {¿	DIC_ADM_CONTRAT_HISTO.PRPAY = "O";¿} else {¿	DIC_ADM_CONTRAT_HISTO.PRPAY = "N";¿}¿REGLE("PREAVI_*_RAZ");¿',NULL
##
REF_REGLEGESTION_DESC
==
DELETE FROM REF_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('DEP_API_VALO_FLAG_PREAVIS') AND COMPANY_ID='*'
##
REF_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','DEP_API_VALO_FLAG_PREAVIS','AUT','Valorisation des flags de préavis lors d''un départ par API',NULL,'1055',NULL,'[{"TYPE":"SI","OPERANDE_1":"DONNEE£DSDPE","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":1,"PAR_FERM":0},{"TYPE":"OU_SI","OPERANDE_1":"DONNEE£DSFPE","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":1},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£O","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREAVI","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£N","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREAVI","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSFPP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£O","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREFF","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£N","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PREFF","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSFNP","OPERATEUR":"NEQ","OPERANDE_2":"@vide£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£O","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PRPAY","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"VALEUR£N","OPERATEUR":"VAL","OPERANDE_2":"££","RESULTAT":"DONNEE£PRPAY","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"REGLE","OPERANDE_2":"IDREGLE£PREAVI_*_RAZ£","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0}]',NULL,'N',NULL,'/*¿ * DEP_API_VALO_FLAG_PREAVIS :¿ * ¿ */¿¿if ((DIC_ADM_CONTRAT_HISTO.DSDPE != vide || DIC_ADM_CONTRAT_HISTO.DSFPE != vide)) {¿	DIC_ADM_CONTRAT_HISTO.PREAVI = "O";¿} else {¿	DIC_ADM_CONTRAT_HISTO.PREAVI = "N";¿}¿if (DIC_ADM_CONTRAT_HISTO.DSFPP != vide) {¿	DIC_ADM_CONTRAT_HISTO.PREFF = "O";¿} else {¿	DIC_ADM_CONTRAT_HISTO.PREFF = "N";¿}¿if (DIC_ADM_CONTRAT_HISTO.DSFNP != vide) {¿	DIC_ADM_CONTRAT_HISTO.PRPAY = "O";¿} else {¿	DIC_ADM_CONTRAT_HISTO.PRPAY = "N";¿}¿REGLE("PREAVI_*_RAZ");¿',NULL
##
META_REGLEGESTION
==
DELETE FROM META_REGLEGESTION WHERE ID_REGLEGESTION IN ('DEP_API_VALO_FLAG_PREAVIS') AND COMPANY_ID='*'
##
META_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','DEP_API_VALO_FLAG_PREAVIS','1',NULL,'DONNEE£DSDPEµ@vide£µNEQµDONNEE£DSFPEµ@vide£µNEQµ#OU#',NULL,NULL,'3','4'
'*','DEP_API_VALO_FLAG_PREAVIS','3','VALEUR£O','VAL','££','DONNEE£PREAVI','5','5'
'*','DEP_API_VALO_FLAG_PREAVIS','4','VALEUR£N','VAL','££','DONNEE£PREAVI','5','5'
'*','DEP_API_VALO_FLAG_PREAVIS','5',NULL,'DONNEE£DSFPPµ@vide£µNEQ',NULL,NULL,'6','7'
'*','DEP_API_VALO_FLAG_PREAVIS','6','VALEUR£O','VAL','££','DONNEE£PREFF','8','8'
'*','DEP_API_VALO_FLAG_PREAVIS','7','VALEUR£N','VAL','££','DONNEE£PREFF','8','8'
'*','DEP_API_VALO_FLAG_PREAVIS','8',NULL,'DONNEE£DSFNPµ@vide£µNEQ',NULL,NULL,'9','10'
'*','DEP_API_VALO_FLAG_PREAVIS','9','VALEUR£O','VAL','££','DONNEE£PRPAY','11','11'
'*','DEP_API_VALO_FLAG_PREAVIS','10','VALEUR£N','VAL','££','DONNEE£PRPAY','11','11'
'*','DEP_API_VALO_FLAG_PREAVIS','11','££','REGLE','IDREGLE£PREAVI_*_RAZ£','£',NULL,NULL
##
REF_REGLEGESTION
==
DELETE FROM REF_REGLEGESTION WHERE ID_REGLEGESTION IN ('DEP_API_VALO_FLAG_PREAVIS') AND COMPANY_ID='*'
##
REF_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','DEP_API_VALO_FLAG_PREAVIS','1',NULL,'DONNEE£DSDPEµ@vide£µNEQµDONNEE£DSFPEµ@vide£µNEQµ#OU#',NULL,NULL,'3','4'
'*','DEP_API_VALO_FLAG_PREAVIS','3','VALEUR£O','VAL','££','DONNEE£PREAVI','5','5'
'*','DEP_API_VALO_FLAG_PREAVIS','4','VALEUR£N','VAL','££','DONNEE£PREAVI','5','5'
'*','DEP_API_VALO_FLAG_PREAVIS','5',NULL,'DONNEE£DSFPPµ@vide£µNEQ',NULL,NULL,'6','7'
'*','DEP_API_VALO_FLAG_PREAVIS','6','VALEUR£O','VAL','££','DONNEE£PREFF','8','8'
'*','DEP_API_VALO_FLAG_PREAVIS','7','VALEUR£N','VAL','££','DONNEE£PREFF','8','8'
'*','DEP_API_VALO_FLAG_PREAVIS','8',NULL,'DONNEE£DSFNPµ@vide£µNEQ',NULL,NULL,'9','10'
'*','DEP_API_VALO_FLAG_PREAVIS','9','VALEUR£O','VAL','££','DONNEE£PRPAY','11','11'
'*','DEP_API_VALO_FLAG_PREAVIS','10','VALEUR£N','VAL','££','DONNEE£PRPAY','11','11'
'*','DEP_API_VALO_FLAG_PREAVIS','11','££','REGLE','IDREGLE£PREAVI_*_RAZ£','£',NULL,NULL
##
META_WKF_OPERATION_ECRANS_INFO
==
DELETE FROM META_WKF_OPERATION_ECRANS_INFO WHERE OP_NUM IN ('53803') AND COMPANY_ID='*'
##
META_WKF_OPERATION_ECRANS_INFO (COMPANY_ID,OP_NUM,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,ID_GROUPE_ECRITURE,BTN_SUPPRIMER_MASQUER,BTN_SUPPRIMER_LIBELLE,BTN_PAUSE_MASQUER,BTN_PAUSE_LIBELLE,BTN_VALIDER_LIBELLE,BTN_RENVOIDOSSIER_CODERETOUR,BTN_RENVOIDOSSIER_LIBELLE,BLOQUE_VALID_SI_AUCUNE_MODIF,PERSONNALISE,BTN_COMPINFO_AFFICHER,BTN_COMPINFO_LIBELLE,BTN_SUPPRIMER_DONNEE_COMM,BTN_SUPPRIMER_ERR_COMM_VID,BTN_RENVOIDOSSIER_DONNEE_COMM,BTN_RENVOIDOSSIER_ERR_COMM_VID,SIMULATION_DE_PAIE)
'*','53803',NULL,'1055',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
##
REF_WKF_OPERATION_ECRANS_INFO
==
DELETE FROM REF_WKF_OPERATION_ECRANS_INFO WHERE OP_NUM IN ('53803') AND COMPANY_ID='*'
##
REF_WKF_OPERATION_ECRANS_INFO (COMPANY_ID,OP_NUM,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,ID_GROUPE_ECRITURE,BTN_SUPPRIMER_MASQUER,BTN_SUPPRIMER_LIBELLE,BTN_PAUSE_MASQUER,BTN_PAUSE_LIBELLE,BTN_VALIDER_LIBELLE,BTN_RENVOIDOSSIER_CODERETOUR,BTN_RENVOIDOSSIER_LIBELLE,BLOQUE_VALID_SI_AUCUNE_MODIF,PERSONNALISE,BTN_COMPINFO_AFFICHER,BTN_COMPINFO_LIBELLE,BTN_SUPPRIMER_DONNEE_COMM,BTN_SUPPRIMER_ERR_COMM_VID,BTN_RENVOIDOSSIER_DONNEE_COMM,BTN_RENVOIDOSSIER_ERR_COMM_VID,SIMULATION_DE_PAIE)
'*','53803',NULL,'1055',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
##
META_WKF_OPERATION_ECRANS
==
DELETE FROM META_WKF_OPERATION_ECRANS WHERE OP_NUM IN ('53803') AND COMPANY_ID='*'
##
META_WKF_OPERATION_ECRANS (COMPANY_ID,OP_NUM,ORDRE,TYPE_ECRAN,ECRAN_NOM_PAGE,ECRAN_ID_REGLEGESTION_COND,IS_RECHERCHE_EMBAUCHE,RECHERCHE_REQUETE_NOMPAGE,RECHERCHE_REQUETE_IDREQUETE,IS_RECAP_COMPARATIF,RECAP_PROPOSE_PROPAG,RECHERCHE_ID_GROUPE_LECTURE,LIBELLE_BOUTON_EDITION,RECAP_ID_GROUPE_1,RECAP_AUTO,RECAP_ID_GROUPE_2,RECHERCHE_ID_REGLEGESTION_CTL,RECHERCHE_NOM_JSONSERVICELET,NOM_SERVICELET,NB_NIV_SS_GROUPE_AFF_CONDITION,ID_GEN_PAGE,LIBELLE_ECRAN_RECAP,ECRAN_NOM_PAGE_ALTERNATIF,DONNEE_CODE_EDITION)
'*','53803','1','PARAM','INIT_DEP_FROM_API',NULL,'N',NULL,NULL,'N','N',NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
##
REF_WKF_OPERATION_ECRANS
==
DELETE FROM REF_WKF_OPERATION_ECRANS WHERE OP_NUM IN ('53803') AND COMPANY_ID='*'
##
REF_WKF_OPERATION_ECRANS (COMPANY_ID,OP_NUM,ORDRE,TYPE_ECRAN,ECRAN_NOM_PAGE,ECRAN_ID_REGLEGESTION_COND,IS_RECHERCHE_EMBAUCHE,RECHERCHE_REQUETE_NOMPAGE,RECHERCHE_REQUETE_IDREQUETE,IS_RECAP_COMPARATIF,RECAP_PROPOSE_PROPAG,RECHERCHE_ID_GROUPE_LECTURE,LIBELLE_BOUTON_EDITION,RECAP_ID_GROUPE_1,RECAP_AUTO,RECAP_ID_GROUPE_2,RECHERCHE_ID_REGLEGESTION_CTL,RECHERCHE_NOM_JSONSERVICELET,NOM_SERVICELET,NB_NIV_SS_GROUPE_AFF_CONDITION,ID_GEN_PAGE,LIBELLE_ECRAN_RECAP,ECRAN_NOM_PAGE_ALTERNATIF,DONNEE_CODE_EDITION)
'*','53803','1','PARAM','INIT_DEP_FROM_API',NULL,'N',NULL,NULL,'N','N',NULL,NULL,NULL,'N',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
##
META_DONNEE_MAPPING_UX
=SQL=
INSERT INTO META_DONNEE_MAPPING_UX (COMPANY_ID,NOM_DONNEE,NOM_DONNEE_UX,ID_PROJET,CONDITION,IS_UX) SELECT '*',NOM_DONNEE,NOM_DONNEE_UX,NULL,NULL,'N' FROM (
SELECT 'DSSAD' AS NOM_DONNEE, 'terminationDateAdm' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSSTC' AS NOM_DONNEE, 'terminationDateFinalPayment' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'IFCDD' AS NOM_DONNEE, 'terminationFinalPayment' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ZA701' AS NOM_DONNEE, 'terminationReason' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ZQ272' AS NOM_DONNEE, 'terminationReasonPE' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSNLI' AS NOM_DONNEE, 'terminationNotificationDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSDPE' AS NOM_DONNEE, 'terminationNoticeStartDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFPE' AS NOM_DONNEE, 'terminationNoticeEndDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFPP' AS NOM_DONNEE, 'terminationNoticeDonePayedDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFNP' AS NOM_DONNEE, 'terminationNoticeNotDonePayedDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'PRVNP' AS NOM_DONNEE, 'unpayedNoticeReason' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'NBCSP' AS NOM_DONNEE, 'monthDurationNoticeCSP' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'APARCE' AS NOM_DONNEE, 'familyLinkDirector' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ACDFNE' AS NOM_DONNEE, 'FNEMembershipCode' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ACDALC' AS NOM_DONNEE, 'unemploymentBenefitCode' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'AIPAT' AS NOM_DONNEE, 'specialBenefitType' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'REFCG' AS NOM_DONNEE, 'managementAgreementRef' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'SENET' AS NOM_DONNEE, 'foreignCompanyWorker' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DICDD' AS NOM_DONNEE, 'monetaryDamagesCDD' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'CASAS' AS NOM_DONNEE, 'liabilityCodePE' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'CSCOMP' AS NOM_DONNEE, 'invalidityContributor' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSDECH' AS NOM_DONNEE, 'unemploymentBenefitStart' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFICH' AS NOM_DONNEE, 'unemploymentBenefitEnd' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSRPCH' AS NOM_DONNEE, 'unemploymentBenefitRestart' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSDJTP' AS NOM_DONNEE, 'lastPayedDay' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSEPL' AS NOM_DONNEE, 'terminationProcedureDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSSCG' AS NOM_DONNEE, 'signatureManagementAgreementDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'CSTAPA' AS NOM_DONNEE, 'specialStatusCode' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'RECAPE' AS NOM_DONNEE, 'reloadAPEDeclaration' AS NOM_DONNEE_UX FROM DUAL
) T1 WHERE NOT EXISTS (SELECT 1 FROM META_DONNEE_MAPPING_UX T2 WHERE COMPANY_ID='*' AND T2.NOM_DONNEE_UX=T1.NOM_DONNEE_UX)
##
REF_DONNEE_MAPPING_UX
=SQL=
INSERT INTO REF_DONNEE_MAPPING_UX (COMPANY_ID,NOM_DONNEE,NOM_DONNEE_UX,ID_PROJET,CONDITION,IS_UX) SELECT '*',NOM_DONNEE,NOM_DONNEE_UX,NULL,NULL,'N' FROM (
SELECT 'DSSAD' AS NOM_DONNEE, 'terminationDateAdm' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSSTC' AS NOM_DONNEE, 'terminationDateFinalPayment' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'IFCDD' AS NOM_DONNEE, 'terminationFinalPayment' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ZA701' AS NOM_DONNEE, 'terminationReason' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ZQ272' AS NOM_DONNEE, 'terminationReasonPE' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSNLI' AS NOM_DONNEE, 'terminationNotificationDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSDPE' AS NOM_DONNEE, 'terminationNoticeStartDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFPE' AS NOM_DONNEE, 'terminationNoticeEndDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFPP' AS NOM_DONNEE, 'terminationNoticeDonePayedDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFNP' AS NOM_DONNEE, 'terminationNoticeNotDonePayedDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'PRVNP' AS NOM_DONNEE, 'unpayedNoticeReason' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'NBCSP' AS NOM_DONNEE, 'monthDurationNoticeCSP' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'APARCE' AS NOM_DONNEE, 'familyLinkDirector' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ACDFNE' AS NOM_DONNEE, 'FNEMembershipCode' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'ACDALC' AS NOM_DONNEE, 'unemploymentBenefitCode' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'AIPAT' AS NOM_DONNEE, 'specialBenefitType' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'REFCG' AS NOM_DONNEE, 'managementAgreementRef' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'SENET' AS NOM_DONNEE, 'foreignCompanyWorker' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DICDD' AS NOM_DONNEE, 'monetaryDamagesCDD' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'CASAS' AS NOM_DONNEE, 'liabilityCodePE' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'CSCOMP' AS NOM_DONNEE, 'invalidityContributor' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSDECH' AS NOM_DONNEE, 'unemploymentBenefitStart' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSFICH' AS NOM_DONNEE, 'unemploymentBenefitEnd' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSRPCH' AS NOM_DONNEE, 'unemploymentBenefitRestart' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSDJTP' AS NOM_DONNEE, 'lastPayedDay' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSEPL' AS NOM_DONNEE, 'terminationProcedureDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'DSSCG' AS NOM_DONNEE, 'signatureManagementAgreementDate' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'CSTAPA' AS NOM_DONNEE, 'specialStatusCode' AS NOM_DONNEE_UX FROM DUAL UNION ALL 
SELECT 'RECAPE' AS NOM_DONNEE, 'reloadAPEDeclaration' AS NOM_DONNEE_UX FROM DUAL
) T1 WHERE NOT EXISTS (SELECT 1 FROM REF_DONNEE_MAPPING_UX T2 WHERE COMPANY_ID='*' AND T2.NOM_DONNEE_UX=T1.NOM_DONNEE_UX)
##
TAG_CHARSET=@€éèç
##
META_REGLEGESTION_DESC
==
DELETE FROM META_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('RD_ZA380_CNT_MODELE_EMB') AND COMPANY_ID='*'
##
META_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','RD_ZA380_CNT_MODELE_EMB','CTL','Contrôles saisie du motif de recours dans le modèle d''embauche',NULL,'1050',NULL,'[{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ET_SI","OPERANDE_1":"@codeoperation££","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£Interroger","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":4},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":5},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"TAB","OPERANDE_2":"RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_RECOURS_OBSOLETE§ID_REQUETE=VALEUR^1§ID_COL=VALEUR^2§PARAM_1=DONNEE^ZT061§PARAM_2=DONNEE^ZA380","RESULTAT":"@TMPUTIL£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":6},{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_WF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":7},{"TYPE":"ET_SI","OPERANDE_1":"@TMPUTIL£","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":8},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":9},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":10},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":11},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":12},{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":13},{"TYPE":"ET_SI","OPERANDE_1":"@codeoperation££","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£Creer","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":14},{"TYPE":"ET_SI","OPERANDE_1":"@TMPUTIL£","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":15},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":16},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":17},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":18},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":19},{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":20},{"TYPE":"ET_SI","OPERANDE_1":"@codeoperation££","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£Interroger","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":21},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"ISMAJ","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":22},{"TYPE":"ET_SI","OPERANDE_1":"@TMPUTIL£","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":23},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":24},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":25},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":26},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":27},{"TYPE":"SI","OPERANDE_1":"DONNEE£ZT061","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£CDD","RESULTAT":"","PAR_OUVR":1,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":28},{"TYPE":"OU_SI","OPERANDE_1":"DONNEE£ZT061","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£INT","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":1,"FLAG_DELETE":"N","rowIdx":29},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":30},{"TYPE":"SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"EQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":31},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":32},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT06£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":33},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":34},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":35},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":36},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":37},{"TYPE":"SI","OPERANDE_1":"DONNEE£ZA700","OPERATEUR":"NOTIN","OPERANDE_2":"VALEUR£20,64,65,81£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":38},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£53","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":39},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":40},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENWKF76£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":41},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":42},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":43}]','Contrôle cohérence saisie du motif de recours dans le modèle d''embauche car il n''y a pas de contrôle sur personne remplacée (donnée non prévue dans le modèle d''embauche).','N',NULL,'/*¿ * RD_ZA380_CNT_MODELE_EMB :¿ * Contrôle cohérence saisie du motif de recours dans le modèle d''embauche car il n''y a pas de contrôle sur personne remplacée (donnée non prévue dans le modèle d''embauche).¿ */¿¿if (ECR_NWF() && codeoperation == "Interroger") {¿	return;¿}¿TMPUTIL = TAB("TAB_RD_RECOURS_OBSOLETE", 1, 2, DIC_ADM_CONTRAT_HISTO.ZT061, DIC_ADM_CONTRAT_HISTO.ZA380);¿if (ECR_WF() && TMPUTIL == "N") {¿	ERR("GENCNT36", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿if (ECR_NWF() && codeoperation == "Creer" && TMPUTIL == "N") {¿	ERR("GENCNT36", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿if (ECR_NWF() && codeoperation != "Interroger" && ISMAJ(DIC_ADM_CONTRAT_HISTO.ZA380) && TMPUTIL == "N") {¿	ERR("GENCNT36", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿if ((DIC_ADM_CONTRAT_HISTO.ZT061 == "CDD" || DIC_ADM_CONTRAT_HISTO.ZT061 == "INT")) {¿	if (DIC_ADM_CONTRAT_HISTO.ZA380 == vide) {¿		ERR("GENCNT06", DIC_ADM_CONTRAT_HISTO.ZA380);¿	}¿}¿if (DIC_ADM_CONTRAT_HISTO.ZA700.NOTIN(20, 64, 65, 81) && DIC_ADM_CONTRAT_HISTO.ZA380 == 53) {¿	ERR("GENWKF76", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿','Contrôle cohérence saisie du motif de recours dans le modèle d''embauche'
##
REF_REGLEGESTION_DESC
==
DELETE FROM REF_REGLEGESTION_DESC WHERE ID_REGLEGESTION IN ('RD_ZA380_CNT_MODELE_EMB') AND COMPANY_ID='*'
##
REF_REGLEGESTION_DESC (COMPANY_ID,ID_REGLEGESTION,TYPE_REGLE,LIBELLE,ID_PROJET,NUM_VERSION_RD,EST_SUPPRIME,REGLES_ECR,DESCRIPTION,FLAG_SPECIF_TYPE_REGLE,PERSONNALISE,REGLES_ALGO,REGLE_SYNTHETIQUE)
'*','RD_ZA380_CNT_MODELE_EMB','CTL','Contrôles saisie du motif de recours dans le modèle d''embauche',NULL,'1050',NULL,'[{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":0},{"TYPE":"ET_SI","OPERANDE_1":"@codeoperation££","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£Interroger","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":1},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":2},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"FIN","OPERANDE_2":"££","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":3},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":4},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":5},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"TAB","OPERANDE_2":"RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_RECOURS_OBSOLETE§ID_REQUETE=VALEUR^1§ID_COL=VALEUR^2§PARAM_1=DONNEE^ZT061§PARAM_2=DONNEE^ZA380","RESULTAT":"@TMPUTIL£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":6},{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_WF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":7},{"TYPE":"ET_SI","OPERANDE_1":"@TMPUTIL£","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":8},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":9},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":10},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":11},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":12},{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":13},{"TYPE":"ET_SI","OPERANDE_1":"@codeoperation££","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£Creer","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":14},{"TYPE":"ET_SI","OPERANDE_1":"@TMPUTIL£","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":15},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":16},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":17},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":18},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":19},{"TYPE":"SI","OPERANDE_1":"££","OPERATEUR":"ECR_NWF","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":20},{"TYPE":"ET_SI","OPERANDE_1":"@codeoperation££","OPERATEUR":"NEQ","OPERANDE_2":"VALEUR£Interroger","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":21},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"ISMAJ","OPERANDE_2":"££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":22},{"TYPE":"ET_SI","OPERANDE_1":"@TMPUTIL£","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£N","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":23},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":24},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":25},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":26},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":27},{"TYPE":"SI","OPERANDE_1":"DONNEE£ZT061","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£CDD","RESULTAT":"","PAR_OUVR":1,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":28},{"TYPE":"OU_SI","OPERANDE_1":"DONNEE£ZT061","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£INT","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":1,"FLAG_DELETE":"N","rowIdx":29},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":30},{"TYPE":"SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"EQ","OPERANDE_2":"@vide££","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":31},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":32},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENCNT06£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":33},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":34},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":35},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":36},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":37},{"TYPE":"SI","OPERANDE_1":"DONNEE£ZA700","OPERATEUR":"NOTIN","OPERANDE_2":"VALEUR£20,64,65,81£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":38},{"TYPE":"ET_SI","OPERANDE_1":"DONNEE£ZA380","OPERATEUR":"EQ","OPERANDE_2":"VALEUR£53","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":39},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":40},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENWKF76£NOM_DONNEE_FOCUS=DONNEE^ZA380","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":41},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":42},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0,"FLAG_DELETE":"N","rowIdx":43}]','Contrôle cohérence saisie du motif de recours dans le modèle d''embauche car il n''y a pas de contrôle sur personne remplacée (donnée non prévue dans le modèle d''embauche).','N',NULL,'/*¿ * RD_ZA380_CNT_MODELE_EMB :¿ * Contrôle cohérence saisie du motif de recours dans le modèle d''embauche car il n''y a pas de contrôle sur personne remplacée (donnée non prévue dans le modèle d''embauche).¿ */¿¿if (ECR_NWF() && codeoperation == "Interroger") {¿	return;¿}¿TMPUTIL = TAB("TAB_RD_RECOURS_OBSOLETE", 1, 2, DIC_ADM_CONTRAT_HISTO.ZT061, DIC_ADM_CONTRAT_HISTO.ZA380);¿if (ECR_WF() && TMPUTIL == "N") {¿	ERR("GENCNT36", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿if (ECR_NWF() && codeoperation == "Creer" && TMPUTIL == "N") {¿	ERR("GENCNT36", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿if (ECR_NWF() && codeoperation != "Interroger" && ISMAJ(DIC_ADM_CONTRAT_HISTO.ZA380) && TMPUTIL == "N") {¿	ERR("GENCNT36", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿if ((DIC_ADM_CONTRAT_HISTO.ZT061 == "CDD" || DIC_ADM_CONTRAT_HISTO.ZT061 == "INT")) {¿	if (DIC_ADM_CONTRAT_HISTO.ZA380 == vide) {¿		ERR("GENCNT06", DIC_ADM_CONTRAT_HISTO.ZA380);¿	}¿}¿if (DIC_ADM_CONTRAT_HISTO.ZA700.NOTIN(20, 64, 65, 81) && DIC_ADM_CONTRAT_HISTO.ZA380 == 53) {¿	ERR("GENWKF76", DIC_ADM_CONTRAT_HISTO.ZA380);¿}¿','Contrôle cohérence saisie du motif de recours dans le modèle d''embauche'
##
META_REGLEGESTION
==
DELETE FROM META_REGLEGESTION WHERE ID_REGLEGESTION IN ('RD_ZA380_CNT_MODELE_EMB') AND COMPANY_ID='*'
##
META_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','RD_ZA380_CNT_MODELE_EMB','1',NULL,'££µ££µECR_NWFµ@codeoperation££µVALEUR£InterrogerµEQµ#ET#',NULL,NULL,'3','4'
'*','RD_ZA380_CNT_MODELE_EMB','3','££','FIN','££','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','4','££','TAB','RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_RECOURS_OBSOLETE§ID_REQUETE=VALEUR^1§ID_COL=VALEUR^2§PARAM_1=DONNEE^ZT061§PARAM_2=DONNEE^ZA380','@TMPUTIL£',NULL,NULL
'*','RD_ZA380_CNT_MODELE_EMB','5',NULL,'££µ££µECR_WFµ@TMPUTIL£µVALEUR£NµEQµ#ET#',NULL,NULL,'7','8'
'*','RD_ZA380_CNT_MODELE_EMB','7','££','ERR','CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','8',NULL,'££µ££µECR_NWFµ@codeoperation££µVALEUR£CreerµEQµ#ET#µ@TMPUTIL£µVALEUR£NµEQµ#ET#',NULL,NULL,'11','12'
'*','RD_ZA380_CNT_MODELE_EMB','11','££','ERR','CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','12',NULL,'££µ££µECR_NWFµ@codeoperation££µVALEUR£InterrogerµNEQµ#ET#µDONNEE£ZA380µ££µISMAJµ#ET#µ@TMPUTIL£µVALEUR£NµEQµ#ET#',NULL,NULL,'16','17'
'*','RD_ZA380_CNT_MODELE_EMB','16','££','ERR','CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','17',NULL,'DONNEE£ZT061µVALEUR£CDDµEQµDONNEE£ZT061µVALEUR£INTµEQµ#OU#',NULL,NULL,'19','21'
'*','RD_ZA380_CNT_MODELE_EMB','19',NULL,'DONNEE£ZA380µ@vide££µEQ',NULL,NULL,'20','21'
'*','RD_ZA380_CNT_MODELE_EMB','20','££','ERR','CODEERREUR£GENCNT06£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','21',NULL,'DONNEE£ZA700µVALEUR£20,64,65,81£µNOTINµDONNEE£ZA380µVALEUR£53µEQµ#ET#',NULL,NULL,'23','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','23','££','ERR','CODEERREUR£GENWKF76£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
##
REF_REGLEGESTION
==
DELETE FROM REF_REGLEGESTION WHERE ID_REGLEGESTION IN ('RD_ZA380_CNT_MODELE_EMB') AND COMPANY_ID='*'
##
REF_REGLEGESTION (COMPANY_ID,ID_REGLEGESTION,NUM_LIGNE,OPERANDE1,OPERATEUR,OPERANDE2,RESULTAT,BRANCHE_SI,BRANCHE_SINON)
'*','RD_ZA380_CNT_MODELE_EMB','1',NULL,'££µ££µECR_NWFµ@codeoperation££µVALEUR£InterrogerµEQµ#ET#',NULL,NULL,'3','4'
'*','RD_ZA380_CNT_MODELE_EMB','3','££','FIN','££','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','4','££','TAB','RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_RECOURS_OBSOLETE§ID_REQUETE=VALEUR^1§ID_COL=VALEUR^2§PARAM_1=DONNEE^ZT061§PARAM_2=DONNEE^ZA380','@TMPUTIL£',NULL,NULL
'*','RD_ZA380_CNT_MODELE_EMB','5',NULL,'££µ££µECR_WFµ@TMPUTIL£µVALEUR£NµEQµ#ET#',NULL,NULL,'7','8'
'*','RD_ZA380_CNT_MODELE_EMB','7','££','ERR','CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','8',NULL,'££µ££µECR_NWFµ@codeoperation££µVALEUR£CreerµEQµ#ET#µ@TMPUTIL£µVALEUR£NµEQµ#ET#',NULL,NULL,'11','12'
'*','RD_ZA380_CNT_MODELE_EMB','11','££','ERR','CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','12',NULL,'££µ££µECR_NWFµ@codeoperation££µVALEUR£InterrogerµNEQµ#ET#µDONNEE£ZA380µ££µISMAJµ#ET#µ@TMPUTIL£µVALEUR£NµEQµ#ET#',NULL,NULL,'16','17'
'*','RD_ZA380_CNT_MODELE_EMB','16','££','ERR','CODEERREUR£GENCNT36£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','17',NULL,'DONNEE£ZT061µVALEUR£CDDµEQµDONNEE£ZT061µVALEUR£INTµEQµ#OU#',NULL,NULL,'19','21'
'*','RD_ZA380_CNT_MODELE_EMB','19',NULL,'DONNEE£ZA380µ@vide££µEQ',NULL,NULL,'20','21'
'*','RD_ZA380_CNT_MODELE_EMB','20','££','ERR','CODEERREUR£GENCNT06£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','21',NULL,'DONNEE£ZA700µVALEUR£20,64,65,81£µNOTINµDONNEE£ZA380µVALEUR£53µEQµ#ET#',NULL,NULL,'23','FIN'
'*','RD_ZA380_CNT_MODELE_EMB','23','££','ERR','CODEERREUR£GENWKF76£NOM_DONNEE_FOCUS=DONNEE^ZA380','£','FIN','FIN'
##
TAG_CHARSET=@€éèç
##
sys_requetes_jsp
==
DELETE FROM sys_requetes_jsp WHERE nompage='TAB_RD_MAX_DATE_EFF_HISTO' and idrequete=2
'TAB_RD_MAX_DATE_EFF_HISTO','2','Administrateur','DIC_ADM_CONTRAT_HISTO','TO_CHAR (Max(DATE_EFF)^''dd.mm.yyyy'')','TO_CHAR (Max(DATE_EFF)^''dd.mm.yyyy'')','MATRIC=''%1''','0',NULL,NULL,'date effet de la dernicre occurence','date effet de la dernicre occurence','DATE_EFF'
##
meta_reglegestion_desc
==
DELETE FROM meta_reglegestion_desc WHERE id_reglegestion='REG_RD_CTRL_MUT_ERR'
'*','REG_RD_CTRL_MUT_ERR','CTL','Contrôle date de mutation et derniere date d''effet','1393','0',NULL,'[{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"TAB","OPERANDE_2":"RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_MAX_DATE_EFF_HISTO§ID_REQUETE=VALEUR^2§ID_COL=VALEUR^0§PARAM_1=DONNEE^GEN_MATRIC","RESULTAT":"@TMPT£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSMUTA_TRAV","OPERATEUR":"LE","OPERANDE_2":"@TMPT£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENMUT10£NOM_DONNEE_FOCUS=","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Contrôle date de mutation et dernicre date d''effet','N',NULL,'/* * REG_RD_CTRL_MUT_ERR :z * Contrôle date de mutation et dernicre date d''effetz */ TMPT = TAB("TAB_RD_MAX_DATE_EFF_HISTO",2,0,DONNEE.GEN_MATRIC); if (DIC_DONNEES_VIRTUELLES.DSMUTA_TRAV <= TMPT) {   ERR("GENMUT10");   }','Contrôle date de mutation et dernicre date d''effet'
##
REF_reglegestion_desc
==
DELETE FROM ref_reglegestion_desc WHERE id_reglegestion='REG_RD_CTRL_MUT_ERR'
'*','REG_RD_CTRL_MUT_ERR','CTL','Contrôle date de mutation et derniere date d''effet','1393','0',NULL,'[{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"TAB","OPERANDE_2":"RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_MAX_DATE_EFF_HISTO§ID_REQUETE=VALEUR^2§ID_COL=VALEUR^0§PARAM_1=DONNEE^GEN_MATRIC","RESULTAT":"@TMPT£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SI","OPERANDE_1":"DONNEE£DSMUTA_TRAV","OPERATEUR":"LE","OPERANDE_2":"@TMPT£","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"ALORS","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"OPERATION","OPERANDE_1":"££","OPERATEUR":"ERR","OPERANDE_2":"CODEERREUR£GENMUT10£NOM_DONNEE_FOCUS=","RESULTAT":"£","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"SINON","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0},{"TYPE":"FINSI","OPERANDE_1":"","OPERATEUR":"","OPERANDE_2":"","RESULTAT":"","PAR_OUVR":0,"PAR_FERM":0}]','Contrôle date de mutation et dernicre date d''effet','N',NULL,'/* * REG_RD_CTRL_MUT_ERR :z * Contrôle date de mutation et dernicre date d''effetz */ TMPT = TAB("TAB_RD_MAX_DATE_EFF_HISTO",2,0,DONNEE.GEN_MATRIC); if (DIC_DONNEES_VIRTUELLES.DSMUTA_TRAV <= TMPT) {   ERR("GENMUT10");   }','Contrôle date de mutation et dernicre date d''effet'
##
meta_reglegestion
==
DELETE FROM meta_reglegestion WHERE id_reglegestion='REG_RD_CTRL_MUT_ERR'
'*','REG_RD_CTRL_MUT_ERR','1','££','TAB','RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_MAX_DATE_EFF_HISTO§ID_REQUETE=VALEUR^2§ID_COL=VALEUR^0§PARAM_1=DONNEE^GEN_MATRIC','@TMPT£',NULL,NULL
'*','REG_RD_CTRL_MUT_ERR','2',NULL,'DONNEE£DSMUTA_TRAVµ@TMPT£µLE',NULL,NULL,'3','FIN'
'*','REG_RD_CTRL_MUT_ERR','3','££','ERR','CODEERREUR£GENMUT10£NOM_DONNEE_FOCUS=','£','FIN','FIN'
##
ref_reglegestion
==
DELETE FROM ref_reglegestion WHERE id_reglegestion='REG_RD_CTRL_MUT_ERR'
'*','REG_RD_CTRL_MUT_ERR','1','££','TAB','RETOURTABLE££NOM_PAGE=VALEUR^TAB_RD_MAX_DATE_EFF_HISTO§ID_REQUETE=VALEUR^2§ID_COL=VALEUR^0§PARAM_1=DONNEE^GEN_MATRIC','@TMPT£',NULL,NULL
'*','REG_RD_CTRL_MUT_ERR','2',NULL,'DONNEE£DSMUTA_TRAVµ@TMPT£µLE',NULL,NULL,'3','FIN'
'*','REG_RD_CTRL_MUT_ERR','3','££','ERR','CODEERREUR£GENMUT10£NOM_DONNEE_FOCUS=','£','FIN','FIN'
##
TAG_CHARSET=@€éèç
##
FSED
=SQL=
CREATE OR REPLACE PACKAGE FSED 
AS
 FUNCTION getTypeTable(
 p_table IN VARCHAR2)
 RETURN VARCHAR2;
 FUNCTION getClauseSelect(
 p_numpac IN VARCHAR2,
 p_nom_table_ou_alias IN VARCHAR2,
 p_donneegxp IN VARCHAR2,
 p_donnfiltre IN VARCHAR2,
 p_operfiltre IN VARCHAR2,
 p_valfiltre IN VARCHAR2,
 p_trtparticulier IN VARCHAR2,
 p_envoi_systematique IN VARCHAR2,
 p_data_type IN VARCHAR2,
 p_type_zadig IN VARCHAR2,
 p_masque IN VARCHAR2,
 p_occ IN VARCHAR2,
 p_avec_balises_photo IN BOOLEAN)
 RETURN VARCHAR2;
 PROCEDURE FSED_ERREUR(
 p_id      IN NUMBER,
 p_nomproc IN VARCHAR2,
 p_idDate  IN VARCHAR2,
 p_erreur  IN CLOB );
 PROCEDURE preparation_FSED_unit(
 p_nomTable    IN VARCHAR2,
 p_alias       IN VARCHAR2,
 p_TABLETYPE   IN VARCHAR2,
 p_id_trt      IN NUMBER,
 p_numpac      IN VARCHAR2,
 p_periode     IN VARCHAR2,
 p_ALLERRETOUR IN VARCHAR2,
 p_nb_mois_paie_init IN NUMBER);
 PROCEDURE preparation_FSED(
 p_id_trt  IN NUMBER,
 p_numpac  IN VARCHAR2,
 p_periode IN VARCHAR2);
 PROCEDURE retour_Fsed(
 p_id IN NUMBER );
 PROCEDURE insertCart80(
 p_id    IN NUMBER,
 p_newId IN NUMBER);
 PROCEDURE insertCart30(
 p_id    IN NUMBER,
 p_newId IN NUMBER,
 p_table IN VARCHAR2);
 PROCEDURE sous_insertCart80(
 p_id    IN NUMBER,
 p_newId IN NUMBER) ;
 PROCEDURE sous_insertCart30(
 p_id    IN NUMBER,
 p_newId IN NUMBER,
 p_table IN VARCHAR2) ;
 PROCEDURE maj_CAD30(
 p_id IN NUMBER) ;
 PROCEDURE getPeriodeRecueil(
 p_numpac  IN TGE_REF_PAC.numpac%type,
 p_paiezad IN TGE_IMPORT_FSED_30.paiezad%type,
 p_dateDeb IN OUT DATE,
 p_dateFin IN OUT DATE);
 PROCEDURE tmp_histo_fsed_30(
 p_id  IN NUMBER ,
 p_numpac  IN TGE_REF_MAPDO.NUMPAC%TYPE,
 p_moi IN VARCHAR2);
 procedure FSED_AVANCEMENT_PLSQL(
 p_id             IN NUMBER,
 p_typeAction     IN VARCHAR2,
 p_detailAction   IN CLOB );
 PROCEDURE FSED_AVANCEMENT(
    id  IN NUMBER,
    txt IN VARCHAR2);
 PROCEDURE insert_gap_trt(
 p_id          IN NUMBER ,
 p_numpac      IN TGE_REF_PAC.numpac%type,
 p_periode     IN TGE_REF_PAC.PERIODEENCOURS%TYPE,
 p_type_retour IN VARCHAR2);
 PROCEDURE insert_gap_trt_suivi(
 p_id               IN NUMBER ,
 p_statut           IN TGE_REF_PAC.numpac%type,
 p_code_retour_zpp  IN TGE_REF_PAC.PERIODEENCOURS%TYPE,
 p_login            IN VARCHAR2,
 p_type_retour     IN VARCHAR2);
 PROCEDURE getPeriodeRecueilEvol(
 p_id      IN NUMBER,
 p_numpac  IN TGE_REF_PAC.numpac%type,
 p_periodeEnCours IN TGE_REF_PAC.periodeencours%type,
 p_paiezad IN TGE_IMPORT_FSED_30.paiezad%type,
 p_dateDeb IN OUT DATE,
 p_dateFin IN OUT DATE);
 END FSED;
##
FSED
=SQL=
create or replace PACKAGE body FSED AS
  /********************************************************************************
  Version     : V5.05.00
  *********************************************************************************/
  err_msg  VARCHAR(1000);
  err_code VARCHAR(200);
type pour_comp
IS
  record
  (
    CLE     VARCHAR2(1000),
    numpac  VARCHAR2(6),
    pacmat  VARCHAR2(8),
    paiezad VARCHAR2(8),
    dteffet DATE,
    dtfin   DATE,
    rank    NUMBER,
    C1      VARCHAR2(1000),
    C2      VARCHAR2(1000),
    C3      VARCHAR2(1000),
    C4      VARCHAR2(1000),
    C5      VARCHAR2(1000),
    C6      VARCHAR2(1000),
    C7      VARCHAR2(1000),
    C8      VARCHAR2(1000),
    C9      VARCHAR2(1000),
    C10     VARCHAR2(1000),
    C11     VARCHAR2(1000),
    C12     VARCHAR2(1000),
    C13     VARCHAR2(1000),
    C14     VARCHAR2(1000),
    C15     VARCHAR2(1000),
    C16     VARCHAR2(1000),
    C17     VARCHAR2(1000),
    C18     VARCHAR2(1000),
    C19     VARCHAR2(1000),
    C20     VARCHAR2(1000),
    C21     VARCHAR2(1000),
    C22     VARCHAR2(1000),
    C23     VARCHAR2(1000),
    C24     VARCHAR2(1000),
    C25     VARCHAR2(1000),
    C26     VARCHAR2(1000),
    C27     VARCHAR2(1000),
    C28     VARCHAR2(1000),
    C29     VARCHAR2(1000),
    C30     VARCHAR2(1000) );
TYPE DATE_A275_h
IS
  RECORD
  (
    numpac        VARCHAR2(6),
    IDPACMAT      VARCHAR2(14),
    donnee_A275_h DATE );
TYPE TAB_DATE_A275_H
IS
  TABLE OF DATE_A275_h INDEX BY binary_integer ;
TYPE DATE_w580_h
IS
  RECORD
  (
    numpac        VARCHAR2(6),
    IDPACMAT      VARCHAR2(14),
    donnee_W580_h VARCHAR2(8) );
TYPE TAB_DATE_w580_H
IS
  TABLE OF DATE_w580_h INDEX BY binary_integer ;
TYPE DATE_WL52_h
IS
  RECORD
  (
    numpac        VARCHAR2(6),
    IDPACMAT      VARCHAR2(14),
    donnee_WL52_h VARCHAR2(8) );
TYPE TAB_DATE_WL52_H
IS
  TABLE OF DATE_WL52_h INDEX BY binary_integer ;
TYPE TAB_pour_comp
IS
  TABLE OF pour_comp INDEX BY binary_integer ;
type pour_lib
IS
  record
  (
    LIB         VARCHAR2(1000),
    TYPE_DONNEE VARCHAR2(1),
    OCC         VARCHAR2(2) );
TYPE TAB_pour_lib
IS
  TABLE OF pour_lib INDEX BY binary_integer ;
type pour_retour
IS
  record
  (
    ID_TRT      NUMBER,
    NUMPAC      VARCHAR2(6),
    CLE         VARCHAR2(1000),
    pacmat      VARCHAR2(8),
    ELEM        VARCHAR2(1000),
    OCC         VARCHAR2(2),
    VALEUR      VARCHAR2(1000),
    CODEOP      VARCHAR2(1),
    TYPE_DONNEE VARCHAR2(1),
    DTEFFET     DATE,
    paiezad     VARCHAR2(8));
TYPE TAB_pour_retour
IS
  TABLE OF pour_retour INDEX BY binary_integer ;
type pour_cle
IS
  record
  (
    column_name VARCHAR2(255),
    data_type   VARCHAR2(255));
TYPE TAB_cle
IS
  TABLE OF pour_cle INDEX BY binary_integer ;
  CURSOR cur_lig (p_id TGE_IMPORT_FSED.id_trt%TYPE)
  IS
    SELECT *
    FROM TGE_IMPORT_FSED
    WHERE id_trt             =p_id
    AND SUBSTR(donnees,7,2) IN ('00','11','15','17','99')
    ORDER BY num_lig;
TYPE t_TGE_REF_VRREP
IS
  TABLE OF TGE_REF_VRREP%rowtype;
TYPE t_TGE_REF_VRDES
IS
  TABLE OF TGE_REF_VRDES%rowtype;
TYPE t_TGE_REF_VRVAL
IS
  TABLE OF TGE_REF_VRVAL%rowtype;
TYPE t_TGE_REF_RUBRIQUE
IS
  TABLE OF TGE_REF_RUBRIQUE%rowtype;
TYPE t_TGE_REF_LIBRUB_COTIS
IS
  TABLE OF TGE_REF_LIBRUB_COTIS%rowtype;
TYPE t_TGE_REF_RUBRIQUE_CONTEXTE
IS
  TABLE OF TGE_REF_RUBRIQUE_CONTEXTE%rowtype;
TYPE t_TGE_REF_DICOZ
IS
  TABLE OF TGE_REF_DICOZ%rowtype;
TYPE t_TGE_IMPORT_FSED
IS
  TABLE OF TGE_IMPORT_FSED%rowtype;
TYPE t_CODE_TABLE
IS
  TABLE OF VARCHAR2(5) INDEX BY VARCHAR2(15) ;
TYPE t_numLig_00
IS
  TABLE OF NUMBER INDEX BY binary_integer ;
TYPE t_numLig_99
IS
  TABLE OF NUMBER INDEX BY binary_integer ;
  lig t_TGE_IMPORT_FSED;
  tab_11R t_TGE_REF_VRREP;
  elt_tab_11R TGE_REF_VRREP%rowtype;
  tab_11D t_TGE_REF_VRDES;
  elt_tab_11D TGE_REF_VRDES%rowtype;
  tab_11D1 t_TGE_REF_VRDES;
  elt_tab_11D1 TGE_REF_VRDES%rowtype;
  tab_11V t_TGE_REF_VRVAL;
  elt_tab_11V TGE_REF_VRVAL%rowtype;
  tab_15 t_TGE_REF_RUBRIQUE;
  tab_15_lib t_TGE_REF_LIBRUB_COTIS;
  elt_tab_15 TGE_REF_RUBRIQUE%rowtype;
  elt_tab_15_lib TGE_REF_LIBRUB_COTIS%rowtype;
  tab_17CR t_TGE_REF_RUBRIQUE_CONTEXTE;
  elt_tab_17CR TGE_REF_RUBRIQUE_CONTEXTE%rowtype;
  tab_17DMF t_TGE_REF_DICOZ;
  elt_tab_17DMF TGE_REF_DICOZ%rowtype;
  w_Error_code    NUMBER(2)    :=0 ;
  w_Error_msg     VARCHAR2(255):= '';
  v_cmpt_numLigne NUMBER       := 0;
  code_table_liste t_CODE_TABLE;
  valdebug VARCHAR2(1);
  tab_numLigne00 t_numLig_00;
  tab_numligne99 t_numLig_99;
  DicoPret          VARCHAR2(30);
  soldePret         VARCHAR2(30);
  MontantPret       VARCHAR2(30);
  DicoOpposition    VARCHAR2(30);
  soldeOpposition   VARCHAR2(30);
  MontantOpposition VARCHAR2(30);
  coldteffet        VARCHAR2(30);
  coldatecle        VARCHAR2(30);
 MatEcrit          VARCHAR2(20);
  oldvaleur         VARCHAR2(1000);
  MatARenvoyer      VARCHAR2(20);
  mMoins1           DATE;
  CURSOR cur_numlig00 (p_id TGE_IMPORT_FSED.id_trt%TYPE)
  IS
    SELECT num_lig
    FROM TGE_IMPORT_FSED
    WHERE id_trt            =p_id
    AND SUBSTR(donnees,7,2) ='00'
    ORDER BY num_lig;
  CURSOR cur_numlig99 (p_id TGE_IMPORT_FSED.id_trt%TYPE)
  IS
    SELECT num_lig
    FROM TGE_IMPORT_FSED
    WHERE id_trt            =p_id
    AND SUBSTR(donnees,7,2) ='99'
    ORDER BY num_lig;
PROCEDURE FSED_AVANCEMENT(
    id  IN NUMBER,
    txt IN VARCHAR2)
AS
  PRAGMA AUTONOMOUS_TRANSACTION;
  line   VARCHAR(32672);
  status INT;
BEGIN
  IF valdebug IS NULL THEN
    SELECT is_debug INTO valdebug FROM TGE_FSED_IS_DEBUG;
  END IF;
  IF valdebug='O' THEN
    INSERT INTO TGE_FSED_AVANCEMENT_proc VALUES
      (id,systimestamp,txt
      );
    COMMIT;
  END IF;
END FSED_AVANCEMENT;
PROCEDURE FSED_ERREUR
  (
    p_id      IN NUMBER,
    p_nomproc IN VARCHAR2,
    p_idDate  IN VARCHAR2,
    p_erreur  IN CLOB
  )
AS
  PRAGMA AUTONOMOUS_TRANSACTION;
  line   VARCHAR(32672);
  status INT;
BEGIN
  INSERT
  INTO TGE_FSED_ERREUR
    (
      ID,
      PROC,
      PARAM,
      MESSAGE,
      date_err
    )
    VALUES
    (
      p_id ,
      p_nomproc,
      p_idDate ,
      p_erreur,
      sysdate
    );
  COMMIT;
END FSED_ERREUR;
PROCEDURE FSED_AVANCEMENT_PLSQL(
    p_id           IN NUMBER,
    p_typeAction   IN VARCHAR2,
    p_detailAction IN CLOB)
AS
  PRAGMA AUTONOMOUS_TRANSACTION;
  line   VARCHAR(32672);
  status INT;
BEGIN
  INSERT
  INTO TGE_AVANCEMENT_PLSQL
    (
      NUM,
      TYPE_ACTION,
      DATE_ACTION,
      DETAIL_ACTION
    )
    VALUES
    (
      p_id ,
      p_typeAction,
      SYSTIMESTAMP,
      p_detailAction
    );
  COMMIT;
END FSED_AVANCEMENT_PLSQL;
PROCEDURE remplissage_ligne
  (
    tabRetour   IN OUT nocopy TAB_pour_retour,
    tab         IN pour_comp,
    tablib      IN pour_lib,
    p_id_trt    IN NUMBER,
    p_numretour IN OUT NUMBER,
    p_numcol    IN NUMBER,
    p_code_op   IN VARCHAR2,
    p_TABLETYPE IN VARCHAR2
  )
AS
  VALEUR_TO_SEND VARCHAR2
  (
    1000
  )
  ;
BEGIN
  IF p_numcol      =0 THEN
    VALEUR_TO_SEND:=tab.C1;
  elsif p_numcol   =1 THEN
    VALEUR_TO_SEND:=tab.C2;
  elsif p_numcol   =2 THEN
    VALEUR_TO_SEND:=tab.C3;
  elsif p_numcol   =3 THEN
    VALEUR_TO_SEND:=tab.C4;
  elsif p_numcol   =4 THEN
    VALEUR_TO_SEND:=tab.C5;
  elsif p_numcol   =5 THEN
    VALEUR_TO_SEND:=tab.C6;
  elsif p_numcol   =6 THEN
    VALEUR_TO_SEND:=tab.C7;
  elsif p_numcol   =7 THEN
    VALEUR_TO_SEND:=tab.C8;
  elsif p_numcol   =8 THEN
    VALEUR_TO_SEND:=tab.C9;
  elsif p_numcol   =9 THEN
    VALEUR_TO_SEND:=tab.C10;
  elsif p_numcol   =10 THEN
    VALEUR_TO_SEND:=tab.C11;
  elsif p_numcol   =11 THEN
    VALEUR_TO_SEND:=tab.C12;
  elsif p_numcol   =12 THEN
    VALEUR_TO_SEND:=tab.C13;
  elsif p_numcol   =13 THEN
    VALEUR_TO_SEND:=tab.C14;
  elsif p_numcol   =14 THEN
    VALEUR_TO_SEND:=tab.C15;
  elsif p_numcol   =15 THEN
    VALEUR_TO_SEND:=tab.C16;
  elsif p_numcol   =16 THEN
    VALEUR_TO_SEND:=tab.C17;
  elsif p_numcol   =17 THEN
    VALEUR_TO_SEND:=tab.C18;
  elsif p_numcol   =18 THEN
    VALEUR_TO_SEND:=tab.C19;
  elsif p_numcol   =19 THEN
    VALEUR_TO_SEND:=tab.C20;
  elsif p_numcol   =20 THEN
    VALEUR_TO_SEND:=tab.C21;
  elsif p_numcol   =21 THEN
    VALEUR_TO_SEND:=tab.C22;
  elsif p_numcol   =22 THEN
    VALEUR_TO_SEND:=tab.C23;
  elsif p_numcol   =23 THEN
    VALEUR_TO_SEND:=tab.C24;
  elsif p_numcol   =24 THEN
    VALEUR_TO_SEND:=tab.C25;
  elsif p_numcol   =25 THEN
    VALEUR_TO_SEND:=tab.C26;
  elsif p_numcol   =26 THEN
    VALEUR_TO_SEND:=tab.C27;
  elsif p_numcol   =27 THEN
    VALEUR_TO_SEND:=tab.C28;
  elsif p_numcol   =28 THEN
    VALEUR_TO_SEND:=tab.C29;
  elsif p_numcol   =29 THEN
    VALEUR_TO_SEND:=tab.C30;
  END IF;
  --préparer envoi si NULL ou autre que valeur "ne pas envoyer"
  IF VALEUR_TO_SEND IS NULL OR VALEUR_TO_SEND <>'_NOTSEND_' THEN
    IF p_code_op     ='S' THEN
      --les suppressions sont des envois à blanc
      VALEUR_TO_SEND:=NULL;
    END IF;
    --éliminer les doublons même matricule déjà écrit et même valeur
    IF MatEcrit=tab.pacmat||'#'||tab.paiezad AND oldvaleur=NVL(VALEUR_TO_SEND,'@NULL@') THEN
      RETURN;
    END IF;
    --on a détecté au moins une différence
    MatARenvoyer:=tab.pacmat||'#'||tab.paiezad;
    --éliminer le passé et pour les historiques les doublons déjà écrits
    IF NVL(tab.DTFIN,to_date('31.12.2099','dd.mm.yyyy'))            >= mMoins1
      AND ( coldteffet <> 'a.DATE_EFF' 
      OR MatARenvoyer<>MatEcrit OR oldvaleur<>NVL(VALEUR_TO_SEND,'@NULL@') )
    THEN
      tabRetour(p_numretour).VALEUR                                 :=VALEUR_TO_SEND;
      tabRetour(p_numretour).DTEFFET                                :=tab.DTEFFET;
      tabRetour(p_numretour).CLE                                    :=tab.CLE;
      tabRetour(p_numretour).pacmat                                 :=tab.pacmat;
      tabRetour(p_numretour).paiezad                                :=tab.paiezad;
      tabRetour(p_numretour).ELEM                                   :=tablib.LIB;
      tabRetour(p_numretour).CODEOP                                 :=p_code_op;
      tabRetour(p_numretour).TYPE_DONNEE                            :=tablib.TYPE_DONNEE;
    IF coldteffet = 'a.DATE_EFF' THEN
    --au moins 1 histo écrit, forcer l'écriture des prochaines dates d'effet.
    MatEcrit:=MatARenvoyer;
    --mémoriser la valeur de cette colonne historique
    oldvaleur:=NVL(VALEUR_TO_SEND,'@NULL@');
    END IF;
      IF LENGTH(TRIM(TRANSLATE(tablib.OCC, ' +-.0123456789', ' '))) IS NULL THEN
        --occurrence numérique indiquée dans MAPDO
        tabRetour(p_numretour).OCC :=tablib.OCC;
      ELSE
        IF tablib.OCC     ='**' OR tablib.OCC='*F' OR tablib.OCC='*I' THEN
          IF p_TABLETYPE <>'OCCURS' THEN
            --occurrences spéciales, ce ne sont pas des occurrences Zadig donc on vide
            tabRetour(p_numretour).OCC :=NULL;
          ELSE
            --pour le type OCCURS valoriser OCC avec le rang par exemple 3ème enfant OCC=3
            tabRetour(p_numretour).OCC:=tab.RANK;
          END IF;
        ELSE
          --occurrence bizarre dans MAPDO (ni numérique, ni ** ni *F ni *I)
          tabRetour(p_numretour).OCC :=tablib.OCC;
        END IF;
      END IF;
      --incrémenter le n° de ligne pour anticiper la ligne suivante
      p_numretour:=p_numretour+1;
    END IF;
  END IF;
END remplissage_ligne;
------------------------------------
 FUNCTION GET_NB_MOIS_PAIE_INIT
 RETURN NUMBER
 IS
 p_nb_mois_paie_init SYS_VARSYS.VALVAR%type ;
 BEGIN
 BEGIN
 select TO_NUMBER(NVL(VALVAR,'0')) into p_nb_mois_paie_init from SYS_VARSYS where MODULE = 'GAP' and CODVAR = 'NB_MOIS_PAIE_INIT';
 EXCEPTION
 WHEN NO_DATA_FOUND THEN
 p_nb_mois_paie_init :=1;
 END ;
p_nb_mois_paie_init := p_nb_mois_paie_init-1;
RETURN p_nb_mois_paie_init;
 END GET_NB_MOIS_PAIE_INIT ;
------------------------------------
FUNCTION difference_col
  (
    tab1     IN pour_comp,
    tab2     IN pour_comp,
    p_numcol IN NUMBER
  )
  RETURN INTEGER
IS
BEGIN
  IF p_numcol=0 AND NVL(tab1.c1,'@NULL@') <>NVL(tab2.c1,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=1 AND NVL(tab1.c2,'@NULL@') <>NVL(tab2.c2,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=2 AND NVL(tab1.c3,'@NULL@') <>NVL(tab2.c3,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=3 AND NVL(tab1.c4,'@NULL@') <>NVL(tab2.c4,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=4 AND NVL(tab1.c5,'@NULL@') <>NVL(tab2.c5,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=5 AND NVL(tab1.c6,'@NULL@') <>NVL(tab2.c6,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=6 AND NVL(tab1.c7,'@NULL@') <>NVL(tab2.c7,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=7 AND NVL(tab1.c8,'@NULL@') <>NVL(tab2.c8,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=8 AND NVL(tab1.c9,'@NULL@') <>NVL(tab2.c9,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=9 AND NVL(tab1.c10,'@NULL@') <>NVL(tab2.c10,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=10 AND NVL(tab1.c11,'@NULL@') <>NVL(tab2.c11,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=11 AND NVL(tab1.c12,'@NULL@') <>NVL(tab2.c12,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=12 AND NVL(tab1.c13,'@NULL@') <>NVL(tab2.c13,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=13 AND NVL(tab1.c14,'@NULL@') <>NVL(tab2.c14,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=14 AND NVL(tab1.c15,'@NULL@') <>NVL(tab2.c15,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=15 AND NVL(tab1.c16,'@NULL@') <>NVL(tab2.c16,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=16 AND NVL(tab1.c17,'@NULL@') <>NVL(tab2.c17,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=17 AND NVL(tab1.c18,'@NULL@') <>NVL(tab2.c18,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=18 AND NVL(tab1.c19,'@NULL@') <>NVL(tab2.c19,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=19 AND NVL(tab1.c20,'@NULL@') <>NVL(tab2.c20,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=20 AND NVL(tab1.c21,'@NULL@') <>NVL(tab2.c21,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=21 AND NVL(tab1.c22,'@NULL@') <>NVL(tab2.c22,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=22 AND NVL(tab1.c23,'@NULL@') <>NVL(tab2.c23,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=23 AND NVL(tab1.c24,'@NULL@') <>NVL(tab2.c24,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=24 AND NVL(tab1.c25,'@NULL@') <>NVL(tab2.c25,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=25 AND NVL(tab1.c26,'@NULL@') <>NVL(tab2.c26,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=26 AND NVL(tab1.c27,'@NULL@') <>NVL(tab2.c27,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=27 AND NVL(tab1.c28,'@NULL@') <>NVL(tab2.c28,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=28 AND NVL(tab1.c29,'@NULL@') <>NVL(tab2.c29,'@NULL@') THEN
    RETURN 1;
  elsif p_numcol=29 AND NVL(tab1.c30,'@NULL@') <>NVL(tab2.c30,'@NULL@') THEN
    RETURN 1;
  ELSE
    RETURN 0;
  END IF;
END difference_col;
FUNCTION getTypeTable
  (
    p_table IN VARCHAR2
  )
  RETURN VARCHAR2
IS
  v_typeTable VARCHAR2(1);
BEGIN
  BEGIN
    SELECT typetable
    INTO v_typeTable
    FROM
      (SELECT 'p' AS typetable
      FROM user_cons_columns
      WHERE table_name =p_table
        --faux PACMAT, c'est un PAIEZAD
      AND p_table         <> 'DIC_ADM_CONTRAT_HISTO'
      AND constraint_name IN
        (SELECT user_constraints.constraint_name
        FROM user_constraints
        WHERE user_cons_columns.table_name =user_constraints.table_name
        AND CONSTRAINT_TYPE                ='P'
        )
      AND column_name='PACMAT'
      UNION
      SELECT 'z' AS typetable
      FROM user_cons_columns
      WHERE (table_name =p_table
        --PAIEZAD imposé
      OR p_table           = 'DIC_ADM_CONTRAT_HISTO')
      AND constraint_name IN
        (SELECT user_constraints.constraint_name
        FROM user_constraints
        WHERE user_cons_columns.table_name =user_constraints.table_name
        AND CONSTRAINT_TYPE                ='P'
        )
      AND column_name= 'PAIEZAD'
      UNION
      SELECT 'm' AS typetable
      FROM user_cons_columns
      WHERE table_name     =p_table
      AND constraint_name IN
        (SELECT user_constraints.constraint_name
        FROM user_constraints
        WHERE user_cons_columns.table_name =user_constraints.table_name
        AND CONSTRAINT_TYPE                ='P'
        )
      AND column_name= 'MATRIC'
      );
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
  END;
  RETURN v_typeTable;
END getTypeTable;
PROCEDURE effaceMatricToutTable(
    p_numpac IN VARCHAR2,
    p_pacmat IN VARCHAR2 )
AS
  CURSOR cur_tables
  IS
    SELECT DISTINCT TABLEPHY
    FROM tge_ref_mapta
    WHERE numpac     = p_numpac
    AND ALLERRETOUR IN ('A','2')
    AND TABLEPHY    <>'DIC_ADM_CONTRAT'
  UNION
  SELECT DISTINCT TABLEPHY
  FROM tge_ref_mapta
  WHERE numpac        = '*'
  AND ALLERRETOUR    IN ('A','2')
  AND TABLEPHY       <>'DIC_ADM_CONTRAT'
  AND TABLEPARAM NOT IN
    (SELECT TABLEPARAM
    FROM tge_ref_mapta
    WHERE numpac     = p_numpac
    AND ALLERRETOUR IN ('A','2')
    AND TABLEPHY    <>'DIC_ADM_CONTRAT'
    );
  lig_tables cur_tables%rowtype;
BEGIN
  OPEN cur_tables;
  LOOP
    FETCH cur_tables INTO lig_tables;
    EXIT
  WHEN cur_tables%NOTFOUND ;
    EXECUTE immediate 'DELETE FROM PHOTO_'||lig_tables.TABLEPHY||' where numpac=:2 and pacmat=:1' USING p_numpac,
    p_pacmat;
  END LOOP;
  CLOSE cur_tables;
END effaceMatricToutTable;
PROCEDURE getSoldMontant(
    p_numpac IN VARCHAR2 ,
    p_id_trt IN NUMBER,
    DicoPret OUT VARCHAR2 ,
    soldePret OUT VARCHAR2 ,
    MontantPret OUT VARCHAR2 ,
    DicoOpposition OUT VARCHAR2 ,
    soldeOpposition OUT VARCHAR2 ,
    MontantOpposition OUT VARCHAR2 )
AS
BEGIN
  SELECT MontantPret_DONNEE,
    SoldePret_DONNEE,
    DicoPret_DONNEE,
    MontantOpposition_DONNEE,
    SoldeOpposition_DONNEE,
    DicoOpposition_DONNEE
  INTO MontantPret,
    soldePret,
    DicoPret,
    MontantOpposition,
    soldeOpposition,
    DicoOpposition
  FROM
    (
    --ce SELECT fournit la liste element/donneegxp des éléments personnalisés
    SELECT DISTINCT a.element,
      a.DONNEEGXP
    FROM tge_ref_mapdo a,
      (
      --liste résolue "t" des tables MAPTA en Aller pour éviter les tables en Retour
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac     =p_numpac
      AND ALLERRETOUR IN ('A','2','I')
      UNION ALL
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac        ='*'
      AND ALLERRETOUR    IN ('A','2','I')
      AND tableparam NOT IN
        (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
        )
      ) t ,
      user_tables b
    WHERE a.numpac   =p_numpac
    AND t.tableparam =a.TABLEGXP
    AND b.table_name =a.TABLEGXP
    AND a.element   IN ('B712','B714','B832','B834')
    UNION ALL
    --ce SELECT fournit la liste element/donneegxp des éléments Pac "*"
    SELECT DISTINCT a.element,
      a.DONNEEGXP
    FROM tge_ref_mapdo a,
      (
      --liste résolue "t" des tables MAPTA en Aller pour éviter les tables en Retour
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac     =p_numpac
      AND ALLERRETOUR IN ('A','2','I')
      UNION ALL
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac        ='*'
      AND ALLERRETOUR    IN ('A','2','I')
      AND tableparam NOT IN
        (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
        )
      ) t ,
      user_tables b
    WHERE a.numpac     ='*'
    AND t.tableparam   =a.TABLEGXP
    AND b.table_name   =a.TABLEGXP
    AND a.element     IN ('B712','B714','B832','B834')
    AND a.element NOT IN
      (SELECT element
      FROM tge_ref_mapdo a,
        (
        --liste résolue "t" des tables MAPTA en Aller pour éviter les tables en Retour
        SELECT *
        FROM tge_ref_mapta
        WHERE numpac     =p_numpac
        AND ALLERRETOUR IN ('A','2','I')
        UNION ALL
        SELECT *
        FROM tge_ref_mapta
        WHERE numpac        ='*'
        AND ALLERRETOUR    IN ('A','2','I')
        AND tableparam NOT IN
          (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
          )
        ) t ,
        user_tables b
      WHERE a.numpac   =p_numpac
      AND t.tableparam =a.TABLEGXP
      AND b.table_name =a.TABLEGXP
      )
    UNION ALL
    --ce SELECT fournit la liste 'DICO'||element/tableparam des dictionnaires des éléments personnalisés
    SELECT DISTINCT 'DICO'
      ||a.element,
      a.TABLEGXP AS DONNEEGXP
    FROM tge_ref_mapdo a,
      (
      --liste résolue "t" des tables MAPTA en Aller pour éviter les tables en Retour
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac     =p_numpac
      AND ALLERRETOUR IN ('A','2','I')
      UNION ALL
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac        ='*'
      AND ALLERRETOUR    IN ('A','2','I')
      AND tableparam NOT IN
        (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
        )
      ) t ,
      user_tables b
    WHERE a.numpac   =p_numpac
    AND t.tableparam =a.TABLEGXP
    AND b.table_name =a.TABLEGXP
    AND a.element   IN ('B712','B714','B832','B834')
    UNION ALL
    --ce SELECT fournit la liste 'DICO'||element/tableparam des dictionnaires des éléments Pac "*"
    SELECT DISTINCT 'DICO'
      ||a.element,
      a.TABLEGXP AS DONNEEGXP
    FROM tge_ref_mapdo a,
      (
      --liste résolue "t" des tables MAPTA en Aller pour éviter les tables en Retour
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac     =p_numpac
      AND ALLERRETOUR IN ('A','2','I')
      UNION ALL
      SELECT *
      FROM tge_ref_mapta
      WHERE numpac        ='*'
      AND ALLERRETOUR    IN ('A','2','I')
      AND tableparam NOT IN
        (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
        )
      ) t ,
      user_tables b
    WHERE a.numpac     ='*'
    AND t.tableparam   =a.TABLEGXP
    AND b.table_name   =a.TABLEGXP
    AND a.element     IN ('B712','B714','B832','B834')
    AND a.element NOT IN
      (SELECT element
      FROM tge_ref_mapdo a,
        (
        --liste résolue "t" des tables MAPTA en Aller pour éviter les tables en Retour
        SELECT *
        FROM tge_ref_mapta
        WHERE numpac     =p_numpac
        AND ALLERRETOUR IN ('A','2','I')
        UNION ALL
        SELECT *
        FROM tge_ref_mapta
        WHERE numpac        ='*'
        AND ALLERRETOUR    IN ('A','2','I')
        AND tableparam NOT IN
          (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
          )
        ) t ,
        user_tables b
      WHERE a.numpac   =p_numpac
      AND t.tableparam =a.TABLEGXP
      AND b.table_name =a.TABLEGXP
      )
    ) --fin de la liste des éléments et des dictionnaires empilés dans la même colonne
    --la fonction PIVOT transforme la liste element/donneegxp en distribution horizontale. Les lignes DICOB714 et DICOB834 sont abandonnées, on suppose que c'est le même dico.
    pivot (MAX(DONNEEGXP) AS DONNEE FOR element IN ('B712' AS MontantPret, 'B714' AS SoldePret, 'B832' AS MontantOpposition, 'B834' AS SoldeOpposition, 'DICOB712' AS DicoPret, 'DICOB832' AS DicoOpposition));
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id_trt , 'getSoldMontant ' ,p_id_trt||','||p_numpac , err_code||'-'||err_msg );
  raise;
END getSoldMontant;
PROCEDURE insert_gap_trt
(
    p_id          IN NUMBER ,
    p_numpac      IN TGE_REF_PAC.numpac%type,
    p_periode     IN TGE_REF_PAC.PERIODEENCOURS%TYPE,
    p_type_retour IN VARCHAR2 
)
IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  status      INT;
  v_dtdebMois VARCHAR2(8);
  v_finMois   VARCHAR2(8);
  v_periode TGE_REF_PAC.PERIODEENCOURS%TYPE;
  v_req CLOB;
BEGIN
  --get date debut et fin du mois
  FSED_AVANCEMENT(p_id,'insert_gap_trt Debut p_id='||p_id||';p_numpac='||p_numpac||';p_periode='||NVL(p_periode,v_periode)||';p_type_retour='||p_type_retour);
  SELECT periodeencours INTO v_periode FROM tge_ref_pac WHERE numpac =p_numpac;
  BEGIN
    SELECT DATE_DEBUT_MOIS,
      DATE_FIN_MOIS
    INTO v_dtdebMois,
      v_finMois
    FROM TGE_REF_PER
    WHERE numpac       = p_numpac
    AND periodeencours = NVL(p_periode,v_periode);
  EXCEPTION
  WHEN NO_data_Found THEN
    v_dtdebMois := v_periode ||'01';
    select to_char(last_day(to_date(to_char(v_periode),'yyyymm')),'YYYYMMDD') into v_finMois   from dual;
  WHEN OTHERS THEN
    v_dtdebMois :=null;
    v_finMois :=null;
  END;
  --La création dans GAP_TRT est donc conditionnée : on regarde s’il existe déjà dans GAP_TRT
  --une ligne pour N° d’échange, date de paie et Numpac (infos de la carte 00).
  v_req := 'MERGE into GAP_TRT USING (SELECT 1 FROM dual) ON ( ID_TRT= :p_id )';--AND NUMPAC = :p_numpac AND NUMERO_ECHANGE =''0000'' AND PERIODE_PAIE = :p_periode
  v_req := v_req ||' WHEN NOT MATCHED THEN INSERT (ID_TRT,NUMPAC,PERIODE_PAIE,NUMERO_ECHANGE,MODELE,NATURE,DATE_DEBUT_PAIE,DATE_FIN_PAIE,WORKFLOW_ID,DATE_PREVUE_TRT,DATE_PLANIF_TRT,DATE_DEBUT_TRT,INFO) ';
  v_req := v_req ||' values (:p_id,:p_numpac,:p_periode,''0000'',''ALP'',:v_dtdebMois,:v_dtdebMois,:v_finMois,''TGEPAY'||p_numpac||'PACGXP'||NVL(p_periode,v_periode)||'0000'',sysdate,sysdate,sysdate,:p_type_retour)' ;
  EXECUTE IMMEDIATE v_req USING p_id,
  p_id,
  p_numpac,
  NVL(p_periode,v_periode),
  p_type_retour,
  v_dtdebMois,
  v_finMois,
  p_type_retour;
  COMMIT;
  FSED_AVANCEMENT(p_id,'insert_gap_trt Fin v_req='||v_req);
END insert_gap_trt;
PROCEDURE insert_gap_trt_suivi(
    p_id              IN NUMBER ,
    p_statut          IN TGE_REF_PAC.numpac%type,
    p_code_retour_zpp IN TGE_REF_PAC.PERIODEENCOURS%TYPE,
    p_login           IN VARCHAR2,
    p_type_retour     IN VARCHAR2)
IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  status INT;
  v_req  VARCHAR2(3000);
BEGIN
  IF p_type_retour IN ('RR','RC','RN','CL') THEN
    FSED_AVANCEMENT(p_id,'insert_gap_trt_suivi Debut p_id='||p_id||';p_statut='||p_statut||';p_code_retour_zpp='||p_code_retour_zpp||';p_login='||p_login);
    v_req := 'INSERT INTO gap_trt_suivi(ID_TRT,DATE_EVT,STATUT,CODE_RETOUR_ZPP,LOGIN) VALUES (:p_id,SYSTIMESTAMP,:p_statut ,:p_code_retour_zpp,:p_login)';
    FSED_AVANCEMENT(p_id,'insert_gap_trt_suivi ='||p_id||';p_statut='||p_statut||';p_code_retour_zpp='||p_code_retour_zpp||';p_login='||p_login||';v_req='||v_req);
    EXECUTE IMMEDIATE v_req USING p_id,
    p_statut,
    p_code_retour_zpp,
    p_login;
    COMMIT;
    FSED_AVANCEMENT(p_id,'insert_gap_trt_suivi Fin');
  END IF;
END insert_gap_trt_suivi;
/**********************************************************************
  Funct : preparation_FSED_unit 
  DESC  : 
***********************************************************************/
PROCEDURE preparation_FSED_unit(
    p_nomTable  IN VARCHAR2,
    p_alias     IN VARCHAR2,
    p_TABLETYPE IN VARCHAR2,
    p_id_trt    IN NUMBER,
    p_numpac    IN VARCHAR2,
    p_periode   IN VARCHAR2,
    p_ALLERRETOUR IN VARCHAR2,
     p_nb_mois_paie_init IN number)
AS
  --curseur sur MAPDO
  CURSOR cur_mapdo IS
    SELECT a.*,
      b.*,
      c.type AS typeZADIG,
      c.longueur,
      c.MASQUE
    FROM
      (SELECT *
      FROM tge_ref_mapdo
      WHERE numpac     =p_numpac
      AND (tablegxp    =p_alias
      AND element NOT IN ('A301','A302','A962')
        --Pour ces 3 éléments on impose un alias spécial, ils seront traités indépendamment.
      OR p_alias   ='VUE-A301-A302-A962'
      AND element IN ('A301','A302','A962'))
    UNION ALL
    SELECT *
    FROM tge_ref_mapdo
    WHERE numpac     ='*'
    AND (tablegxp    =p_alias
    AND element NOT IN ('A301','A302','A962')
      --Pour ces 3 éléments on impose un alias spécial, ils seront traités indépendamment.
    OR p_alias       ='VUE-A301-A302-A962'
    AND element     IN ('A301','A302','A962'))
    AND element NOT IN
      (SELECT element
      FROM tge_ref_mapdo
      WHERE numpac=p_numpac
      )
      ) a,
      (SELECT column_name,
        data_type
      FROM user_tab_columns
      WHERE table_name = p_nomTable
      ) b,
      (SELECT *
      FROM TGE_REF_DICOZ
      WHERE numpac=p_numpac
      ) C
    WHERE donneegxp  = column_name
    AND c.element    =a.element
    AND (donnfiltre IS NULL
    OR donnfiltre   IN
      (SELECT c.column_name
      FROM user_tab_columns c
      WHERE c.table_name = p_nomTable
      ))
    AND occurence NOT LIKE '%!%'
    ORDER BY a.element,a.occurence;

    lig_mapdo      cur_mapdo%rowtype;
    requete        CLOB;
    requetePhoto   CLOB;
    requeteTDIF    CLOB;
    clselect       CLOB;
    numcol         NUMBER:=0;
    i              NUMBER:=1;
    j              NUMBER:=1;
    numretour      NUMBER:=1;
    tab1           TAB_pour_comp;
    tab2           TAB_pour_comp;
    tabLib         TAB_pour_lib;
    tabRetour      TAB_pour_retour;
    tabNotRetour   TAB_pour_retour;
    donnee         VARCHAR(1000);
    tabCles        TAB_cle;
    cles           VARCHAR2(1000);
    v_typeTable    VARCHAR2(1);
    clwhere        VARCHAR(3000);
    clfrom         VARCHAR(3000);
    clwhereDate    VARCHAR(500);
    clwherePrOp    VARCHAR(500);
    coldtfin       VARCHAR(255);
    histoARenvoyer BOOLEAN:=false;
    hasDtfin       NUMBER;
    hasDtfinSit    NUMBER;
    reqLength      NUMBER;
    photoLength    NUMBER;
    curclemati     VARCHAR2(20);
    curclematj     VARCHAR2(20);
    preclemati     VARCHAR2(20);
    preclematj     VARCHAR2(20);
    tab1cle        VARCHAR2(1000);
    tab2cle        VARCHAR2(1000);
    w_where_dic    CLOB;
    w_where_dic1   CLOB;
    w_arg1         CLOB;
    w_arg2         CLOB;
    isDICOJointure Number;
  BEGIN
    --vérifier le type principal de la table m=MATRIC p=PACMAT z=PAIEZAD
    v_typeTable:=getTypeTable(p_nomTable);
    --préparation des champs relatifs à la clé et à la date d'effet
    SELECT a.column_name,
      b.data_type bulk collect
    INTO tabCles
    FROM user_cons_columns a,
      USER_TAB_COLUMNS b
    WHERE a.table_name   =p_nomTable
    AND a.table_name     =b.table_name
    AND a.column_name    =b.column_name
    AND constraint_name IN
      (SELECT c.constraint_name
      FROM user_constraints c
      WHERE c.table_name =a.table_name
      AND CONSTRAINT_TYPE='P'
      );
    --colonne dteffet du résultat qui se déverse dans DIF_FSED et participe aux jointures D_A_C et D_A_C_H
    coldteffet:='d.DSDCN';
    --coldatecle (colonne date dans la clé) sert à fabriquer le filtre qui élimine le futur
    coldatecle:='';
    --colonne dtfin du résultat qui participe aux jointures D_A_C et D_A_C_H
    coldtfin :='to_date(''20991231'',''yyyymmdd'') as dtfin ';
    --début du champ "cle" selon le type du dico
    IF v_typeTable   ='m' THEN
      cles          :='b.pacmat||''#''||d.paiezad';
    ELSIF v_typeTable='p' THEN
      cles          :='a.pacmat||''#''||d.paiezad';
    ELSE
      cles :='NVL(a.pacmat,a.paiezad)||''#''||a.paiezad';
    END IF;
    --reste du champ "cle"
    FOR i IN tabCles.first..tabCles.last
    LOOP
      IF tabCles(i).column_name NOT IN ('NUMPAC','MATRIC','PACMAT','PAIEZAD','NUMCNT') THEN
        cles                   :=cles||'||''#''||';
        IF tabCles(i).data_type ='DATE' THEN
          --une date dans la clé servira à filtrer le futur
          coldatecle               :=tabCles(i).column_name;
          cles                     :=cles||'to_char(a.'||coldatecle||',''yyyymmdd'')';
          IF tabCles(i).column_name = 'DATE_EFF' THEN
            coldteffet             :='a.DATE_EFF';
          END IF;
        ELSE
          cles :=cles||'a.'||tabCles(i).column_name;
        END IF;
      END IF;
    END LOOP;
    --champ "cle" cas particulier de D_A_C
    IF p_nomTable ='DIC_ADM_CONTRAT' THEN
      coldatecle :='DSDCN';
      coldteffet :='a.DSDCN';
      cles       :=cles||'||''#''||to_char(a.DSDCN,''yyyymmdd'')';
    END IF;
    --préparation du filtre sur la date d'effet et la date de fin si elles existent
    SELECT COUNT(*)
    INTO   hasDtfinSit
    FROM   user_tab_columns
    WHERE  table_name =p_nomTable
    AND     column_name  ='DATE_SORTIE_SIT_BO';
     --préparation du filtre sur la date d'effet et la date de fin si elles existent
    SELECT COUNT(*)
    INTO   hasDtfin
    FROM   user_tab_columns
    WHERE  table_name =p_nomTable
    AND    column_name  ='DATE_FIN';
    clwhereDate     :='';
    --si on a une date dans la clé on élimine le futur avec (date de naissance d'enfant, d'adhésion mutuelle, d'effet HISTO...)
    IF coldatecle IS NOT NULL THEN
      clwhereDate :=' and nvl(a.'||coldatecle||',to_date(''19000101'',''yyyymmdd''))<=last_day(to_date('''||p_periode||''',''yyyymm''))';
      IF p_TABLETYPE='H2' AND p_nomTable ='DIC_PERIODES_RECUEIL_HIS' THEN
      clwhereDate :=clwhereDate||' and to_char(a.'||coldatecle||',''yyyymm'')='''||p_periode||'''';
      END IF;
      IF  p_TABLETYPE='DERNIERE' THEN
         clwhereDate :=clwhereDate||' and nvl(a.'||coldatecle||',to_date(''19000101'',''yyyymmdd''))<=d.date_sortie_sit_bo';
      END IF;      
      IF p_alias   ='VUE-A301-A302-A962' THEN
        --cas particulier pour lire D_A_C_H jusqu'au 1er jour de M+1 donc on ajoute 1 jour à la limite
        clwhereDate :=clwhereDate||'+1';
      END IF;
    END IF;
    --si on a une date de fin dans la table on elle alimente la colonne dtfin pour exclure les vieux historiques inutiles (finis avant 1er jour de M-1)
    IF hasDtfinSit >0 THEN
      --date fin spéciale calculée par la GAP une seule fois à 2099 par MATRIC
      coldtfin     :='a.DATE_SORTIE_SIT_BO as dtfin';
    ELSIF p_nomtable='DIC_ADM_CONTRAT' THEN
      --pour D_A_C on va chercher DATE_SORTIE_SIT_BO sur D_A_C_H
      coldtfin    :='d.DATE_SORTIE_SIT_BO as dtfin';
    ELSIF hasDtfin >0 THEN
      --date fin d'HISTO classique
      coldtfin :='a.DATE_FIN as dtfin';
    END IF;
    --préparation du filtre sur prêt et opposition car solde=0 filtre, mais montant=0 force l'envoi.
    IF p_alias     =DicoPret THEN
      clwherePrOp := ' and (NVL(a.'||soldePret ||',0) !=0 or NVL(a.'||MontantPret ||',0) =0) ';
    ELSIF p_alias  =DicoOpposition THEN
      clwherePrOp := ' and (NVL(a.'||soldeOpposition||',0) !=0 or NVL(a.'||MontantOpposition||',0) =0) ';
    ELSE
      clwherePrOp:='';
    END IF;
    --création des requêtes sur DICO et table PHOTO
    OPEN cur_mapdo;
    LOOP
      FETCH cur_mapdo INTO lig_mapdo;
      IF (numcol =0 OR numcol >=30) THEN
        FSED_AVANCEMENT(p_id_trt,'Creation requetes '||p_nomTable);
        clselect :='select ';
        tablib.delete;
        IF v_typeTable    ='m' THEN
          clselect       :=clselect||cles||' as CLE,b.numpac,b.pacmat,d.paiezad,'||coldteffet||' as dteffet,'||coldtfin;
        ELSIF v_typeTable ='p' THEN
          clselect       :=clselect||cles||' as CLE,a.numpac,a.pacmat,d.paiezad,'||coldteffet||' as dteffet,'||coldtfin;
        ELSE
          --les dicos 'z' (PAIEZAD) peuvent avoir une colonne PACMAT mal remplie
          clselect :=clselect||cles||' as CLE,a.numpac,NVL(a.pacmat,a.paiezad) as pacmat,a.paiezad,'||coldteffet||' as dteffet,'||coldtfin;
        END IF;
        IF p_TABLETYPE     ='PREMIERE' OR p_TABLETYPE='DERNIERE' OR p_TABLETYPE='OCCURS' THEN
          IF v_typetable   ='m' THEN
            clselect      :=clselect||','||' row_number() over (partition by d.paiezad order by '||cles;
          ELSIF v_typetable='p' THEN
            clselect      :=clselect||','||' row_number() over (partition by a.paiezad order by '||cles;
          ELSE
            clselect :=clselect||','||' row_number() over (partition by a.paiezad order by '||cles;
          END IF;
          IF p_TABLETYPE='DERNIERE' THEN
            clselect   :=clselect||' desc';
          END IF;
          clselect :=clselect||') as rank ';
        ELSE
          clselect :=clselect||',null as rank ';
        END IF;
        numcol :=0;
      END IF;
      IF cur_mapdo%NOTFOUND THEN
        numcol:=numcol+1;
        FOR k        IN numcol..30
        LOOP
          clselect :=clselect||','''' as C'||k ;
        END LOOP;
      ELSE
        tablib(numcol).LIB                        :=lig_mapdo.ELEMENT;
        IF lig_mapdo.TRTPARTICULIER               IS NULL THEN
          IF lig_mapdo.data_type                   ='DATE' THEN
            tablib(numcol).TYPE_DONNEE            :='D';
          elsif instr(lig_mapdo.data_type,'NUMBER')>0 THEN
            tablib(numcol).TYPE_DONNEE            :='N';
          ELSE
            tablib(numcol).TYPE_DONNEE:='A';
          END IF;
        ELSE
          -- Transcription du format dans TGE_REF_DICOZ
          IF lig_mapdo.typeZADIG       ='P' THEN
            tablib(numcol).TYPE_DONNEE:='N';
          ELSIF lig_mapdo.typeZADIG    ='N' AND lig_mapdo.MASQUE IN (1,2,3,4,5,6,7)THEN
            tablib(numcol).TYPE_DONNEE:='D';
          ELSIF lig_mapdo.typeZADIG    ='N' AND lig_mapdo.MASQUE NOT IN (1,2,3,4,5,6,7)THEN
            tablib(numcol).TYPE_DONNEE:='N';
          ELSIF lig_mapdo.typeZADIG    ='A' THEN
            tablib(numcol).TYPE_DONNEE:='A';
          ELSE
            tablib(numcol).TYPE_DONNEE:=lig_mapdo.typeZADIG;
          END IF;
        END IF;
        tablib(numcol).OCC                :=lig_mapdo.OCCURENCE;
        clselect                          :=clselect||',';
        donnee :=getClauseSelect(p_numpac,
                                 'a',
                                 lig_mapdo.DONNEEGXP,
                                 lig_mapdo.DONNFILTRE,
                                 lig_mapdo.OPERFILTRE,
                                 lig_mapdo.VALFILTRE,
                                 lig_mapdo.TRTPARTICULIER,
                                 lig_mapdo.ENVOI_SYSTEMATIQUE,
                                 lig_mapdo.data_type,
                                 lig_mapdo.typeZADIG,
                                 lig_mapdo.MASQUE,
                                 tablib(numcol).OCC,
                                 TRUE);
        numcol :=numcol+1;
        clselect :=clselect||donnee||' as C'||numcol;
        FSED_AVANCEMENT(p_id_trt,'numcol='||TO_CHAR(numcol)||' mapdo='||lig_mapdo.NUMPAC||'/'||lig_mapdo.ELEMENT||'/'||lig_mapdo.OCCURENCE||'/'||lig_mapdo.DONNEEGXP||'/'||lig_mapdo.TABLEGXP||'/'||lig_mapdo.DONNFILTRE||'/'||lig_mapdo.OPERFILTRE||'/'||lig_mapdo.VALFILTRE||'/'||lig_mapdo.TRTPARTICULIER||'/'||lig_mapdo.ENVOI_SYSTEMATIQUE||'/'||lig_mapdo.FORCABLE_ECRAN_GENERE||' data_type='||lig_mapdo.data_type||' zadig='||lig_mapdo.typeZadig||'/'||TO_CHAR(lig_mapdo.longueur)||'/'||lig_mapdo.masque);
      END IF;
      --toutes les 30 colonnes on lance les requêtes et on effectue les comparaisons
      IF (numcol =30 OR cur_mapdo%NOTFOUND) THEN
        --clause from commune avec ses jointures
        clfrom       :='(SELECT * FROM ( WITH TABLE_DATES_EFF (PACMAT, NUMCNT, DATE_EFF) AS ( SELECT DISTINCT DACH2.PACMAT, DACH2.NUMCNT , MAX(DATE_EFF) OVER (PARTITION BY L.NUMPAC, L.PACMAT, DACH2.NUMCNT) ';
        clfrom       :=clfrom||'FROM GAP_TRT_LISTE_MAT L, DIC_ADM_CONTRAT_HISTO DACH2 ';
        clfrom       :=clfrom||'WHERE L.ID_TRT = '||p_id_trt||' AND L.NUMPAC = '''||p_numpac||''' AND DACH2.NUMPAC = '''||p_numpac||''' ';
        clfrom       :=clfrom||'AND DACH2.PACMAT = L.PACMAT AND DACH2.DATE_EFF <=LAST_DAY(TO_DATE('''||p_periode||''',''yyyymm'')) AND DACH2.DATE_SORTIE_SIT_BO >= ADD_MONTHS((TO_DATE('''||p_periode||''',''yyyymm'')),-'||p_nb_mois_paie_init||') ) ';
        clfrom       :=clfrom||'SELECT C.NUMPAC, C.MATRIC, C.PACMAT, MAX(DACS.CODE_CHRONO) CODE_CHRONO, DACH.PAIEZAD, MIN(C.DSDCN) DSDCN, MAX(DACH.DATE_SORTIE_SIT_BO) DATE_SORTIE_SIT_BO ';
        clfrom       :=clfrom||'FROM TABLE_DATES_EFF T, DIC_ADM_CONTRAT C, DIC_ADM_CONTRAT_SITU DACS, DIC_ADM_CONTRAT_HISTO DACH ';
        clfrom       :=clfrom||'WHERE C.NUMPAC = '''||p_numpac||''' AND DACS.NUMPAC = '''||p_numpac||''' AND DACH.NUMPAC = '''||p_numpac||''' ';
        clfrom       :=clfrom||'AND C.PACMAT = T.PACMAT AND C.NUMCNT = T.NUMCNT AND DACH.PACMAT = T.PACMAT AND DACH.NUMCNT = T.NUMCNT AND DACH.DATE_EFF = T.DATE_EFF AND DACS.PACMAT = T.PACMAT AND DACS.NUMCNT = T.NUMCNT AND DACS.PAIEZAD = DACH.PAIEZAD ';
        clfrom       :=clfrom||'AND C.DSDCN <=LAST_DAY(TO_DATE('''||p_periode||''',''yyyymm'')) AND NVL(dach.DRPAI2, ''B'') <> ''B'' AND C.NATCOL IN (''SAL'',''STA'') GROUP BY C.NUMPAC, C.MATRIC, C.PACMAT,DACH.PAIEZAD )) d WHERE '||coldteffet||' between d.dsdcn and d.date_sortie_sit_bo AND ';
        IF v_typeTable='m' THEN
          --dictionnaire à base de MATRIC (conjoint, enfants, perso...)
          clwhere       :='a.matric=d.matric '||clwhereDate;
          requete       :=REPLACE(REPLACE(REPLACE(clselect,'b.','d.'),'@###',''),'###@','')||' from '||p_nomTable||' a, '||clfrom||clwhere||' order by cle';
          requetePhoto  :=REGEXP_REPLACE(REPLACE(clselect,'b.','a.'),'(@###)[^###@]+(###@)','''_TO_SEND_''')||' from PHOTO_'||p_nomTable||' a, '||REPLACE(clfrom,' DIC_ADM_CONTRAT C',' PHOTO_DIC_ADM_CONTRAT C')||'a.numpac='''||p_numpac||''' and a.pacmat=d.pacmat and '||clwhere||' order by cle';
        ELSIF v_typeTable='p' THEN
          --dictionnaire à base de PACMAT (D_A_C, Oppositions à partir de la 5.03...)
          clwhere      :='a.numpac='''||p_numpac||''' and a.pacmat=d.pacmat '||clwhereDate||clwherePrOp;
          requete      :=REPLACE(REPLACE(clselect,'@###',''),'###@','')||' from '||p_nomTable||' a, '||clfrom||clwhere||' order by cle';
          requetePhoto :=REGEXP_REPLACE(clselect,'(@###)[^###@]+(###@)','''_TO_SEND_''')||' from PHOTO_'||p_nomTable||' a, '||REPLACE(clfrom,' DIC_ADM_CONTRAT C',' PHOTO_DIC_ADM_CONTRAT C')||'d.numpac='''||p_numpac||''' and '||clwhere||' order by cle';
        ELSE
          --dictionnaire à base de PAIEZAD (D_A_C_H, imputations permanentes par exemple)
          clwhere      :='a.numpac='''||p_numpac||''' and a.pacmat=d.pacmat and a.paiezad=d.paiezad '||clwhereDate||clwherePrOp;
          requete      :=REPLACE(REPLACE(clselect,'@###',''),'###@','')||' from '||p_nomTable||' a, '||clfrom||clwhere||' order by cle';
          requetePhoto :=REGEXP_REPLACE(clselect,'(@###)[^###@]+(###@)','''_TO_SEND_''')||' from PHOTO_'||p_nomTable||' a, '||REPLACE(clfrom,' DIC_ADM_CONTRAT C',' PHOTO_DIC_ADM_CONTRAT C')||'d.numpac='''||p_numpac||''' and '||clwhere||' order by cle';
        END IF;
        requetePhoto :=REPLACE (requetePhoto,'to_char(''_TO_SEND_'',''yyyymmddHH24MISS'')','to_char(''_TO_SEND_'')');
        --recup caluse where
        select instr(requete,'$DICOUPHOTO_JOINTURE') into isDICOJointure from dual;
        IF isDICOJointure != 0 THEN
        w_where_dic1 :=  REGEXP_SUBSTR(requete,'\(.*\)');
        w_where_dic:= REPLACE(REGEXP_SUBSTR(requete,'\$DICOUPHOTO_JOINTURE[^\)]*'),'$DICOUPHOTO_JOINTURE(','');
        --recup arg 1:
        w_arg1 := substr(w_where_dic,1,instr(w_where_dic,',',-1)-1);
        --recup arg 2 :
        w_arg2 := substr(w_where_dic,instr(w_where_dic,',',-1)+1,length(w_where_dic)-instr(w_where_dic,',',-1));
        requete :=REPLACE (REPLACE (requete,w_where_dic1,w_arg1),'$DICOUPHOTO_JOINTURE','');
        requetePhoto :=REPLACE (REPLACE (requetePhoto,w_where_dic1,w_arg2),'$DICOUPHOTO_JOINTURE','');
        END IF;
        requete :=REPLACE (requete,'$DICOUPHOTO',p_nomTable);
        requetePhoto :=REPLACE (requetePhoto, '$DICOUPHOTO','PHOTO_'||p_nomTable);
        
        IF tablib.exists(0) THEN
          IF p_TABLETYPE ='PREMIERE' OR p_TABLETYPE='DERNIERE' THEN
            requete     :='select * from ('||requete||') where rank=1';
            requetePhoto:='select * from ('||requetePhoto||') where rank=1';
          END IF;
          tab1.delete;
          tab2.delete;
          EXECUTE immediate 'select length(:req) from dual' INTO reqLength USING requete ;
          EXECUTE immediate 'select length(:req) from dual' INTO photoLength USING requetePhoto ;
          FSED_AVANCEMENT(p_id_trt,'Execution requete '||p_alias);
          FSED_AVANCEMENT(p_id_trt,SUBSTR(requete,1,4000));
          IF reqLength IS NOT NULL AND reqLength>4000 THEN
            FSED_AVANCEMENT(p_id_trt,SUBSTR(requete,4001,4000));
            IF reqLength IS NOT NULL AND reqLength>8000 THEN
              FSED_AVANCEMENT(p_id_trt,SUBSTR(requete,8001,4000));
            END IF;
          END IF;
          EXECUTE immediate requete bulk collect INTO tab1 ;
          FSED_AVANCEMENT(p_id_trt,'Fin execution requete DICO');

          IF p_ALLERRETOUR != 'I' THEN
            FSED_AVANCEMENT(p_id_trt,'Execution requetePhoto '||p_alias);
            FSED_AVANCEMENT(p_id_trt,SUBSTR(requetePhoto,1,4000));
            IF photoLength IS NOT NULL AND photoLength>4000 THEN
              FSED_AVANCEMENT(p_id_trt,SUBSTR(requetePhoto,4001,4000));
              IF photoLength IS NOT NULL AND photoLength>8000 THEN
                FSED_AVANCEMENT(p_id_trt,SUBSTR(requetePhoto,8001,4000));
              END IF;
            END IF;
            EXECUTE immediate requetePhoto bulk collect INTO tab2;
            FSED_AVANCEMENT(p_id_trt,'Fin execution requete PHOTO ');
          END IF;
          FSED_AVANCEMENT(p_id_trt,'Debut traitement des differences lignes DICO='||TO_CHAR(NVL(tab1.last,0))||' lignes PHOTO='||TO_CHAR(NVL(tab2.last,0)));
          numretour:=1;
          tabRetour.delete;
          --Boucle principale sur la colonne de 0 à 29 indicée par numcol
          FOR numcol IN tablib.first..tablib.last
          LOOP
            --Pour chaque nouvelle colonne on initialise le dernier matricule, les matricules en cours, et les indices.
            i            :=1;
            j            :=1;
            MatARenvoyer :=' ';
            MatEcrit     :=' ';
            oldvaleur    :=' ';
            curclemati   :=' ';
            curclematj   :=' ';
            preclemati   :='#';
            preclematj   :='#';
            tab1cle      :=' ';
            tab2cle      :=' ';
            --Appareillage "tab1" (DIC_xxx) et "tab2" (PHOTO_DIC_xxx) triés selon leurs clés
            WHILE i <= tab1.last OR j <= tab2.last
            LOOP
              IF i        <= tab1.last THEN
                --constitution de la clé "matricule courant" partie GAP

                curclemati:=tab1(i).pacmat||'#'||tab1(i).paiezad;
                IF p_TABLETYPE IN ('OCCURS','PREMIERE','DERNIERE') THEN
                  --clé de comparaison = couple pacmat-paiezad + rang de l'OCCURS (vaut 1 sur PREMIERE et DERNIERE)
                  tab1cle :=curclemati||TO_CHAR(NVL(tab1(i).rank,0),'000');
                ELSE
                  --clé de comparaison = celle de DIF_FSED donc celle de la ligne Oracle
                  tab1cle :=tab1(i).cle;
                END IF;
              ELSE
                curclemati :=' ';
                --clé de comparaison = high_value pour faciliter les comparaisons
                tab1cle :=chr(255);
              END IF;
              IF j        <= tab2.last THEN
                --constitution de la clé "matricule" courant partie PHOTO

                curclematj:=tab2(j).pacmat||'#'||tab2(j).paiezad;
                IF p_TABLETYPE IN ('OCCURS','PREMIERE','DERNIERE') THEN
                  --clé de comparaison = couple pacmat-paiezad + rang de l'OCCURS (vaut 1 sur PREMIERE et DERNIERE)
                  tab2cle :=curclematj||TO_CHAR(NVL(tab2(j).rank,0),'000');
                ELSE
                  --clé de comparaison = celle de DIF_FSED donc celle de la ligne Oracle
                  tab2cle :=tab2(j).cle;
                END IF;
              ELSE
                curclematj :=' ';
                --clé de comparaison = high_value pour faciliter les comparaisons
                tab2cle :=chr(255);
              END IF;
              --Tables avec historiques comme D_A_C_H : la clé contient des dates d'effet donc il faut adapter l'appareillage
              IF coldteffet='a.DATE_EFF' THEN
                IF i <= tab1.last AND curclemati=MatARenvoyer THEN
                  --matricule déjà détecté en différence histo, on envoie tous les historiques. Les doublons sont éliminés automatiquement.
                  remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'M', p_TABLETYPE);
                  --avancer dans tab1
                  i :=i+1;
                  preclemati:=curclemati;
                Elsif j <= tab2.last AND curclematj=MatARenvoyer THEN
                  --avancer dans tab2 pour épuiser les histos photo déjà détectés en différence
                  j :=j+1;
                  preclematj:=curclematj;
                Elsif tab1cle < tab2cle and preclemati<>curclemati THEN
                  --ligne gap ajoutée car clé gap plus petite que clé photo et c'était le 1er histo du matricule : création
                  remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'C', p_TABLETYPE);
                  --avancer dans tab1
                  i :=i+1;
                  preclemati:=curclemati;
                Elsif tab1cle < tab2cle AND preclemati=curclemati THEN
                  --ligne gap ajoutée car clé gap plus petite que clé photo et il existe un histo gap précédent sur le même matricule : il faut comparer les valeurs du précédent.
                  IF difference_col( tab1(i) , tab1(i-1) , numcol )=1 THEN
                    --modification constatée entre histo gap précédent (j) et histo gap courant (i)
                    remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'C', p_TABLETYPE);
                  END IF;
                  --avancer dans tab1
                  i :=i+1;
                  preclemati:=curclemati;
                Elsif tab1cle > tab2cle AND preclemati<>curclematj THEN
                  --ligne gap supprimée et c'était le 1er histo du matricule : il faut forcer les valeurs à blanc sur cette date perdue.
                  remplissage_ligne(tabRetour, tab2(j), tablib(numcol), p_id_trt, numretour, numcol, 'S', p_TABLETYPE);
                  --avancer dans tab2
                  j :=j+1;
                  preclematj:=curclematj;
                Elsif tab1cle > tab2cle AND preclemati=curclematj THEN
                  --ligne gap supprimée et il existe un histo gap précédent sur le même matricule : il faut comparer les valeurs du précédent avec la photo.
                  i :=i-1;
                  IF difference_col( tab1(i) , tab2(j) , numcol )=1 THEN
                    --modification constatée entre histo gap précédent et histo photo courant (date d'effet=photo)
                    tab1(i).DTEFFET :=tab2(j).DTEFFET ;
                    remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'M', p_TABLETYPE);
                  END IF;
                  --avancer dans tab1 et tab2 car on a "comparé" ces 2 lignes
                  i :=i+1;
                  preclemati:=curclemati;
                  j :=j+1;
                  preclematj:=curclematj;
                ELSE
                  --comparaison car à ce stade il y a forcément égalité tab1cle=tab2cle (pacmat + paiezad + date d'effet)
                  IF difference_col( tab1(i) , tab2(j) , numcol )=1 THEN
                    --modification constatée
                    remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'M', p_TABLETYPE);
                  END IF;
                  --avancer dans tab1 et tab2
                  i :=i+1;
                  preclemati:=curclemati;
                  j :=j+1;
                  preclematj:=curclematj;
                END IF;
              ELSE
                --Tables sans historiques comme DIC_ENFANTS ou DIC_ADM_PERSO
                IF tab1cle < tab2cle THEN
                  --ligne ajoutée car j épuisé ou clé i plus petite que clé j (ce qui marche aussi pour des historiques créés après photo)
                  remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'C', p_TABLETYPE);
                  --avancer dans tab1
                  i    :=i+1;
                  preclemati:=curclemati;
                Elsif tab1cle > tab2cle THEN
                  --ligne supprimée car i épuisé ou clé i plus grande que clé j
                  remplissage_ligne(tabRetour, tab2(j), tablib(numcol), p_id_trt, numretour, numcol, 'S', p_TABLETYPE);
                  --avancer dans tab2
                  j :=j+1;
                  preclematj:=curclematj;
                ELSE
                  --comparaison car à ce stade il y a forcément égalité de clé tab1(i).cle=tab2(j).cle -ou- OCCURS du couple pacmat-paiezad
                  IF difference_col( tab1(i) , tab2(j) , numcol )=1 THEN
                    --modification constatée
                    remplissage_ligne(tabRetour, tab1(i), tablib(numcol), p_id_trt, numretour, numcol, 'M', p_TABLETYPE);
                  END IF;
                  --avancer dans tab1 et tab2
                  i :=i+1;
                  preclemati:=curclemati;
                  j :=j+1;
                  preclematj:=curclematj;
                END IF;
              END IF;
            END LOOP;
          END LOOP;
          FSED_AVANCEMENT(p_id_trt,'Fin traitement des differences');
          IF NVL(tabRetour.first,0)=0 THEN
            FSED_AVANCEMENT(p_id_trt,'Pas de differences');
          ELSE
            FSED_AVANCEMENT(p_id_trt,'Insertion des differences numeros '||TO_CHAR(NVL(tabRetour.first,0))||' a '||TO_CHAR(NVL(tabRetour.last,0)));
            FORALL i IN tabRetour.first..tabRetour.last
            INSERT
            INTO DIF_FSED_TEMPORARY
              (
                id_trt,
                numpac,
                CLE,
                pacmat,
                ELEM,
                OCC,
                VALEUR,
                CODEOP,
                TYPE_DONNEE ,
                DTEFFET,
                paiezad
              )
              VALUES
              (
                p_id_trt,
                p_numpac,
                tabRetour(i).CLE,
                tabRetour(i).pacmat,
                tabRetour(i).ELEM,
                NVL(lpad(tabRetour(i).OCC,3,'0'),'  '),
                tabRetour(i).VALEUR,
                tabRetour(i).CODEOP,
                tabRetour(i).TYPE_DONNEE,
                tabRetour(i).DTEFFET,
                tabRetour(i).paiezad
              );
            requeteTDIF:='INSERT INTO DIF_FSED (ID_TRT,NUMPAC,CLE,PACMAT,PAIEZAD,ELEM,OCC,VALEUR,CODEOP,TYPE_DONNEE,DTEFFET) (select ID_TRT,NUMPAC,CLE,PACMAT,PAIEZAD,ELEM,OCC,VALEUR,CODEOP,TYPE_DONNEE,DTEFFET from DIF_FSED_TEMPORARY)';
            FSED_AVANCEMENT(p_id_trt,'Injection des differences dans DIF_FSED : '||requeteTDIF);
             EXECUTE_IMMEDIATE_STRING  (requeteTDIF,0);
            requeteTDIF:='TRUNCATE TABLE DIF_FSED_TEMPORARY';
            FSED_AVANCEMENT(p_id_trt,'Vidage de DIF_FSED_TEMPORARY : '||requeteTDIF);
             EXECUTE_IMMEDIATE_STRING  (requeteTDIF,0);
          END IF;
        END IF;
      END IF;
      EXIT
    WHEN cur_mapdo%NOTFOUND ;
    END LOOP;
    CLOSE cur_mapdo;
  EXCEPTION
  WHEN OTHERS THEN
    err_code := SQLCODE;
    err_msg  := SQLERRM;
    FSED_ERREUR( p_id_trt , 'preparation_FSED_unit' , p_nomTable||','||p_alias||','||p_TABLETYPE||','||p_id_trt||','||p_numpac||','||p_nb_mois_paie_init , err_code||'-'||err_msg );
    raise;
  END preparation_FSED_unit;
/*********************************************************
Proc : preparation_FSED
Fctn :
**********************************************************/
PROCEDURE preparation_FSED
  (
    p_id_trt  IN NUMBER,
    p_numpac  IN VARCHAR2,
    p_periode IN VARCHAR2
  )
IS
  CURSOR cur_tables
  IS
    SELECT *
    FROM
      (SELECT *
      FROM tge_ref_mapta
      WHERE numpac =p_numpac
        --RSI DIT 39298 MPE : Fonction d'envoi inconditionnel pour la table TGE_OPTION_REPORT
        --Ajout du type 'I'
      AND ALLERRETOUR IN ('A','2','I')
    UNION ALL
    SELECT p_numpac,
      '***',
      'VUE-A301-A302-A962',
      FICHIER,
      TABLEPHY,
      ALLERRETOUR,
      TABLETYPE,
      MOISZERO,
      NBMOISCONS,
      SENSIBLERHID,
      RESERVE
    FROM tge_ref_mapta
    WHERE numpac  ='*'
    AND tableparam='DIC_ADM_CONTRAT_HISTO'
    UNION ALL
    SELECT *
    FROM tge_ref_mapta
    WHERE numpac ='*'
      --RSI DIT 39298 MPE : Fonction d'envoi inconditionnel pour la table TGE_OPTION_REPORT
      --Ajout du type 'I'
    AND ALLERRETOUR      IN ('A','2','I')
    AND (tableparam) NOT IN
      (SELECT tableparam FROM tge_ref_mapta WHERE numpac=p_numpac
      )
      )
    ORDER BY tableparam;
    lig cur_tables%rowtype;
    nbPurgePhoto NUMBER:=0;
    v_flag       NUMBER;
    p_nb_mois_paie_init number;
    pReq  CLOB;
    w_PERIODEENCOURS TGE_REF_PAC.PERIODEENCOURS%TYPE;
    w_DEB_RETRO      TGE_REF_PAC.DEB_RETRO%TYPE;
    w_DEB_HISTO_RETRO TGE_REF_PAC.DEB_HISTO_RETRO%TYPE;
    w_MIN_RETRO       TGE_REF_PAC.DEB_RETRO%TYPE;
  BEGIN
    --Purge de la table des erreurs en cas de relance manuelle du "call"
   p_nb_mois_paie_init:= GET_NB_MOIS_PAIE_INIT();
   SELECT PERIODEENCOURS ,DEB_RETRO,DEB_HISTO_RETRO,
   greatest(DEB_HISTO_RETRO,TO_CHAR(ADD_MONTHS(TO_DATE(PERIODEENCOURS,'yyyymm'),-1*NB_MOIS_RETRO),'yyyymm'))
   INTO   w_PERIODEENCOURS ,w_DEB_RETRO,w_DEB_HISTO_RETRO,w_MIN_RETRO
   FROM TGE_REF_PAC 
   WHERE NUMPAC =p_numpac;
    DELETE
    FROM TGE_FSED_ERREUR
    WHERE id=p_id_trt;
    --Purge de la table d'avancement activée si TGE_FSED_IS_DEBUG.IS_DEBUG='O'
    DELETE
    FROM TGE_FSED_AVANCEMENT_PROC
    WHERE id=p_id_trt;
    COMMIT;
    pReq := 'select ADD_MONTHS(to_date('||p_periode||',''yyyymm''),-'||p_nb_mois_paie_init||') from dual';
    EXECUTE IMMEDIATE pReq INTO  mMoins1;
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED *** START *** pac='||p_numpac||' periode='||p_periode||' intervalle de validite='||TO_CHAR(mMoins1,'yyyymmdd')||'-'||TO_CHAR(last_day(to_date(p_periode,'yyyymm')),'yyyymmdd'));
    --Purge des photos si photo absente de DIC_ADM_CONTRAT
    FOR tabPurgePhoto IN
    (SELECT DISTINCT pacmat
    FROM GAP_TRT_LISTE_MAT
    WHERE id_trt    =p_id_trt
    AND pacmat NOT IN
      (SELECT pacmat FROM PHOTO_DIC_ADM_CONTRAT WHERE numpac=p_numpac
      )
    ORDER BY pacmat
    )
    LOOP
      FSED_AVANCEMENT(p_id_trt,'Efface Photo toutes tables pacmat='||tabPurgePhoto.pacmat);
      effaceMatricToutTable(p_numpac,tabPurgePhoto.pacmat);
      nbPurgePhoto:=nbPurgePhoto+1;
    END LOOP;
    IF nbPurgePhoto=0 THEN
      FSED_AVANCEMENT(p_id_trt,'Tous les Pacmat du traitement sont presents dans PHOTO_DIC_ADM_CONTRAT');
    ELSE
      FSED_AVANCEMENT(p_id_trt,'Nb pacmat absents de PHOTO_DIC_ADM_CONTRAT (effaceMatricToutTable) ='||TO_CHAR(nbPurgePhoto));
    END IF;
    getSoldMontant(p_numpac,p_id_trt,DicoPret,soldePret,MontantPret,DicoOpposition,soldeOpposition,MontantOpposition);
    FSED_AVANCEMENT(p_id_trt,'Donnees filtres prets oppositions : soldePret='||DicoPret||'.'||soldePret||' MontantPret='||DicoPret||'.'||MontantPret|| ' soldeOpposition='||DicoOpposition||'.'||soldeOpposition||' MontantOpposition='||DicoOpposition||'.'||MontantOpposition);
    OPEN cur_tables;
    LOOP
      FETCH cur_tables INTO lig;
      EXIT
    WHEN cur_tables%NOTFOUND ;
      FSED_AVANCEMENT(p_id_trt,'preparation_FSED --- Debut Traitement alias '||lig.tableparam||' (table '||lig.tablephy||')');
      preparation_FSED_unit(lig.tablephy,lig.tableparam,lig.TABLETYPE,p_id_trt,p_numpac,p_periode,lig.ALLERRETOUR ,p_nb_mois_paie_init);
      FSED_AVANCEMENT(p_id_trt,'preparation_FSED --- Fin Traitement alias '||lig.tableparam||' (table '||lig.tablephy||')');
    END LOOP;
    CLOSE cur_tables;
    SELECT COUNT(*) INTO v_flag FROM GAP_TRT_LISTE_MAT where ID_TRT = p_id_trt;
    --Partie Rétro 
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED ---Début Rétro id_trt= '||p_id_trt);
    IF w_DEB_RETRO is not null AND to_date(w_PERIODEENCOURS,'YYYYMM')>=to_date(w_DEB_RETRO,'YYYYMM') THEN
     BEGIN
     FSED_AVANCEMENT(p_id_trt,'preparation_FSED --- remplissage DIF_FSED_MODIF_RETRO id_trt= '||p_id_trt);
     pReq := 'Alter TABLE DIF_FSED_MODIF_RETRO add partition ID_'||p_id_trt||' values ('||p_id_trt||')';
     EXECUTE_IMMEDIATE_STRING( pReq,0);
     FSED_AVANCEMENT(p_id_trt,'preparation_FSED--remplissage DIF_FSED_MODIF_RETRO--partition cree: ID_'||p_id_trt||', pReq '||pReq);
    EXCEPTION
    WHEN OTHERS THEN
     FSED_AVANCEMENT(p_id_trt,'preparation_FSED--remplissage DIF_FSED_MODIF_RETRO-- Erreur partition ID_'||p_id_trt);
    END ;
    
    --Insertion dans DIF_FSED_MODIF_RETRO
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Début insertion DIF_FSED_MODIF_RETRO--: ID_'||p_id_trt);
    pReq := 'INSERT INTO DIF_FSED_MODIF_RETRO SELECT * FROM dif_fsed f WHERE numpac ='''||p_numpac||''' AND f.id_trt ='||p_id_trt;
    pReq := pReq ||' AND DTEFFET  <to_date('''||w_PERIODEENCOURS||'''||''01'',''YYYYMMDD'') ';
    pReq := pReq ||' AND ( f.elem in (select ELEMENT from tge_ref_dicoz where  numpac='''||p_numpac||''' AND nvl(CALCUL_RETRO,0)=1 )';
    pReq := pReq ||' OR exists (select 1 from dif_fsed t where t.numpac ='''||p_numpac||''' and t.id_trt ='''||p_id_trt||''' AND t.codeop=''C'' and t.ELEM =''A001'' and f.paiezad=t.paiezad and f.pacmat=t.pacmat )) ';
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Début remplissage DIF_FSED_MODIF_RETRO--: ID_'||p_id_trt||', pReq '||pReq);
    EXECUTE_IMMEDIATE_STRING( pReq,0);
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- FIN insertion DIF_FSED_MODIF_RETRO--: ID_'||p_id_trt);    
    --Insertion dans GAP_TRT_MOIS_RETRO   
    pReq := ' insert into GAP_TRT_MOIS_RETRO (id_trt,numpac,pacmat,PERIODE_RETRO)';
    pReq := pReq ||' WITH grm AS (SELECT pacmat,periode_retro FROM gap_retro_matric    g WHERE numpac = '''||p_numpac||''' AND EXISTS (SELECT 1 FROM gap_trt_liste_mat gtlm WHERE gtlm.id_trt = '||p_id_trt||' AND gtlm.numpac = g.numpac AND gtlm.pacmat = g.pacmat))';
    pReq := pReq ||'     ,gsr AS (SELECT pacmat,periode_retro FROM gap_selection_retro g WHERE numpac = '''||p_numpac||''' AND EXISTS (SELECT 1 FROM gap_trt_liste_mat gtlm WHERE gtlm.id_trt = '||p_id_trt||' AND gtlm.numpac = g.numpac AND gtlm.pacmat = g.pacmat))';
    --                 min_periode_retro : plus vieille rétro par matricule
    pReq := pReq ||' ,min_periode_retro (pacmat,min_periode) AS (';
    pReq := pReq ||' SELECT pacmat,MIN(periode_retro) FROM';
    pReq := pReq ||' (          SELECT pacmat,periode_retro FROM grm';
    pReq := pReq ||'  UNION ALL SELECT pacmat,periode_retro FROM gsr ) GROUP BY pacmat) ';
    --                 histo_retro : historique des mois où on a fait de la rétro *et* sur quels mois
    pReq := pReq ||' ,histo_retro AS (SELECT DISTINCT pacmat,periode,to_char(dteffet,''yyyymm'') as periode_retro FROM dif_fsed_histo h WHERE numpac = '''||p_numpac||''' AND EXISTS (SELECT 1 FROM gap_trt_liste_mat gtlm WHERE gtlm.id_trt = '||p_id_trt||' AND gtlm.numpac = h.numpac AND gtlm.pacmat = h.pacmat) ';
    pReq := pReq ||'       AND periode>='''||w_MIN_RETRO||''' AND to_char(dteffet,''yyyymm'')<periode';
    pReq := pReq ||'       AND  h.elem in (select ELEMENT from tge_ref_dicoz where  numpac='''||p_numpac||''' AND nvl(CALCUL_RETRO,0)=1) )';
    --                 liste_mois_retro : liste exhaustive des mois rétro par matricule (mois rétro paie en cours + mois rétro dans l'historique)
    pReq := pReq ||' ,liste_mois_retro (pacmat,periode_retro) AS ( ';
    pReq := pReq ||'       SELECT pacmat,periode_retro      FROM grm';
    pReq := pReq ||' UNION ALL SELECT pacmat,periode_retro      FROM gsr';
    pReq := pReq ||' UNION ALL SELECT DISTINCT pacmat,periode_retro FROM histo_retro hr WHERE EXISTS (select 1 from min_periode_retro mpr WHERE hr.pacmat=mpr.pacmat and hr.periode_retro>=mpr.min_periode)';
    pReq := pReq ||' UNION ALL SELECT DISTINCT pacmat,periode       FROM histo_retro hr WHERE EXISTS (select 1 from min_periode_retro mpr WHERE hr.pacmat=mpr.pacmat and hr.periode      >=mpr.min_periode))';
    --                SELECT principal
    pReq := pReq ||' SELECT DISTINCT '||p_id_trt||','''||p_numpac||''',pacmat,periode_retro FROM liste_mois_retro';
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Début insertion GAP_TRT_MOIS_RETRO: ID_'||p_id_trt||', pReq '||pReq);   
    EXECUTE_IMMEDIATE_STRING( pReq,0);
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Fin insertion GAP_TRT_MOIS_RETRO: ID_'||p_id_trt);
    BEGIN
     FSED_AVANCEMENT(p_id_trt,'preparation_FSED --- remplissage DIF_FSED_PARTIERETRO id_trt= '||p_id_trt);
     pReq := 'Alter TABLE DIF_FSED_PARTIERETRO add partition ID_'||p_id_trt||' values ('||p_id_trt||')';
     EXECUTE_IMMEDIATE_STRING( pReq,0);
     FSED_AVANCEMENT(p_id_trt,'preparation_FSED--remplissage DIF_FSED_PARTIERETRO--partition cree: ID_'||p_id_trt);
    EXCEPTION
    WHEN OTHERS THEN
     FSED_AVANCEMENT(p_id_trt,'preparation_FSED--remplissage DIF_FSED_PARTIERETRO--partition ID_'||p_id_trt||' existe déja');
    END ;
    --Insertion dans DIF_FSED_PARTIERETRO 
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Début insertion DIF_FSED_PARTIERETRO: ID_'||p_id_trt);   
    pReq := ' INSERT INTO DIF_FSED_PARTIERETRO ';
    --WITH1 liste des vrais mois rétro
    pReq := pReq ||' WITH liste_mois_retro (pacmat,periode_retro) AS ( ';
    pReq := pReq ||'       SELECT pacmat,periode_retro FROM gap_trt_mois_retro WHERE numpac = '''||p_numpac||''' AND id_trt = '''||p_id_trt||''') ';
    --WITH2 même liste des vrais mois rétro mais avec la tranche des périodes précédentes (début=M+1 de la rétro précédente)
    pReq := pReq ||',tranches_mois_retro (pacmat,periode_retro,prec_periode_retro) AS ( ';
    pReq := pReq ||' SELECT lmr.pacmat,lmr.periode_retro,NVL((SELECT to_char(add_months(to_date(MAX(lmr2.periode_retro),''yyyymm''),1),''yyyymm'') FROM liste_mois_retro lmr2 WHERE lmr2.pacmat=lmr.pacmat AND lmr2.periode_retro<lmr.periode_retro),'''||w_MIN_RETRO||''') FROM liste_mois_retro lmr)';
    --WITH3  liste des elem avec envoi systématique = O
    pReq := pReq ||',liste_envoi_systematique(elem) AS( ';
    pReq := pReq ||' SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac='''||p_numpac||''' AND NVL(ENVOI_SYSTEMATIQUE,''N'')=''O'' UNION ALL SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac =''*'' AND NVL(ENVOI_SYSTEMATIQUE,''N'')=''O'' AND ELEMENT NOT IN (SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac='''||p_numpac||''' AND NVL(ENVOI_SYSTEMATIQUE,''N'')=''O''))';   
    --SELECT1 DIF_FSED_MODIF_RETRO
    pReq := pReq ||' SELECT '''||p_id_trt||''', tmr.periode_retro AS periode, m.numpac, m.cle, m.pacmat, m.paiezad, m.elem, m.occ, m.valeur, m.codeop, m.type_donnee, m.dteffet ';
    pReq := pReq ||' FROM dif_fsed_modif_retro m, tranches_mois_retro tmr ';
    pReq := pReq ||' WHERE m.id_trt = '''||p_id_trt||''' AND m.pacmat = tmr.pacmat ';
    pReq := pReq ||' AND  ( ' ;
    pReq := pReq ||' greatest(TO_CHAR(m.dteffet,''yyyymm''),'''||w_MIN_RETRO||''') BETWEEN tmr.prec_periode_retro AND tmr.periode_retro ';
    pReq := pReq ||' OR  substr(m.elem,0,1)>''W'' OR Exists (select * from liste_envoi_systematique les  where m.elem=les.elem ) ';
    pReq := pReq ||' ) ' ;
    --SELECT2 DIF_FSED_HISTO sauf les lignes déjà présentes dans DIF_FSED_MODIF_RETRO
    pReq := pReq ||' UNION ALL SELECT '''||p_id_trt||''', h.periode, h.numpac, h.cle, h.pacmat, h.paiezad, h.elem, h.occ, h.valeur, h.codeop, h.type_donnee, h.dteffet ';
    pReq := pReq ||' FROM dif_fsed_histo h, liste_mois_retro lmr ';
    pReq := pReq ||' WHERE numpac = '''||p_numpac||''' AND h.pacmat=lmr.pacmat AND periode>='''||w_MIN_RETRO||''' AND h.periode=lmr.periode_retro  ';
    pReq := pReq ||' AND  substr(h.elem,0,1)<''W'' AND NOT Exists (select * from liste_envoi_systematique les  where h.elem=les.elem ) ';
    pReq := pReq ||' AND NOT EXISTS  (SELECT 1 FROM dif_fsed_modif_retro m, tranches_mois_retro tmr ';
    pReq := pReq ||' WHERE m.id_trt = '''||p_id_trt||''' AND m.pacmat = tmr.pacmat AND greatest(TO_CHAR(m.dteffet,''yyyymm''),'''||w_MIN_RETRO||''') BETWEEN tmr.prec_periode_retro AND tmr.periode_retro ';
    pReq := pReq ||'   AND greatest(TO_CHAR(m.dteffet,''yyyymm''),'''||w_MIN_RETRO||''') <= h.periode';
    pReq := pReq ||'   AND m.pacmat = h.pacmat AND m.paiezad = h.paiezad AND m.elem = h.elem AND m.occ = h.occ )';
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Début insertion DIF_FSED_PARTIERETRO: ID_'||p_id_trt||', pReq '||pReq);   
    EXECUTE_IMMEDIATE_STRING( pReq,0);
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED-- Fin insertion DIF_FSED_PARTIERETRO: ID_'||p_id_trt);
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED ---Fin Rétro id_trt= '||p_id_trt);
    END IF;
    IF v_flag > 1000 THEN
        DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'DIF_FSED',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);
    END IF;
    FSED_AVANCEMENT(p_id_trt,'preparation_FSED *** END *** pac='||p_numpac||' periode='||p_periode);
  EXCEPTION
  WHEN OTHERS THEN
    err_code := SQLCODE;
    err_msg  := SQLERRM;
    FSED_ERREUR( p_id_trt , 'preparation_FSED' , p_id_trt||','||p_numpac , err_code||'-'||err_msg );
    raise;
  END preparation_FSED;
/***********************************************************************
  Funct : getTableCode
  DESC : recuperer le code table
*************************************************************************/
FUNCTION getTableCode(
    plig TGE_IMPORT_FSED%rowtype)
  RETURN VARCHAR
IS
  v_code_table VARCHAR2(5);
  CURSOR C_VRTA
  IS
    SELECT * FROM TGE_REF_VRTA;
  lig_vrta TGE_REF_VRTA%rowtype;
BEGIN
  IF code_table_liste.count=0 THEN
    OPEN C_VRTA ;
    LOOP
      FETCH C_VRTA INTO lig_vrta ;
      EXIT
    WHEN C_VRTA%NOTFOUND;
      IF lig_vrta.tablevr11                                       IS NOT NULL THEN
        code_table_liste(lig_vrta.numpac||'#'||lig_vrta.TABLEVR11):= lig_vrta.TABLEZADIG;
      END IF;
    END LOOP;
    CLOSE C_VRTA;
  END IF;
  IF code_table_liste.exists(SUBSTR(plig.donnees,1,6)||'#'||trim(SUBSTR(plig.donnees,10,3)) ) THEN
    RETURN code_table_liste(SUBSTR(plig.donnees,1,6)||'#'||trim(SUBSTR(plig.donnees,10,3)) );
  elsif code_table_liste.exists('*#'||trim(SUBSTR(plig.donnees,10,3)) ) THEN
    RETURN code_table_liste('*#'||trim(SUBSTR(plig.donnees,10,3)) );
  ELSE
    RETURN trim(SUBSTR(plig.donnees,10,3));
  END IF;
END getTableCode;
/********************************************************************
Funct : getTypeColonne
DESC  : recuperer le type de colonne
**********************************************************************/
FUNCTION getTypeColonne(
    p_table   IN VARCHAR2,
    p_colonne IN VARCHAR2)
  RETURN VARCHAR2
IS
  v_typecolonne user_tab_columns.data_type%type;
BEGIN
  BEGIN
    SELECT DISTINCT data_type
    INTO v_typecolonne
    FROM user_tab_columns cln
    WHERE cln.table_name = p_table
    AND cln.column_name  = p_colonne;
  EXCEPTION
  WHEN OTHERS THEN
    RETURN (NULL);
  END ;
  IF v_typecolonne ='NUMBER' THEN
    RETURN('N');
  ELSIF v_typecolonne ='DATE' THEN
    RETURN('D');
  ELSIF v_typecolonne ='VARCHAR2' THEN
    RETURN('V');
  END IF;
END getTypeColonne;
/***********************************************************************
PROC : setCart11 
DESC : Cart 11
*************************************************************************/
PROCEDURE setCart11(
    p_id IN NUMBER,
    lig TGE_IMPORT_FSED%rowtype,
    pNumPac TGE_REF_VRREP.NUMERO_DE_PAC%TYPE,
    pCodeTable TGE_REF_VRTA.TABLEZADIG%TYPE,
    pCodeTableOld TGE_REF_VRTA.TABLEZADIG%TYPE)
IS
  type_carte   VARCHAR2(3) := '';
  v_code_table VARCHAR2(5);
  v_num_ligne  VARCHAR2(4);
  v_code_seq   VARCHAR2(1);
  v_nom_champ  VARCHAR2(4);
  v_existVRREP number :=0 ;
BEGIN
  type_carte                         := trim(SUBSTR(lig.donnees,18,2));
  IF type_carte                       ='R' THEN
    elt_tab_11R.NUMERO_DE_PAC        :=pNumPac;
    elt_tab_11R.CODE_TABLE           :=pCodeTable;
    elt_tab_11R.FONCTIONNALITE       :=trim(SUBSTR(lig.donnees,20,2));
    elt_tab_11R.NOM_DE_LA_TABLE      :=trim(SUBSTR(lig.donnees,22,35));
    elt_tab_11R.CLASSE_PROTECTION    :=trim(SUBSTR(lig.donnees,57,3));
    elt_tab_11R.CODE_MAJ_CAL         :=trim(SUBSTR(lig.donnees,60,1));
    elt_tab_11R.TABLE_USAGE_MULTIPLE :=trim(SUBSTR(lig.donnees,61,1));
    elt_tab_11R.NOM_TABLEASSOCIE     :=trim(SUBSTR(lig.donnees,62,3));
    elt_tab_11R.VALEURS_MENSUELLES   :=trim(SUBSTR(lig.donnees,66,1));
    elt_tab_11R.CODE_TOPAGE          :=trim(SUBSTR(lig.donnees,67,1));
    elt_tab_11R.REPERCUSSION_TVP     :=trim(SUBSTR(lig.donnees,68,1));
    elt_tab_11R.PGM_COHE_LIGNE       :=trim(SUBSTR(lig.donnees,69,8));
    elt_tab_11R.DATE_DERNIERE_MAJ    :=trim(SUBSTR(lig.donnees,77,8));
    elt_tab_11R.HEURE_DERNIERE_MAJ   :=trim(SUBSTR(lig.donnees,85,4));
    elt_tab_11R.TRAIT_PARTICULIER    :=trim(SUBSTR(lig.donnees,89,1));
    elt_tab_11R.CODE_DESTINATION_1   :=trim(SUBSTR(lig.donnees,90,1));
    elt_tab_11R.CODE_DESTINATION_2   :=trim(SUBSTR(lig.donnees,91,1));
    elt_tab_11R.CODE_DESTINATION_3   :=trim(SUBSTR(lig.donnees,92,1));
    elt_tab_11R.CODE_DESTINATION_4   :=trim(SUBSTR(lig.donnees,93,1));
    elt_tab_11R.CODE_DESTINATION_5   :=trim(SUBSTR(lig.donnees,94,1));
    elt_tab_11R.PGM_COHE_TABLE       :=trim(SUBSTR(lig.donnees,95,8));
    elt_tab_11R.TEMOIN_VR_BASE       :=trim(SUBSTR(lig.donnees,103,1));
    elt_tab_11R.TEMOIN_SITE_MULTIPLE :=trim(SUBSTR(lig.donnees,104,1));
    elt_tab_11R.CODE_GESTIONNAIRE    :=trim(SUBSTR(lig.donnees,105,1));
    elt_tab_11R.CODE_EDI             :=trim(SUBSTR(lig.donnees,106,1));
    elt_tab_11R.NB_LIG_MINI          :=trim(SUBSTR(lig.donnees,111,4));
    elt_tab_11R.NB_LIG_MAXI          :=trim(SUBSTR(lig.donnees,115,4));
    elt_tab_11R.NB_LIG_TOTALES       :=trim(SUBSTR(lig.donnees,119,4));
    elt_tab_11R.NB_LIG_ACTIVES       :=trim(SUBSTR(lig.donnees,123,4));
    IF tab_11R                       IS NULL THEN
      tab_11R                        := t_TGE_REF_VRREP();
    END IF;
    select count(*) into v_existVRREP from TGE_REF_VRREP where TGE_REF_VRREP.NUMERO_DE_PAC=elt_tab_11R.NUMERO_DE_PAC and TGE_REF_VRREP.CODE_TABLE=elt_tab_11R.CODE_TABLE;
	if(v_existVRREP=0) then
	tab_11R.extend;
	tab_11R(tab_11R.last)            :=elt_tab_11R;
	end if ;
  elsif type_carte                    ='D' THEN
    v_nom_champ                      := trim (SUBSTR(lig.donnees,20,4));
    elt_tab_11D.NUMERO_DE_PAC        := pNumPac;
    elt_tab_11D.CODE_TABLE           := pCodeTable;
    elt_tab_11D.NOM_DU_CHAMP         := v_nom_champ;
    elt_tab_11D.ELEMENT_DE_RECHERCHE := trim (SUBSTR(lig.donnees,24,4));
    elt_tab_11D.VALEUR_ASSOCIEE      := trim (SUBSTR(lig.donnees,28,3));
    elt_tab_11D.CODE_MAJ             := trim (SUBSTR(lig.donnees,31,1));
    elt_tab_11D.NB_OCCURRENCES       := trim (SUBSTR(lig.donnees,32,2));
    elt_tab_11D.NATURE               := trim (SUBSTR(lig.donnees,34,1));
    elt_tab_11D.NB_ENTIERS           := trim (SUBSTR(lig.donnees,35,2));
    elt_tab_11D.NB_DECIMALES         := trim (SUBSTR(lig.donnees,37,2));
    elt_tab_11D.LONGUEUR             := trim (SUBSTR(lig.donnees,39,2));
    elt_tab_11D.CODE_CONTROLE_FORMAT := trim (SUBSTR(lig.donnees,41,2));
    elt_tab_11D.CLASSE_PROTECTION    := trim (SUBSTR(lig.donnees,43,2));
    elt_tab_11D.TYPE_MANIPULATION    := trim (SUBSTR(lig.donnees,45,1));
    elt_tab_11D.CODE_DESCRIPTEUR     := trim (SUBSTR(lig.donnees,46,1));
    elt_tab_11D.CODE_OUVERTURE       := trim (SUBSTR(lig.donnees,47,1));
    elt_tab_11D.BL_ZERO_SIGNIFICATIF := trim (SUBSTR(lig.donnees,48,1));
    elt_tab_11D.CODE_OBLIGATION      := trim (SUBSTR(lig.donnees,49,1));
    elt_tab_11D.CODE_VALIDATION      := trim (SUBSTR(lig.donnees,50,1));
    elt_tab_11D.VAL_POS_COLON_DEBUT  := trim (SUBSTR(lig.donnees,51,2));
    elt_tab_11D.VAL_POS_COLON_FIN    := trim (SUBSTR(lig.donnees,53,2));
    elt_tab_11D.VAL_POS_VALEUR       := trim (SUBSTR(lig.donnees,55,35));
    elt_tab_11D.CNTL_TAB_REFER_TABLE := trim (SUBSTR(lig.donnees,90,5));
    elt_tab_11D.CNTL_TAB_COLON_DEBUT := trim (SUBSTR(lig.donnees,95,2));
    elt_tab_11D.CNTL_TAB_COLON_FIN   := trim (SUBSTR(lig.donnees,97,2));
    elt_tab_11D.CODE_GRAVITE         := trim (SUBSTR(lig.donnees,99,1));
    elt_tab_11D.LIBELLE              := trim (SUBSTR(lig.donnees,100,35));
    elt_tab_11D.MORCEAU_1_NOM_TABLE  := trim (SUBSTR(lig.donnees,135,3));
    elt_tab_11D.MORCEAU_1_COL_DEB    := trim (SUBSTR(lig.donnees,138,3));
    elt_tab_11D.MORCEAU_1_COL_FIN    := trim (SUBSTR(lig.donnees,141,3));
    elt_tab_11D.MORCEAU_2_NOM_TABLE  := trim (SUBSTR(lig.donnees,144,3));
    elt_tab_11D.MORCEAU_2_COL_DEB    := trim (SUBSTR(lig.donnees,147,3));
    elt_tab_11D.MORCEAU_2_COL_FIN    := trim (SUBSTR(lig.donnees,150,3));
    elt_tab_11D.MORCEAU_3_NOM_TABLE  := trim (SUBSTR(lig.donnees,153,3));
    elt_tab_11D.MORCEAU_3_COL_DEB    := trim (SUBSTR(lig.donnees,156,3));
    elt_tab_11D.MORCEAU_3_COL_FIN    := trim (SUBSTR(lig.donnees,159,3));
    elt_tab_11D.MORCEAU_4_NOM_TABLE  := trim (SUBSTR(lig.donnees,162,3));
    elt_tab_11D.MORCEAU_4_COL_DEB    := trim (SUBSTR(lig.donnees,165,3));
    elt_tab_11D.MORCEAU_4_COL_FIN    := trim (SUBSTR(lig.donnees,168,3));
    elt_tab_11D.S_P_CONTROLE         := trim (SUBSTR(lig.donnees,171,8));
    elt_tab_11D.INVISIBLE            := trim (SUBSTR(lig.donnees,179,1));
    IF tab_11D                       IS NULL THEN
      tab_11D                        := t_TGE_REF_VRDES();
    END IF;
    tab_11D.extend;
    tab_11D(tab_11D.last)            := elt_tab_11D;
  elsif type_carte                    ='D1' THEN
    elt_tab_11D1.NUMERO_DE_PAC       := pNumPac;
    elt_tab_11D1.CODE_TABLE          := pCodeTable;
    elt_tab_11D1.NOM_DU_CHAMP        := trim (SUBSTR(lig.donnees,20,4));
    elt_tab_11D1.MORCEAU_5_NOM_TABLE := trim (SUBSTR(lig.donnees,24,3));
    elt_tab_11D1.MORCEAU_5_COL_DEB   := trim (SUBSTR(lig.donnees,27,3));
    elt_tab_11D1.MORCEAU_5_COL_FIN   := trim (SUBSTR(lig.donnees,30,3));
    elt_tab_11D1.MORCEAU_6_NOM_TABLE := trim (SUBSTR(lig.donnees,33,3));
    elt_tab_11D1.MORCEAU_6_COL_DEB   := trim (SUBSTR(lig.donnees,36,3));
    elt_tab_11D1.MORCEAU_6_COL_FIN   := trim (SUBSTR(lig.donnees,39,3));
    elt_tab_11D1.MORCEAU_7_NOM_TABLE := trim (SUBSTR(lig.donnees,42,3));
    elt_tab_11D1.MORCEAU_7_COL_DEB   := trim (SUBSTR(lig.donnees,45,3));
    elt_tab_11D1.MORCEAU_7_COL_FIN   := trim (SUBSTR(lig.donnees,48,3));
    elt_tab_11D1.MORCEAU_8_NOM_TABLE := trim (SUBSTR(lig.donnees,51,3));
    elt_tab_11D1.MORCEAU_8_COL_DEB   := trim (SUBSTR(lig.donnees,54,3));
    elt_tab_11D1.MORCEAU_8_COL_FIN   := trim (SUBSTR(lig.donnees,57,3));
    elt_tab_11D1.MORCEAU_9_NOM_TABLE := trim (SUBSTR(lig.donnees,60,3));
    elt_tab_11D1.MORCEAU_9_COL_DEB   := trim (SUBSTR(lig.donnees,63,3));
    elt_tab_11D1.MORCEAU_9_COL_FIN   := trim (SUBSTR(lig.donnees,66,3));
    IF tab_11D1                      IS NULL THEN
      tab_11D1                       := t_TGE_REF_VRDES();
    END IF;
    tab_11D1.extend;
    tab_11D1(tab_11D1.last)   :=elt_tab_11D1;
  elsif type_carte             ='V' THEN
    elt_tab_11V.NUMERO_DE_PAC :=pNumPac;
    elt_tab_11V.CODE_TABLE    :=pCodeTable;
    v_num_ligne               := trim (SUBSTR(lig.donnees,19,4));
    v_code_seq                := trim (SUBSTR(lig.donnees,24,1));
    IF v_code_seq             IS NULL THEN
      v_code_seq              :='1';
    END IF;
    IF pCodeTableOld  != pCodeTable THEN
      v_cmpt_numLigne := 0;
    END IF;
    IF v_num_ligne      IS NULL THEN
      IF v_code_seq      ='1' THEN
        v_cmpt_numLigne := v_cmpt_numLigne+100;
      END IF;
      elt_tab_11V.NUMERO_DE_LIGNE:= TO_CHAR(v_cmpt_numLigne,'FM09999999') ||v_code_seq;
    ELSE
      elt_tab_11V.NUMERO_DE_LIGNE:= TO_CHAR((to_number(v_num_ligne)*100),'FM09999999') ||v_code_seq;
    END IF;
    elt_tab_11V.ENREGISTREMENT := SUBSTR(lig.donnees,29,86);
    elt_tab_11V.LONGUEUR_INFO  := trim (SUBSTR(lig.donnees,26,3));
    IF tab_11V                 IS NULL THEN
      tab_11V                  := t_TGE_REF_VRVAL();
    END IF;
    tab_11V.extend;
    tab_11V(tab_11V.last):=elt_tab_11V;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'setCart11' , lig.num_lig||','||pNumPac||','||pCodeTable , err_code||'-'||err_msg );
  raise;
  raise_application_error(-20000, 'FSED cart 11  '|| sqlerrm);
END setCart11;
/**************************************************
Fonc : getLibResolu 
DESC : Calcul du libelle resolu
**************************************************/
FUNCTION getLibResolu(pNumPac       IN TGE_REF_VRREP.NUMERO_DE_PAC%TYPE,
                      pCodeCaisse   IN TGE_REF_CAISSE.CODECAISSE%TYPE,
                      pLibRUB       IN TGE_REF_RUBRIQUE.LIBRUB%TYPE) RETURN VARCHAR2 IS 
                      
w_libcaisse        TGE_REF_CAISSE.LIBCAISSE%TYPE;
w_nombre_occ       NUMBER;
w_libResolu        TGE_REF_LIBRUB_COTIS.LIB_RESOLU%TYPE;
w_first_pos        NUMBER;
w_length_seq       NUMBER :=1;
w_reste            TGE_REF_RUBRIQUE.LIBRUB%TYPE;
j                  NUMBER ; 
w_seq              TGE_REF_RUBRIQUE.LIBRUB%TYPE;
wLibRUB            TGE_REF_RUBRIQUE.LIBRUB%TYPE;
BEGIN
  BEGIN 
  SELECT LIBCAISSE
  INTO   w_libcaisse
  FROM   TGE_REF_CAISSE
  WHERE  numpac= pNumPac
  AND    codecaisse = pCodeCaisse;
  EXCEPTION 
    WHEN OTHERS THEN 
     w_libcaisse := null;
  END ;
  wLibRUB := REPLACE(pLibRUB,'£','#');
  select ( (LENGTH(wLibRUB) - LENGTH(REPLACE(wLibRUB,'#',NULL)) ) / NVL(LENGTH('#'),1) ) INTO w_nombre_occ from dual;
  
  IF w_nombre_occ =1 THEN
    select substr(replace(wLibRUB,'#',w_libcaisse),0,40) INTO w_libResolu from dual;
  ELSE

    select instr (wLibRUB ,'#') into w_first_pos from dual;
    for i IN w_first_pos..length(wLibRUB) Loop 
      if substr(wLibRUB,i+1,1)='#' THEN 
        w_length_seq:= w_length_seq+1;
      else         
         exit;
      END IF;
    END LOOP;
    if w_length_seq =1 THEN 
     select substr(replace(wLibRUB,'#',w_libcaisse),0,40) INTO w_libResolu from dual;
    else
      for k in 0..w_length_seq-1 loop
        w_seq := w_seq ||'#';
      end loop;
      select replace(wLibRUB,w_seq,substr(w_libcaisse,0,w_length_seq)) INTO w_libResolu from dual;
      w_seq := null;
    end if;
  END IF;
  return w_libResolu;
END getLibResolu ;
      
/**************************************************************************
PROC : setCart15 
DESC : cart 15
***************************************************************************/
PROCEDURE setCart15(
    p_id    IN NUMBER,
    lig     IN TGE_IMPORT_FSED%rowtype,
    pNumPac IN TGE_REF_VRREP.NUMERO_DE_PAC%TYPE)
IS
w_codegroup tge_ref_caisse.codegroup%type;

CURSOR REF_CAISSE(p_caisseref IN TGE_REF_CAISSE.caisseref%type,pNumPac IN TGE_REF_VRREP.NUMERO_DE_PAC%TYPE) is 
  SELECT CODECAISSE
  FROM   TGE_REF_CAISSE
  WHERE  NUMPAC    = pNumPac
  AND    caisseref = p_caisseref ;

BEGIN
  elt_tab_15.NUMPAC              := pNumPac;
  elt_tab_15.CODERUB             := trim(SUBSTR(lig.donnees,10,4));
  elt_tab_15.NOSEQU              := trim(SUBSTR(lig.donnees,24,1));
  elt_tab_15.TYPERUB             := trim(SUBSTR(lig.donnees,29,1));
  elt_tab_15.SENSRUB             := trim(SUBSTR(lig.donnees,30,1));
  elt_tab_15.CODEUNITE           := trim(SUBSTR(lig.donnees,31,1));
  elt_tab_15.LIBRUB              := trim(SUBSTR(lig.donnees,32,40));
  elt_tab_15.CODEFICHE           := trim(SUBSTR(lig.donnees,72,1));
  elt_tab_15.FLAGDVDR            := trim(SUBSTR(lig.donnees,73,1));
  elt_tab_15.LIBLAN1             := trim(SUBSTR(lig.donnees,74,20));
  elt_tab_15.LIBLAN2             := trim(SUBSTR(lig.donnees,94,20));
  elt_tab_15.LIBLAN3             := trim(SUBSTR(lig.donnees,114,20));
  elt_tab_15.NATURERUB           := trim(SUBSTR(lig.donnees,134,1));
  elt_tab_15.ORDREXEC            := trim(SUBSTR(lig.donnees,135,4));
  elt_tab_15.CODETAUX            := trim(SUBSTR(lig.donnees,139,3));
  elt_tab_15.CODEACCDEREMISE     := trim(SUBSTR(lig.donnees,142,3));
  elt_tab_15.QUALIFNOMBRE        := trim(SUBSTR(lig.donnees,145,1));
  elt_tab_15.QUALIFTAUX          := trim(SUBSTR(lig.donnees,146,1));
  elt_tab_15.QUALIFMONTANT       := trim(SUBSTR(lig.donnees,147,1));
  elt_tab_15.FLAGMONTANT         := trim(SUBSTR(lig.donnees,148,1));
  elt_tab_15.FLAGNB              := trim(SUBSTR(lig.donnees,149,1));
  elt_tab_15.FLAGTAUX            := trim(SUBSTR(lig.donnees,150,1));
  elt_tab_15.FLAGPCTG            := trim(SUBSTR(lig.donnees,151,1));
  elt_tab_15.FLAGIMP             := trim(SUBSTR(lig.donnees,152,1));
  elt_tab_15.POSITIONCURSEUR     := trim(SUBSTR(lig.donnees,153,1));
  elt_tab_15.CODECAISSE          := trim(SUBSTR(lig.donnees,154,3));
  elt_tab_15.CODEVENTILCOMPTABLE := trim(SUBSTR(lig.donnees,157,4));
  elt_tab_15.TYPTRAIT            := trim(SUBSTR(lig.donnees,171,10));
  elt_tab_15.FLAGARRET           := trim(SUBSTR(lig.donnees,161,1));
  elt_tab_15.FLAGRATTACH         := trim(SUBSTR(lig.donnees,162,1));
  elt_tab_15.OPTION_RETRO        := trim(SUBSTR(lig.donnees,163,1));
   IF LENGTH(lig.donnees)>240 THEN
 elt_tab_15.TEXTE_EXPLICATIF    := trim(SUBSTR(lig.donnees,241,400));
 ELSE elt_tab_15.TEXTE_EXPLICATIF  := '' ;
 END IF ;

  BEGIN
     SELECT CODEGROUP
     INTO   w_codegroup
     FROM   TGE_REF_CAISSE
     WHERE  NUMPAC     = pNumPac
     AND    CODECAISSE = elt_tab_15.CODECAISSE ;
  EXCEPTION
    WHEN OTHERS THEN
      w_codegroup :=NULL;
  END ;
  
  IF tab_15_lib  IS NULL THEN
     tab_15_lib := t_TGE_REF_LIBRUB_COTIS();
  END IF;
  
  IF elt_tab_15.CODECAISSE  is null THEN 
    elt_tab_15_lib.NUMPAC     := pNumPac;
    elt_tab_15_lib.CODERUB    := nvl(elt_tab_15.CODERUB,'*');
    elt_tab_15_lib.LIB_RESOLU := elt_tab_15.LIBRUB;
    elt_tab_15_lib.CODECAISSE := '*';
    elt_tab_15_lib.CAISSEREF  := '*';
    
    tab_15_lib.extend;
    tab_15_lib(tab_15_lib.last):=elt_tab_15_lib;
  ELSE
    IF elt_tab_15.LIBRUB not like '%#%'  and elt_tab_15.LIBRUB not like '%£%' THEN  
        elt_tab_15_lib.NUMPAC     := pNumPac;
        elt_tab_15_lib.CODERUB    := nvl(elt_tab_15.CODERUB,'*');
        elt_tab_15_lib.LIB_RESOLU := elt_tab_15.LIBRUB;      
        IF w_codegroup ='R' THEN 
          FOR i IN REF_CAISSE (elt_tab_15.CODECAISSE,pNumPac) LOOP
          elt_tab_15_lib.CAISSEREF  :=elt_tab_15.CODECAISSE;
          elt_tab_15_lib.CODECAISSE :=nvl(i.CODECAISSE,'*');
          tab_15_lib.extend;
          tab_15_lib(tab_15_lib.last):=elt_tab_15_lib;
          END LOOP;
        ELSE
          elt_tab_15_lib.CODECAISSE :=nvl(elt_tab_15.CODECAISSE,'*');
          elt_tab_15_lib.CAISSEREF  :='*';
          tab_15_lib.extend;
          tab_15_lib(tab_15_lib.last):=elt_tab_15_lib;
        END IF;
        
    ELSE
     FOR i IN REF_CAISSE (elt_tab_15.CODECAISSE,pNumPac) LOOP
        elt_tab_15_lib.NUMPAC     := pNumPac;
        elt_tab_15_lib.CODERUB    := nvl(elt_tab_15.CODERUB,'*');            
        elt_tab_15_lib.CODECAISSE := nvl(i.CODECAISSE,'*');
        elt_tab_15_lib.LIB_RESOLU := getLibResolu(pNumPac,elt_tab_15_lib.CODECAISSE,elt_tab_15.LIBRUB); 
        IF w_codegroup ='R' THEN 
          elt_tab_15_lib.CAISSEREF  := elt_tab_15.CODECAISSE;
         ELSE
           elt_tab_15_lib.CAISSEREF  := '*';
         END IF;        
         tab_15_lib.extend;
         tab_15_lib(tab_15_lib.last):=elt_tab_15_lib;
      END LOOP;
    
    END IF ;
  END IF;     
  
  IF tab_15                      IS NULL THEN
    tab_15                       := t_TGE_REF_RUBRIQUE();
  END IF;
  tab_15.extend;
  tab_15(tab_15.last):=elt_tab_15;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'setCart15' , lig.num_lig||','||pNumPac , err_code||'-'||err_msg );
  raise_application_error(-20000, 'FSED cart 15  '|| sqlerrm);
END setCart15;
/*******************************************************************
PROC : setCart17
DESC :  cart 17
*******************************************************************/
PROCEDURE setCart17(
    p_id IN NUMBER,
    lig TGE_IMPORT_FSED%rowtype,
    pNumPac TGE_REF_VRREP.NUMERO_DE_PAC%TYPE)
IS
  type_carte VARCHAR(3) := '';
BEGIN
  type_carte                   := trim(SUBSTR(lig.donnees,10,2));
  IF type_carte                 ='CR' THEN
    elt_tab_17CR.NUMPAC        := pNumPac;
    elt_tab_17CR.CODERUB       := trim(SUBSTR(lig.donnees,13,4));
    elt_tab_17CR.NOSEQU        := trim(SUBSTR(lig.donnees,18,3));
    elt_tab_17CR.CONTEXTE      := trim(SUBSTR(lig.donnees,22,50));
    elt_tab_17CR.CONTEXTESUITE := trim(SUBSTR(lig.donnees,72,30));
    IF tab_17CR                IS NULL THEN
      tab_17CR                 := t_TGE_REF_RUBRIQUE_CONTEXTE();
    END IF;
    tab_17CR.extend;
    tab_17CR(tab_17CR.last)         :=elt_tab_17CR;
  elsif type_carte                   ='DM' THEN
    IF trim(SUBSTR(lig.donnees,13,1))='F' THEN
      elt_tab_17DMF.NUMPAC          := pNumPac;
      elt_tab_17DMF.ELEMENT         := trim(SUBSTR(lig.donnees,15,4));
      elt_tab_17DMF.CODEMODIF       := trim(SUBSTR(lig.donnees,134,1));
      elt_tab_17DMF.LIBELLE         := trim(SUBSTR(lig.donnees,22,35));
      elt_tab_17DMF.TYPE            := trim(SUBSTR(lig.donnees,58,1));
      elt_tab_17DMF.LONGUEUR        := to_number(trim(SUBSTR(lig.donnees,60,2)));
      elt_tab_17DMF.NBDECI          := to_number(trim(SUBSTR(lig.donnees,62,1)));
      elt_tab_17DMF.MASQUE          := to_number(trim(SUBSTR(lig.donnees,64,2)));
      elt_tab_17DMF.STATUT          := trim(SUBSTR(lig.donnees,67,1));
      elt_tab_17DMF.GROUPE          := trim(SUBSTR(lig.donnees,69,3));
      elt_tab_17DMF.OCC1            := to_number(trim(SUBSTR(lig.donnees,73,3)));
      elt_tab_17DMF.OCC2            := to_number(trim(SUBSTR(lig.donnees,77,3)));
      elt_tab_17DMF.IND1            := trim(SUBSTR(lig.donnees,81,5));
      elt_tab_17DMF.IND2            := trim(SUBSTR(lig.donnees,86,4));
      elt_tab_17DMF.TEMOINS         := trim(SUBSTR(lig.donnees,91,42));
      elt_tab_17DMF.CALCUL_RETRO    := trim(SUBSTR(lig.donnees,136,1));
      IF tab_17DMF                  IS NULL THEN
        tab_17DMF                   := t_TGE_REF_DICOZ();
      END IF;
      tab_17DMF.extend;
      tab_17DMF(tab_17DMF.last) :=elt_tab_17DMF;
    END IF;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'setCart17' , lig.num_lig||','||pNumPac , err_code||'-'||err_msg );
  raise_application_error(-20000, 'FSED cart 17  '|| sqlerrm);
END setCart17;
/***********************************************************************
PROC : getNumLigne
DESC : recuperer le code table
*************************************************************************/
PROCEDURE getNumLigne(
    p_id IN NUMBER)
IS
BEGIN
  OPEN cur_numlig00(p_id) ;
  LOOP
    FETCH cur_numlig00 BULK COLLECT INTO tab_numLigne00 ;
    EXIT
  WHEN cur_numlig00%NOTFOUND;
  END LOOP;
  CLOSE cur_numlig00;
  OPEN cur_numlig99(p_id) ;
  LOOP
    FETCH cur_numlig99 BULK COLLECT INTO tab_numLigne99 ;
    EXIT
  WHEN cur_numlig99%NOTFOUND;
  END LOOP;
  CLOSE cur_numlig99;
END getNumLigne;
/***********************************************************************
FUNCT : GET_H2_COLONNE
DESC : recuperer la colonne clé de type DATE pour les tables de type H2
*************************************************************************/
FUNCTION GET_H2_COLONNE(
    p_table_name IN VARCHAR2)
  RETURN VARCHAR2
IS
  w_column_name user_cons_columns.column_name%TYPE;
BEGIN
  BEGIN
    SELECT column_name
    INTO w_column_name
    FROM user_cons_columns
    WHERE table_name     =p_table_name
    AND constraint_name IN
      (SELECT user_constraints.constraint_name
      FROM user_constraints
      WHERE user_cons_columns.table_name =user_constraints.table_name
      AND CONSTRAINT_TYPE                ='P'
      )
    AND column_name IN
      (SELECT tab.column_name
      FROM user_tab_columns tab
      WHERE tab.table_name =p_table_name
      AND tab.data_type    ='DATE'
      );
    RETURN(w_column_name);
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN(NULL);
  END;
END GET_H2_COLONNE;
/***********************************************************************
FUNCT : GET_M3_COLONNE
DESC : recuperer la colonne clé
*************************************************************************/
FUNCTION GET_M3_COLONNE(
    p_table_name IN VARCHAR2)
  RETURN VARCHAR2
IS
  w_column_name user_cons_columns.column_name%TYPE;
BEGIN
  BEGIN
    SELECT column_name
    INTO w_column_name
    FROM user_cons_columns
    WHERE table_name     =p_table_name
    AND constraint_name IN
      (SELECT user_constraints.constraint_name
      FROM user_constraints
      WHERE user_cons_columns.table_name =user_constraints.table_name
      AND CONSTRAINT_TYPE                ='P'
      )
    AND column_name IN
      (SELECT tab.column_name
      FROM user_tab_columns tab
      WHERE tab.table_name     =p_table_name
      AND tab.data_type!       ='DATE'
      AND tab.column_name NOT IN ('NUMPAC','PAIEZAD','PACMAT')
      );
    RETURN(w_column_name);
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN(NULL);
  END;
END GET_M3_COLONNE;
/***********************************************************************
FUNCT : GET_MONTH_00 
DESC : retourne le  mois de paie indiqué dans le FSED carte 00
*************************************************************************/
FUNCTION GET_PERIODE_00(
    p_id       IN NUMBER ,
    p_numligne IN NUMBER )
  RETURN NUMBER
IS
  w_moi_eff NUMBER ;
BEGIN
  SELECT SUBSTR(donnees,70,6)
  INTO w_moi_eff
  FROM TGE_IMPORT_FSED
  WHERE id_trt =p_id
  AND NUM_LIG  =p_numligne;
  RETURN (w_moi_eff);
END GET_PERIODE_00 ;
/***********************************************************************
FUNCT : IS_VALID_COLUMN 
DESC : retourne 1 si c'est une colonne de la table
*************************************************************************/
FUNCTION IS_VALID_COLUMN(
    p_TABLE_NAME VARCHAR2 ,
    p_colonne IN VARCHAR2 )
  RETURN NUMBER
IS
  flag NUMBER ;
BEGIN
  SELECT COUNT(*)
  INTO flag
  FROM user_tab_columns
  WHERE table_name =p_TABLE_NAME
  AND column_name  =p_colonne;
  RETURN (flag);
END IS_VALID_COLUMN ;
/***********************************************************************
FUNCT : GET_NUMPAC 
DESC : retourne le  numpac carte 00
*************************************************************************/
FUNCTION GET_NUMPAC(
    p_id       IN NUMBER ,
    p_numligne IN NUMBER )
  RETURN VARCHAR2
IS
  w_numpac VARCHAR2(7) ;
BEGIN
  SELECT SUBSTR(donnees,1,6)
  INTO w_numpac
  FROM TGE_IMPORT_FSED
  WHERE id_trt =p_id
  AND NUM_LIG  =p_numligne;
  RETURN (w_numpac);
END GET_NUMPAC ;
/****************************************************************
FUNCT : GET_Statement 
DESC : retourne sql statment avec le type de colonne
*****************************************************************/
    FUNCTION GET_Statement(
    p_type_colonne IN VARCHAR2 ,
    p_type_DICOZ   IN VARCHAR2 ,
    p_colonne      IN VARCHAR2 ,
    p_alias        IN VARCHAR2 )
  RETURN VARCHAR2
IS
  v_alias VARCHAR2(100):=' ';
BEGIN
  IF p_alias IS NOT NULL THEN
    v_alias  :=p_alias||'.';
  END IF;
  IF p_type_colonne ='N' AND p_type_DICOZ ='N' THEN
    RETURN('TO_NUMBER(replace('||v_alias||p_colonne||',''.'','',''))');
  ELSIF p_type_DICOZ ='D1' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''YYYYMMDD''),1,TO_date('||v_alias||p_colonne||',''YYYYMMDD''),null)');--yyyyMMdd
  ELSIF p_type_DICOZ ='D2' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''MMYYYY''),1,TO_date('||v_alias||p_colonne||',''MMYYYY''),decode(is_date('||v_alias||p_colonne||',''YYYYMM''),1,TO_date('||v_alias||p_colonne||',''YYYYMM''),null))');--MMyyyy/YYYYMM
   ELSIF p_type_DICOZ ='D3' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''YYYYMM''),1,TO_date('||v_alias||p_colonne||',''YYYYMM''),null)');--yyyyMM
   ELSIF p_type_DICOZ ='D4' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''DD''),1,TO_date('||v_alias||p_colonne||',''DD''),null)');--dd
   ELSIF p_type_DICOZ ='D5' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''MM''),1,TO_date('||v_alias||p_colonne||',''MM''),null)');--MM 
   ELSIF p_type_DICOZ ='D6' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''YYYYMMDD''),1,TO_date('||v_alias||p_colonne||',''YYYYMMDD''),null)');--yyyy
   ELSIF p_type_DICOZ ='D7' AND p_type_colonne='D' THEN
    RETURN('decode(is_date('||v_alias||p_colonne||',''YYYYMMDD''),1,TO_date('||v_alias||p_colonne||',''YYYYMMDD''),null)');
  ELSIF p_type_DICOZ ='V' THEN
    RETURN('TO_CHAR('||v_alias||p_colonne||')');
  ELSE
    RETURN(v_alias||p_colonne);
  END IF;
END GET_STATEMENT ;
/****************************************************************
FUNCT : GET_Statement 
DESC : 
*****************************************************************/
FUNCTION GET_Statement(
    p_type_colonne IN VARCHAR2 ,
    p_type_DICOZ   IN VARCHAR2,
    p_colonne      IN VARCHAR2 )
  RETURN VARCHAR2
IS
BEGIN
  RETURN GET_Statement (p_type_colonne,p_type_DICOZ , p_colonne , 'i');
END GET_STATEMENT ;
/****************************************************************
FUNCT : GET_TYPE_RETOUR 
DESC  : retourne type de retour
*****************************************************************/
FUNCTION GET_TYPE_RETOUR(
    p_id       IN NUMBER ,
    p_numligne IN NUMBER)
  RETURN VARCHAR2
IS
  w_type_retour VARCHAR2(2);
BEGIN
  SELECT SUBSTR(DONNEES,68,2)
  INTO w_type_retour
  FROM TGE_IMPORT_FSED
  WHERE id_trt      =p_id
  AND NUM_LIG       =p_numligne;
  IF w_type_retour IS NULL OR w_type_retour='  ' THEN
    w_type_retour  :='RN';
  END IF;
  RETURN (w_type_retour);
END GET_TYPE_RETOUR ;
/*****************************************************
PROC : purge_carte80
DESC :
*****************************************************/
PROCEDURE purge_carte80(
    p_id    IN NUMBER,
    p_mois  IN VARCHAR2,
    p_lig00 IN NUMBER ,
    p_lig99 IN NUMBER )
IS
BEGIN
  DELETE
  FROM DIC_TGE_RESPAIE_RUBRIQUE
  WHERE (numpac,paiezad,TO_CHAR(to_date(periodepaie),'YYYYMM')) IN
    (SELECT numpac ,
      paiezad ,
      PERIODEPAIE
    FROM TGE_IMPORT_FSED_80
    WHERE id_trt =p_id
    AND numligne BETWEEN p_lig00 AND p_lig99
    GROUP BY(numpac,paiezad,PERIODEPAIE)
    HAVING COUNT(*)>0
    ) ;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'purge_carte80' , NULL, err_code||'-'||err_msg );
  raise_application_error(-20000, 'FSED purge_carte80  '|| sqlerrm);
END purge_carte80;
/******************************************************************
PROC : insertCart80 
********************************************************************/
PROCEDURE sous_insertCart80(
    p_id    IN NUMBER,
    p_newId IN NUMBER)
IS
  req          VARCHAR2(32767);
  v_start      NUMBER;
  v_stop       NUMBER;
  v_flag_cart  NUMBER;
  w_moi_retour NUMBER;
  w_numpac TGE_REF_MAPDO.NUMPAC%TYPE;
  jobno         NUMBER;
  w_type_retour VARCHAR2(2);
BEGIN
  v_start := DBMS_UTILITY.GET_TIME;
  getNumLigne(p_id);
  IF tab_numLigne00 IS NOT NULL AND tab_numLigne99 IS NOT NULL THEN
    FOR i IN tab_numLigne00.first..tab_numLigne00.last
    LOOP
      IF i            <=tab_numLigne99.count AND tab_numLigne99(i) IS NOT NULL THEN
        w_moi_retour  := GET_PERIODE_00(p_id,tab_numLigne00(i));
        w_numpac      := GET_NUMPAC(p_id,tab_numLigne00(i));
        w_type_retour := GET_TYPE_RETOUR(p_id,tab_numLigne00(i));
        insert_gap_trt(p_id,w_numpac,w_moi_retour,w_type_retour);
        insert_gap_trt_suivi(p_id,'DEBUT',NULL,'BATCH',w_type_retour);
        purge_carte80(p_id,w_moi_retour,tab_numLigne00(i),tab_numLigne99(i));
        -- la periodepaie est forcé au premier jour du moi
        req := 'INSERT INTO DIC_TGE_RESPAIE_RUBRIQUE (NUMPAC,PAIEZAD,PACMAT,CLASSE,CAISSE_RUB,CLEIMP,CODERES,CODERUB,IMPUTATION,MONTANT,NOMBRE,ORDRE,PERIODEPAIE,SENS,TAUX,TYPE,DATE_DEB_ARRET,PERIODE_RATTACH_DEB,PERIODE_RATTACH_FIN,PERIODE_AFFECTATION,MATRIC) ';
        req := req ||' SELECT DISTINCT i.numpac,i.paiezad,i.pacmat ,i.classe,i.attribut ,';--DIT  50818
        req := req ||' (dense_rank() over(partition by i.NUMPAC, i.PAIEZAD, i.CODERUB, i.CODERES order by i.NUMLIGNE)-1 )as CLEIMP';
        req := req ||' ,i.coderes,i.coderub,i.imputation, case when  i.sens =''-''  then ((i.montant)*(-1)) else i.montant end as montant ,';
        req         := req ||' i.nombre,to_number(r.ORDREXEC),TO_DATE('||w_moi_retour||'01,''YYYYMMDD''),';
        req         := req ||' i.sens,i.taux,';
        req         := req ||' i.type,to_date(i.DATE_DEB_ARRET,''yyyymmdd''),to_date(i.PERIODE_RATTACH_DEB,''yyyymmdd''),to_date(i.PERIODE_RATTACH_FIN,''yyyymmdd''),to_date(replace(i.PERIODE_AFFECTATION,''000000'',null),''yyyymm''),i.MATRICULE FROM TGE_IMPORT_FSED_80 i,TGE_REF_RUBRIQUE r  WHERE id_trt= :id_trt ';
        req         := req ||' AND r.coderub= i.coderub AND r.numpac = i.numpac ';
        req         := req ||' AND ( ';
        req         := req ||' (numligne >=' ||tab_numLigne00(i)||' AND numligne <= '||tab_numLigne99(i)||') ';
        req         := req ||' ) ';
        v_flag_cart := 1;
      ELSE
        v_flag_cart := 0;
      END IF;
      IF req IS NOT NULL THEN
        insert_gap_trt(p_id,w_numpac,w_moi_retour,w_type_retour);
        EXECUTE IMMEDIATE req USING p_id;
      ELSIF req IS NULL OR v_flag_cart = 0 THEN
        FSED_ERREUR( p_id , 'sous_insertCart80' , NULL, err_code||'-'||err_msg );
      END IF;
    END LOOP;
  ELSE
    req := NULL;
  END IF;
  merge INTO
  (SELECT * FROM GAP_TRT_LISTE_MAT WHERE id_trt=p_id
  ) a USING
  (SELECT DISTINCT numpac,
    NVL(pacmat,paiezad) AS pacmat
  FROM TGE_import_fsed_80
  WHERE id_trt     =p_id
  ) b ON (a.numpac =b.numpac AND a.pacmat=b.pacmat)
WHEN NOT matched THEN
  INSERT
    (a.id_trt,a.numpac,a.pacmat
    ) VALUES
    (p_id,b.numpac,b.pacmat
    );
  tab_numLigne00.delete;
  tab_numLigne99.delete;
  v_stop := DBMS_UTILITY.GET_TIME;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := err_msg||' '||SQLERRM;
  --DBMS_OUTPUT.PUT_LINE(req);
  --FIXME utiliser la procédure trace_dbms_output()
  FSED_ERREUR( p_id , 'insertCart80' , p_id || ',' || p_newId, err_code||'-'||err_msg||'- Requete : '||req);
  raise_application_error(-20000, 'FSED insertCart80  '|| sqlerrm);
END sous_insertCart80;
/******************************************************************
PROC : insertCart30 (p_id IN NUMBER)
DESC :
********************************************************************/
PROCEDURE insertCart80
  (
    p_id    IN NUMBER,
    p_newId IN NUMBER
  )
IS
  PRAGMA AUTONOMOUS_TRANSACTION;
  jobno    NUMBER;
  finished NUMBER;
BEGIN
  finished:=1;
  dbms_job.submit(jobno, 'sous_insertCart80('||p_id||','||p_newid||')',sysdate, NULL);
END insertCart80;
/*******************************************************************
PROC : tmp_histo_fsed_30
Fonc :
********************************************************************/
PROCEDURE tmp_histo_fsed_30(
    p_id     IN NUMBER ,
    p_numpac IN TGE_REF_MAPDO.NUMPAC%TYPE,
    p_moi    IN VARCHAR2
  )
IS
  CURSOR tmp_30
  IS
    SELECT DISTINCT do.DONNEEGXP ,
      ( SELECT DISTINCT data_type
      FROM user_tab_columns cln
      WHERE cln.table_name = do.TABLEGXP
      AND cln.column_name  = do.DONNEEGXP
      ) AS typeelt,
    dicoz.longueur
  FROM
    (SELECT * FROM TGE_REF_MAPDO WHERE numpac=p_numpac
    UNION ALL
    SELECT *
    FROM TGE_REF_MAPDO
    WHERE numpac     ='*'
    AND ELEMENT NOT IN
      (SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac=p_numpac
      )
    ) DO ,tge_import_fsed_30 imp,tge_ref_dicoz dicoz
  WHERE do.TABLEGXP    ='DIC_ADM_CONTRAT_HISTO'
  AND imp.code_element =do.element
  AND imp.tablegxp     =do.tablegxp
  AND imp.donneegxp    =do.donneegxp
  AND id_trt           =p_id
  AND imp.numpac       = p_numpac
  AND imp.TABLEGXP     =do.tablegxp
  AND imp.code_element =do.element
  AND dicoz.element    = do.element
  AND dicoz.numpac     = imp.numpac ;
  stmtClause CLOB ;
  cmp NUMBER :=0;
BEGIN
  stmtClause := 'insert into TGE_FSED_30_TEMPORARY (id_trt,numpac,pacmat,paiezad,TOUPDATE)  (SELECT ';
  stmtClause :=stmtClause||'/*+  BATCH_TABLE_ACCESS_BY_ROWID(@"SEL$291F8F59" "DACH2"@"SEL$3") LEADING(@"SEL$B29E968D" "VW_SQ_1"@"SEL$E9784550" "T"@"SEL$2" "A"@"SEL$2") INDEX(@"SEL$B29E968D" "A"@"SEL$2" ("DIC_ADM_CONTRAT_HISTO"."NUMPAC" "DIC_ADM_CONTRAT_HISTO"."PAIEZAD" "DIC_ADM_CONTRAT_HISTO"."DATE_EFF")) BATCH_TABLE_ACCESS_BY_ROWID(@"SEL$B29E968D" "T"@"SEL$2") NO_ACCESS(@"SEL$B29E968D" "VW_SQ_1"@"SEL$E9784550") BATCH_TABLE_ACCESS_BY_ROWID(@"SEL$5" "F"@"SEL$5") USE_HASH(@"SEL$4FDF941B" "HISTO"@"SEL$1") LEADING(@"SEL$4FDF941B" "COMPTEUR"@"SEL$4" "HISTO"@"SEL$1") NO_ACCESS(@"SEL$4FDF941B" "HISTO"@"SEL$1") NO_ACCESS(@"SEL$4FDF941B" "COMPTEUR"@"SEL$4") UNNEST(@"SEL$3") */ ';
  stmtClause :=stmtClause||p_id||','''||p_numpac||''',compteur.pacmat,compteur.paiezad,decode(nvl(cmp,-1),cmp1,''N'',''O'') as TOUPDATE FROM ';
  stmtClause :=stmtClause||' (SELECT t.pacmat,t.paiezad,count(*) as cmp  FROM tge_import_fsed_30 t , dic_adm_contrat_histo a  where t.numpac ='''||p_numpac||''' and t.id_trt='||p_id||' and t.tablegxp=''DIC_ADM_CONTRAT_HISTO''';
  stmtClause :=stmtClause||' and a.paiezad = t.paiezad and a.pacmat =t.pacmat ';
  stmtClause :=stmtClause||' and a.numpac='''||p_numpac||''' and a.date_eff= ';
  stmtClause :=stmtClause||'(select max(dach2.date_eff) from dic_adm_contrat_histo dach2 where dach2.date_eff<=TO_DATE('''||p_moi||'01'',''YYYYMMDD'') and dach2.paiezad = t.paiezad ';
  stmtClause :=stmtClause||' AND dach2.pacmat= t.pacmat and dach2.numpac='''||p_numpac||''')';
  stmtClause :=stmtClause|| ' AND (';
  FOR c IN tmp_30
  LOOP
    IF cmp!=0 THEN
      stmtClause :=stmtClause||' OR ';
    END IF;
    cmp                      := cmp+1;
    IF c.typeelt              ='DATE' THEN
      stmtClause             :=stmtClause||' ( NVL(to_char(a.'||c.donneegxp;
      IF c.longueur   =6 THEN
        stmtClause           :=stmtClause||',''YYYYMM''';
      elsif c.longueur=8 THEN
        stmtClause           :=stmtClause||',''YYYYMMDD''';
      elsif c.longueur=4 THEN
        stmtClause           :=stmtClause||',''YYYY''';
      elsif c.longueur=2 THEN
        stmtClause           :=stmtClause||',''MM''';
      END IF;
      stmtClause   :=stmtClause||'),''NULL'')=NVL(to_char(replace(replace(t.valeur,'' '','''')';
      IF c.longueur   =6 THEN
        stmtClause           :=stmtClause||',''000000'',null';
      elsif c.longueur=8 THEN
        stmtClause           :=stmtClause||',''00000000'',null';
      elsif c.longueur=4 THEN
        stmtClause           :=stmtClause||',''0000'',null';
      elsif c.longueur=2 THEN
        stmtClause           :=stmtClause||',''00'',null';
      END IF;
      stmtClause   :=stmtClause||')),''NULL'') ';
      stmtClause   :=stmtClause||' AND t.donneegxp ='''||c.donneegxp||''')' ;
    elsif c.typeelt ='VARCHAR2' THEN
      stmtClause   :=stmtClause||'( NVL(a.'||c.donneegxp||',''NULL'')=NVL(to_char(t.valeur),''NULL'') AND t.donneegxp ='''||c.donneegxp||''')' ;
    ELSE
      stmtClause :=stmtClause||' ( NVL(a.'||c.donneegxp||',0)=nvl(is_number(t.valeur),0) AND t.donneegxp ='''||c.donneegxp||''')' ;
    END IF;
  END LOOP;
  stmtClause :=stmtClause|| ' )group by t.pacmat,t.paiezad)HISTO right join (select f.pacmat,f.paiezad,count(*)as cmp1 from tge_import_fsed_30 f WHERE f.numpac='''||p_numpac||''' AND f.id_trt  ='||p_id||' AND f.tablegxp=''DIC_ADM_CONTRAT_HISTO'' group by f.pacmat,f.paiezad) Compteur ';
  stmtClause :=stmtClause||' ON  histo.pacmat =compteur.pacmat and histo.paiezad =compteur.paiezad ) ';
  FSED_AVANCEMENT(p_id,'tmp_histo_fsed_30 stmtClause= '||substr(stmtClause,0,3800) );
  --dbms_output.put_line('test '||stmtClause);
  --FIXME utiliser la procédure trace_dbms_output()
   EXECUTE_IMMEDIATE_STRING  (stmtClause,0);
END tmp_histo_fsed_30;
/*******************************************************************
PROC : sous_insertCart30
Fonc : traitement des tables M1,M7,M3ANNEE,M3MOIS,MULTIPLE,OCCC
UNIQUE,H2 et AVPERS.
********************************************************************/
PROCEDURE sous_insertCart30(
    p_id    IN NUMBER,
    p_newId IN NUMBER,
    p_table IN VARCHAR2 )
IS
  req               CLOB;
  reqChrono         VARCHAR2(500);
  reqRc             CLOB;
  w_date_RC         DATE;
  w_date_indic      DATE;
  w_date_COMP       DATE;
  reqPropag         CLOB;
  reqTrace          CLOB;
  reqW580           CLOB;
  reqWL52           CLOB;
  reqUdpateDate     CLOB;
  ssreq             CLOB;
  v_start           NUMBER;
  v_stop            NUMBER;
  w_table           TGE_REF_MAPDO.TABLEGXP%TYPE;
  w_table_param     TGE_REF_MAPDO.TABLEGXP%TYPE;
  w_type_colonne    VARCHAR2(1);
  w_cle             VARCHAR2(12);
  w_type            VARCHAR2(1);
  w_colonne_30      VARCHAR2(12);
  coldtfin          VARCHAR2(50);
  v_flag_cart       NUMBER;
  w_date_eff        user_cons_columns.column_name%TYPE;
  w_code_caisse     user_cons_columns.column_name%TYPE;
  w_ann_social      VARCHAR2(100);
  w_table_soc       VARCHAR2(100);
  w_type_retour     VARCHAR2(2);
  w_moi_retour      NUMBER;
  w_numpac          TGE_REF_MAPDO.NUMPAC%TYPE;
  w_trace           VARCHAR2(50);
  tabW580_h         TAB_DATE_w580_H;
  tabWL52_h         TAB_DATE_WL52_H;
  objTable          TGE_REF_MAPTA%rowtype;
  w_00              NUMBER;
  w_99              NUMBER;
  w_elem            VARCHAR2(4);
  w_occ             VARCHAR2(2);
  
  CURSOR cur_element ( p_numpac IN VARCHAR2)
  IS
    SELECT DISTINCT do.DONNEEGXP ,
      (SELECT DISTINCT data_type
       FROM   user_tab_columns cln
       WHERE  cln.table_name = do.TABLEGXP
       AND    cln.column_name  = do.DONNEEGXP
      ) AS typeelt,
     ( select case 
       when type='N' and masque=1 THEN 'D1'  
       when type='N' and masque=2 THEN 'D2' 
       when type='N' and masque=3 THEN 'D3' 
       when type='N' and masque=4 THEN 'D4' 
       when type='N' and masque=5 THEN 'D5' 
       when type='N' and masque=6 THEN 'D6' 
       when type='N' and masque=7 THEN 'D7' 
       when type='P'  OR (type ='N' AND MASQUE NOT IN (1,2,3,4,5,6,7))THEN 'N' 
       WHEN type ='A' THEN 'V'
       ELSE type 
       end as typeDICOZ
      from tge_ref_dicoz d where numpac=p_numpac and element=do.element )as typeDICOZ
      
   FROM
    (SELECT * FROM TGE_REF_MAPDO WHERE numpac=p_numpac
     UNION ALL
     SELECT *
     FROM TGE_REF_MAPDO
     WHERE numpac     ='*'
     AND ELEMENT NOT IN
      (SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac=p_numpac)
    ) DO 
  WHERE do.TABLEGXP=p_table
  AND EXISTS
    (SELECT code_element,
            tablegxp,
            donneegxp
    FROM  tge_import_fsed_30 imp
    WHERE id_trt       = p_id
    AND   imp.numpac   = p_numpac
    AND   imp.TABLEGXP = do.tablegxp
    AND   imp.code_element = do.element
    ) ;

  CURSOR cur_element_histo ( p_numpac IN VARCHAR2)
  IS
    SELECT DISTINCT do.DONNEEGXP ,
      ( SELECT DISTINCT data_type
        FROM user_tab_columns cln
        WHERE cln.table_name = do.TABLEGXP
        AND cln.column_name  = do.DONNEEGXP
      ) AS typeelt
    FROM
     (SELECT * FROM TGE_REF_MAPDO WHERE numpac=p_numpac
      UNION ALL
      SELECT *
      FROM TGE_REF_MAPDO
      WHERE numpac     ='*'
      AND ELEMENT NOT IN
      (SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac=p_numpac)
    ) DO
  WHERE do.TABLEGXP=p_table
  AND EXISTS
    (SELECT code_element,
      tablegxp,
      donneegxp
    FROM tge_import_fsed_30 imp
    WHERE id_trt        =p_id
    AND imp.numpac      = p_numpac
    AND imp.TABLEGXP    =do.tablegxp
    AND imp.code_element=do.element
    ) ;

  CURSOR cur_SECUPACMAT ( p_numpac IN VARCHAR2)
  IS
    SELECT DISTINCT do.DONNEEGXP ,
      ( SELECT DISTINCT data_type
      FROM user_tab_columns cln
      WHERE cln.table_name = 'SECUPACMAT'
      AND cln.column_name  = do.DONNEEGXP
      ) AS typeelt,
      ( select case 
       when type='N' and masque=1 THEN 'D1'  
       when type='N' and masque=2 THEN 'D2' 
       when type='N' and masque=3 THEN 'D3' 
       when type='N' and masque=4 THEN 'D4' 
       when type='N' and masque=5 THEN 'D5' 
       when type='N' and masque=6 THEN 'D6' 
       when type='N' and masque=7 THEN 'D7' 
       when type='P'  OR (type ='N' AND MASQUE NOT IN (1,2,3,4,5,6,7))THEN 'N' 
       WHEN type ='A' THEN 'V'
       ELSE type 
       end as typeDICOZ
      from tge_ref_dicoz d where numpac=p_numpac and element=do.element )as typeDICOZ
  FROM
    (SELECT * FROM TGE_REF_MAPDO WHERE numpac=p_numpac
    UNION ALL
    SELECT *
    FROM TGE_REF_MAPDO
    WHERE numpac     ='*'
    AND ELEMENT NOT IN
      (SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac=p_numpac
      )
    ) DO,
    user_tab_columns u
  WHERE do.TABLEGXP ='DIC_ADM_CONTRAT'
  AND u.column_name = do.DONNEEGXP
  AND u.table_name  = 'SECUPACMAT'
  AND EXISTS
    (SELECT code_element,
      tablegxp,
      donneegxp
    FROM tge_import_fsed_30 imp
    WHERE id_trt        =p_id
    AND imp.numpac      =p_numpac
    AND imp.TABLEGXP    =do.tablegxp
    AND imp.code_element=do.element
    ) ;
  clinsertcols       CLOB;
  clinsertsel        CLOB;
  clinsertvalues     CLOB;
  clmerge            CLOB;
  nbmapta            NUMBER;
  hasDtfin           NUMBER;
  clssreqPivotMerge  CLOB;
  clupdateMerge      CLOB;
  clinsertDonMerge   CLOB;
  clinsertValMerge   CLOB;
  clssreqPivotSec    CLOB;
  clupdSecu          CLOB;
  clinsertDonSecu    CLOB;
  clinsertValSecu    CLOB;
TYPE t_colonne IS  TABLE OF user_tab_columns.column_name%type;
  tab_colonne         t_colonne;
  donneesUpdatePropag CLOB;
  donneesSelectPropag CLOB;
BEGIN
  FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début p_id='||p_id||';p_newId='||p_newId||';p_table='||p_table);
  v_start := DBMS_UTILITY.GET_TIME;
  getNumLigne(p_id);
  --gestion du trigger des DACH : insertion dans la table temporaire BYPASS_TRG_DACH_ON_SESSION
  INSERT INTO BYPASS_TRG_DACH_ON_SESSION(date_event,MESSAGE)VALUES(sysdate,'Retour de paie Carte 30');
  COMMIT;
  FOR i IN tab_numLigne00.first..tab_numLigne00.last
  LOOP
    IF i <=tab_numLigne99.count AND tab_numLigne99(i)IS NOT NULL THEN
      w_numpac := GET_NUMPAC(p_id,tab_numLigne00(i));
      w_type_retour := GET_TYPE_RETOUR(p_id,tab_numLigne00(i));
      IF p_table IN ('DIC_TGE_PRETS','DIC_TGE_OPPOSITIONS') THEN
        reqChrono := ' AND ( (pacmat,NVL(code_chrono,''0'') ) IN (select pacmat,nvl(max(imp.code_chrono),''0'')  from tge_import_FSED_30 imp WHERE  imp.id_trt='||p_id||' AND imp.numpac='''||w_numpac||''' AND imp.tablegxp = '''||p_table||''' and imp.CODE_ELEMENT=tge_import_FSED_30.CODE_ELEMENT AND NVL(imp.indicatif,''XyZ'')=NVL(tge_import_FSED_30.indicatif,''XyZ'') AND imp.pacmat =tge_import_FSED_30.pacmat   group by imp.pacmat))';
      ELSE
        reqChrono := '';
      END IF;
      IF w_type_retour IN ('RN','RC','RT') THEN
        w_moi_retour := GET_PERIODE_00(p_id,tab_numLigne00(i));
        IF p_table    ='DIC_ADM_CONTRAT_HISTO' THEN
          FSED_AVANCEMENT(p_id,'tmp_histo_fsed_30 Début p_id='||p_id ||';w_numpac='||w_numpac||';w_moi_retour='||w_moi_retour );
          DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'GAP_TRT_LISTE_MAT',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);
              DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'TGE_IMPORT_FSED',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);
              DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'TGE_IMPORT_FSED_30',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);
          tmp_histo_fsed_30(p_id,w_numpac,w_moi_retour);
          COMMIT;
          DBMS_STATS.GATHER_TABLE_STATS( ownname => sys_context('USERENV','SESSION_SCHEMA') ,TABNAME=>'TGE_FSED_30_TEMPORARY',METHOD_OPT => 'FOR ALL COLUMNS SIZE 254',estimate_percent => 100, cascade => true , DEGREE=>4);
          FSED_AVANCEMENT(p_id,'tmp_histo_fsed_30 Fin ');
        END IF;
        SELECT COUNT(*)
        INTO nbmapta
        FROM
          (SELECT * FROM TGE_REF_MAPTA WHERE numpac=w_numpac
          UNION ALL
          SELECT *
          FROM TGE_REF_MAPTA
          WHERE numpac        ='*'
          AND TABLEPARAM NOT IN
            (SELECT TABLEPARAM FROM TGE_REF_MAPTA WHERE numpac=w_numpac
            )
          ) TA
        WHERE ta.tableparam=p_table
        AND ALLERRETOUR   IN ('2','R')
        AND TABLETYPE     IS NOT NULL
        AND TABLEPHY      IS NOT NULL ;
        IF (nbmapta        > 0) THEN
          SELECT DISTINCT numpac,
            NULL AS rownumber ,
            tableparam,
            NULL AS fichier,
            tablephy,
            allerretour,
            tabletype,
            moiszero,
            nbmoiscons,
            sensiblerhid,
            reserve
          INTO objtable
          FROM
            (SELECT * FROM TGE_REF_MAPTA WHERE numpac=w_numpac
            UNION ALL
            SELECT *
            FROM TGE_REF_MAPTA
            WHERE numpac        ='*'
            AND TABLEPARAM NOT IN
              (SELECT TABLEPARAM FROM TGE_REF_MAPTA WHERE numpac=w_numpac
              )
            ) TA
          WHERE ta.tableparam=p_table
          AND ALLERRETOUR   IN ('2','R')
          AND TABLETYPE     IS NOT NULL
          AND TABLEPHY      IS NOT NULL;
          IF objtable.TABLETYPE ='M3ANNEE' THEN
            reqW580 := 'SELECT numpac,paiezad, valeur FROM TGE_IMPORT_FSED_30 AN WHERE  ID_TRT = :1 and AN.numpac  = :2 AND code_element =''W580'' ';
            EXECUTE IMMEDIATE reqW580 bulk collect INTO tabW580_h USING p_id,
            w_numpac;
          END IF;
          IF objtable.TABLETYPE ='M1' THEN
            reqWL52 := 'SELECT numpac,paiezad, valeur FROM TGE_IMPORT_FSED_30 AN WHERE  ID_TRT = :1 and AN.numpac  = :2 AND code_element =''WL52'' ';
            EXECUTE IMMEDIATE reqWL52 bulk collect INTO tabWL52_h USING p_id,
            w_numpac;
          END IF;
          w_table       := objtable.TABLEPHY;
          w_table_param := objtable.TABLEPARAM;
          w_type        := getTypeTable(w_table);
          FOR trig IN
          (SELECT object_name
          FROM user_objects
          WHERE lower(object_type)='trigger'
          AND lower(object_name) LIKE '%'
            ||lower(w_table)
            ||'%'
          AND (lower(object_name) LIKE 'horo%' )
          )
          LOOP
             EXECUTE_IMMEDIATE_STRING  ('ALTER TRIGGER ' || trig.object_name ||' disable ',0);
          END LOOP;
          w_date_eff := GET_H2_COLONNE(w_table);
          --RSI : En cas de RN, si 1 ligne existe dans la même année sociale, il faut la détruire. La date de paie AAAAMM01 sera insérée
          IF w_type_retour = 'RN' THEN
          --DEBUT M3ANNEE
            IF objtable.TABLETYPE ='M3ANNEE' THEN
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RN '||objtable.TABLETYPE );
              IF tabW580_h.exists(1) THEN
                req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  ';
                req := req ||' EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and numpac  = :numpac  and TGE_IMPORT_FSED_30.paiezad=T.paiezad';
                req := req ||' AND TGE_IMPORT_FSED_30.CODE_ELEMENT =''W580'' AND SUBSTR('''||w_moi_retour||''',5,2)>=TGE_IMPORT_FSED_30.valeur ';
                req := req ||' AND '||w_date_eff||' between TO_DATE(';
                req := req ||' SUBSTR('''||w_moi_retour||''',1,4)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
                req := req ||' AND TO_DATE(';
                req := req ||' SUBSTR('''||w_moi_retour||''',1,4)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364 )';
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';w_numpac'||w_numpac||';req='||req );
                EXECUTE IMMEDIATE req USING p_id,
                w_numpac;
                req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  ';
                req := req ||' EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and numpac  = :numpac and TGE_IMPORT_FSED_30.paiezad=T.paiezad  ';
                req := req ||' AND TGE_IMPORT_FSED_30.CODE_ELEMENT =''W580'' AND SUBSTR('''||w_moi_retour||''',5,2)<TGE_IMPORT_FSED_30.valeur ';
                req := req ||' AND '||w_date_eff||' between TO_DATE(';
                req := req ||' (SUBSTR('''||w_moi_retour||''',1,4)-1)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
                req := req ||' AND TO_DATE(';
                req := req ||' (SUBSTR('''||w_moi_retour||''',1,4)-1)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364 )';
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';w_numpac'||w_numpac||';req='||req );
                EXECUTE IMMEDIATE req USING p_id,
                w_numpac;
              ELSE
                IF SUBSTR(w_moi_retour,5,2)>=objtable.MOISZERO THEN
                  req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
                  req                      := req ||' AND '||w_date_eff||' between TO_DATE(';
                  req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
                  req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
                  req                      := req ||' AND TO_DATE(';
                  req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
                  req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')+364';
                ELSE
                  req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
                  req := req ||' AND '||w_date_eff||' between TO_DATE(';
                  req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||''';
                  req := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
                  req := req ||' AND TO_DATE(';
                  req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
                  req := req ||objtable.MOISZERO||'||''01'''||',''YYYYMMDD'')+364';
                END IF ;
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';w_numpac'||w_numpac||';req='||req );
                EXECUTE IMMEDIATE req USING p_id;
                req:='';
              END IF;
            END IF;
          --FIN M3ANNEE 
          --DEBUT M1
          IF objtable.TABLETYPE ='M1' THEN
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RN '||objtable.TABLETYPE );
              IF tabWL52_h.exists(1) THEN
                req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  ';
                req := req ||' EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and numpac  = :numpac  and TGE_IMPORT_FSED_30.paiezad=T.paiezad';
                req := req ||' AND TGE_IMPORT_FSED_30.CODE_ELEMENT =''WL52'' AND SUBSTR('''||w_moi_retour||''',5,2)>=TGE_IMPORT_FSED_30.valeur ';
                req := req ||' AND '||w_date_eff||' between TO_DATE(';
                req := req ||' SUBSTR('''||w_moi_retour||''',1,4)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
                req := req ||' AND TO_DATE(';
                req := req ||' SUBSTR('''||w_moi_retour||''',1,4)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364 )';
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';w_numpac'||w_numpac||';req='||req );
                EXECUTE IMMEDIATE req USING p_id,
                w_numpac;
                req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  ';
                req := req ||' EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and numpac  = :numpac and TGE_IMPORT_FSED_30.paiezad=T.paiezad  ';
                req := req ||' AND TGE_IMPORT_FSED_30.CODE_ELEMENT =''WL52'' AND SUBSTR('''||w_moi_retour||''',5,2)<TGE_IMPORT_FSED_30.valeur ';
                req := req ||' AND '||w_date_eff||' between TO_DATE(';
                req := req ||' (SUBSTR('''||w_moi_retour||''',1,4)-1)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
                req := req ||' AND TO_DATE(';
                req := req ||' (SUBSTR('''||w_moi_retour||''',1,4)-1)||';
                req := req ||' NVL(TGE_IMPORT_FSED_30.valeur,'''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364 )';
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';w_numpac'||w_numpac||';req='||req );
                EXECUTE IMMEDIATE req USING p_id,
                w_numpac;
              ELSE
                IF SUBSTR(w_moi_retour,5,2)>=objtable.MOISZERO THEN
                  req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
                  req                      := req ||' AND '||w_date_eff||' between TO_DATE(';
                  req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
                  req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
                  req                      := req ||' AND TO_DATE(';
                  req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
                  req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')+364';
                ELSE
                  req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
                  req := req ||' AND '||w_date_eff||' between TO_DATE(';
                  req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||''';
                  req := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
                  req := req ||' AND TO_DATE(';
                  req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
                  req := req ||objtable.MOISZERO||'||''01'''||',''YYYYMMDD'')+364';
                END IF ;
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';w_numpac'||w_numpac||';req='||req );
                EXECUTE IMMEDIATE req USING p_id;
                req:='';
              END IF;
            END IF;
          --FIN M1
            --RSI : En cas de RN, si 1 ligne existe dans la même année statistique, il faut la détruire. La date de paie AAAAMM01 sera insérée.
            IF objtable.TABLETYPE ='M9' THEN
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RN TABLETYPE M9');
              IF SUBSTR(w_moi_retour,5,2)>=objtable.MOISZERO THEN
                req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) AND '||w_date_eff||' between TO_DATE(SUBSTR('||w_moi_retour||',1,4)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'') and (TO_DATE(SUBSTR('||w_moi_retour||',1,4)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'')+364)';
              ELSE
                req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) AND '||w_date_eff||' between TO_DATE((SUBSTR('||w_moi_retour||',1,4)-1)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'') and (TO_DATE((SUBSTR('||w_moi_retour||',1,4)-1)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'')+364)';
              END IF;
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete req p_id='||p_id||';req='||req);
              EXECUTE IMMEDIATE req USING p_id;
              req:='';
            END IF;
          END IF;
          IF objtable.TABLETYPE ='AVPERS' THEN
            w_code_caisse      :='';
          ELSE
            w_code_caisse := GET_M3_COLONNE(w_table);
          END IF;
          IF w_type    ='m' THEN
            w_cle     := 'MATRIC';
          ELSIF w_type ='p' THEN
            w_cle     := 'PACMAT';
          ELSIF w_type ='z' THEN
            w_cle     := 'PAIEZAD';
          END IF;
          IF w_cle        = 'MATRIC' THEN
            w_colonne_30 := 'MATRICULE';
          ELSE
            w_colonne_30 := w_cle;
          END IF;
          IF objtable.TABLETYPE <> 'AVPERS' OR w_table ='DIC_ADM_CONTRAT' THEN
            FOR C IN cur_element(w_numpac)
            LOOP
              req                  :='';
              reqUdpateDate        :='';
              reqPropag            :='';
              w_type_colonne       := SUBSTR(c.typeelt,0,1);
              w_trace              := C.DONNEEGXP;
              IF clssreqPivotMerge IS NOT NULL THEN
                clssreqPivotMerge  :=clssreqPivotMerge||',';
              END IF;
              clssreqPivotMerge:=clssreqPivotMerge||' '''||C.DONNEEGXP||'''  as '||C.DONNEEGXP ;
              IF clupdateMerge IS NOT NULL THEN
                clupdateMerge  :=clupdateMerge||',';
              END IF;
              clupdateMerge       :=clupdateMerge||'T.'||C.DONNEEGXP||'='||GET_Statement (w_type_colonne,C.typeDICOZ ,C.DONNEEGXP) ;
              IF clinsertDonMerge IS NOT NULL THEN
                clinsertDonMerge  :=clinsertDonMerge||',';
              END IF;
              clinsertDonMerge    :=clinsertDonMerge||C.DONNEEGXP ;
              IF clinsertValMerge IS NOT NULL THEN
                clinsertValMerge  :=clinsertValMerge||',';
              END IF;
              clinsertValMerge:=clinsertValMerge||GET_Statement (w_type_colonne,C.typeDICOZ ,C.DONNEEGXP) ;
            END LOOP;
          END IF;
          -- TABLE Unique
          IF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE ='UNIQUE' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  UNIQUE ');
            req             := 'MERGE INTO '||w_table ||' T USING ';
            req             := req ||' (select tge.* from (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp  ,valeur  FROM TGE_IMPORT_FSED_30 TGE  where ID_TRT= ' ;
            req             := req ||':id AND tablegxp='''||w_table ||''' ';
            req             := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND  numpac='''||w_numpac||'''   ';
            IF w_type_retour ='RC' AND IS_VALID_COLUMN (w_table,'PACMAT') >0 THEN
              req           := req || ' AND PAIEZAD in (select PAIEZAD from dic_adm_contrat_situ a where numpac = tge.numpac and pacmat not in ';
              req           := req || ' (SELECT PACMAT FROM GAP_TRT_LISTE_MAT_HISTO G WHERE G.NUMPAC=a.NUMPAC AND G.PERIODE_PAIE = '''||w_moi_retour||''' AND TO_CHAR(G.DATE_COMP,''YYYYMM'')<= '''||w_moi_retour||'''))';
            END IF ;
            req                      := req|| reqChrono;
            req                      := req ||') pivot ( max(valeur) for donneegxp in ( '||clssreqPivotMerge;
            req                      := req ||')) )tge)  i';
            req                      := req ||' on ( T.numpac=i.numpac and T.'||w_colonne_30||'=i.'||w_cle;
            req                      := req ||') ';
            IF w_type_retour          ='RN' THEN
              req                    := req ||' when MATCHED THEN ';
              req                    := req ||' UPDATE  set '||clupdateMerge;
              req                  := req ||',DATE_DERNIERE_MODIF=sysdate ';
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',type_writer=''N'' ';
              END IF;
              req                      := req ||' when NOT MATCHED THEN INSERT (numpac,pacmat,MATRIC,DATE_CREATION,'||w_cle||',';
              IF w_cle                  ='PAIEZAD' THEN
                req                    := req || clinsertDonMerge;
                IF objtable.ALLERRETOUR ='2' THEN
                  req                  := req ||',type_writer';
                END IF;
                req := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD, ';
              ELSE
                req                    := req ||clinsertDonMerge;
                IF objtable.ALLERRETOUR ='2' THEN
                  req                  := req ||',type_writer';
                END IF;
                req := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.'||w_colonne_30||',';
              END IF;
              req                    := req || clinsertValMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',''N''';
              END IF;
              req := req ||')';
              --
            END IF;
            IF w_type_retour          ='RC' THEN
              req                    := req ||' when MATCHED THEN UPDATE  set '||clupdateMerge;
              req                  := req ||',DATE_DERNIERE_MODIF=sysdate ';
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',type_writer=''N''';
              END IF;
              req                      := req ||' when NOT MATCHED THEN INSERT (numpac,pacmat,MATRIC,DATE_CREATION,'||w_cle||',';
              IF w_cle                  ='PAIEZAD' THEN
                req                    := req || clinsertDonMerge;
                IF objtable.ALLERRETOUR ='2' THEN
                  req                  := req ||',type_writer';
                END IF;
                req := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD, ';
              ELSE
                req                    := req ||clinsertDonMerge;
                IF objtable.ALLERRETOUR ='2' THEN
                  req                  := req ||',type_writer';
                END IF;
                req := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.'||w_colonne_30||',';
              END IF;
              req                    := req || clinsertValMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',''N''';
              END IF;
              req := req ||')';
            END IF;
            
            --TABLE H2
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE = 'H2' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  H2 ');
            req                    := 'MERGE INTO '||w_table ||' T USING ';
            req                    := req ||' (select  TGE.*,';
            req                    := req ||'TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
            req                    := req ||'as '||w_date_eff||', ';
            req                    := req ||' numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
            req                    := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp  ,valeur from tge_import_FSED_30  WHERE  ID_TRT= ' ;
            req                    := req ||':id AND tablegxp='''||w_table ||''' ';
            req                    := req ||' AND ( numligne >=:ligne0 AND numligne <= :ligne99) and numpac='''||w_numpac||'''  ';
            req                    := req || reqChrono;
            req                    := req ||') pivot ( max(valeur) for donneegxp in (';
            req                    := req || clssreqPivotMerge;
            req                    := req ||')) )tge  ) i';
            req                    := req ||' on ( T.numpac=i.numpac and T.paiezad =i.paiezad AND T.'||w_date_eff||'=i.'||w_date_eff||') ';
            req                    := req ||' when NOT MATCHED THEN INSERT (numpac,pacmat,MATRIC,DATE_CREATION,paiezad,'||w_date_eff||','||clinsertDonMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',type_writer';
            END IF;
            req                    := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD,i.'||w_DATE_EFF||', ';
            req                    := req || clinsertValMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',''N''';
            END IF;
            req                    := req ||')';
            req                    := req ||' when MATCHED THEN ';
            req                    := req ||' UPDATE  set '||clupdateMerge;
            req                  := req ||',DATE_DERNIERE_MODIF=sysdate ';
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',type_writer=''N''';
            END IF;
            -- Si il y a une colonne dtFin, on met à jour la date
            SELECT COUNT(*)
            INTO hasDtfin
            FROM user_tab_columns
            WHERE table_name =w_table
            AND column_name  ='DTFIN';
            IF hasDtfin      >0 THEN
              -- table H2  forcer le DTFIN au dernier jour du mois
              reqUdpateDate   :=' update  '||w_table || ' a  set DTFIN= last_day('||w_date_eff||') ' ;
              reqUdpateDate   :=reqUdpateDate|| ' where  exists(select * FROM TGE_IMPORT_FSED_30 TGE  WHERE  ID_TRT= ' ;
              reqUdpateDate   := reqUdpateDate ||':id  AND tablegxp='''||w_table ||''' ';
              reqUdpateDate   := reqUdpateDate ||' AND ( numligne >=:ligne0 AND numligne <= :ligne99) ';
              IF w_colonne_30  = 'PACMAT' THEN
                reqUdpateDate := reqUdpateDate ||' and TGE.numpac=a.numpac and nvl(TGE.PACMAT,TGE.PAIEZAD) =a.'||w_colonne_30||'   ';
              ELSE
                reqUdpateDate := reqUdpateDate ||' and TGE.numpac=a.numpac and TGE.PAIEZAD =a.'||w_colonne_30||'   ';
              END IF;
              reqUdpateDate := reqUdpateDate ||') ';
            END IF;
            --TABLE AVPERS
          ELSIF objtable.TABLETYPE = 'AVPERS' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  AVPERS ');
            --calcul de la date fin
            IF w_table ='DIC_ADM_CONTRAT' THEN
              coldtfin:='DSFCN';
            ELSE
              coldtfin:='DATE_FIN';
            END IF;
            SELECT column_name BULK COLLECT
            INTO tab_colonne
            FROM user_tab_columns
            WHERE table_name = w_table
            AND column_name NOT LIKE '%IDPACMAT%'
            ORDER BY column_id;
            -- eliminer les doublons du merge des AVPERS
            IF w_table='DIC_ADM_CONTRAT_HISTO' THEN
              FOR K IN cur_element_histo(w_numpac)
              LOOP
                clinsertcols   :='';
                clinsertsel    :='';
                clinsertvalues :='';
                FOR indx IN tab_colonne.first .. tab_colonne.last
                LOOP
                  IF tab_colonne(indx) =w_date_eff THEN
                    IF clinsertsel    IS NULL THEN
                      clinsertsel     :='TO_DATE('''||w_moi_retour||'01'',''YYYYMMDD'') as '||w_date_eff;
                      clinsertcols    :=tab_colonne(indx);
                      clinsertvalues  :='I.'||tab_colonne(indx);
                    ELSE
                      clinsertsel    :=clinsertsel||',TO_DATE('''||w_moi_retour||'01'',''YYYYMMDD'') as '||w_date_eff;
                      clinsertcols   :=clinsertcols||','||tab_colonne(indx);
                      clinsertvalues :=clinsertvalues||','||'I.'||tab_colonne(indx);
                    END IF;
                  elsif objtable.ALLERRETOUR ='2' AND tab_colonne(indx)='TYPE_WRITER' THEN
                    IF clinsertsel          IS NULL THEN
                      clinsertsel           :='''N'' as type_writer';
                      clinsertcols          :=tab_colonne(indx);
                      clinsertvalues        :='''N''';
                    ELSE
                      clinsertsel    :=clinsertsel||',a.'||tab_colonne(indx);
                      clinsertcols   :=clinsertcols||','||tab_colonne(indx);
                      clinsertvalues :=clinsertvalues||',''N''';
                    END IF;
                  ELSE
                    IF clinsertsel   IS NULL THEN
                      clinsertsel    :='a.'||tab_colonne(indx);
                      clinsertcols   :=tab_colonne(indx);
                      clinsertvalues :='I.'||tab_colonne(indx);
                    ELSE
                      clinsertsel    :=clinsertsel||',a.'||tab_colonne(indx);
                      clinsertcols   :=clinsertcols||','||tab_colonne(indx);
                      clinsertvalues :=clinsertvalues||','||'I.'||tab_colonne(indx);
                    END IF;
                  END IF;
                END LOOP;
                -- construction de la requête de propagation
                --si la colonne des AVPERS est une date
                IF NVL(k.typeelt,'XyZ') ='DATE' THEN
                  donneesUpdatePropag  := donneesUpdatePropag || 'a.' || K.DONNEEGXP || '= decode (instr(tge.' || K.DONNEEGXP || ',''-''),0,TO_DATE(tge.' || K.DONNEEGXP || ',''YYYYMMDD''),TO_DATE(tge.' || K.DONNEEGXP || ',''yy-mm-dd'')) ,';
                ELSE
                  donneesUpdatePropag := donneesUpdatePropag || 'a.' || K.DONNEEGXP || '= tge.' || K.DONNEEGXP || ' ,';
                END IF;

                donneesSelectPropag := donneesSelectPropag || K.DONNEEGXP || ' ,';
                clssreqPivotMerge   := clssreqPivotMerge || '''' || K.DONNEEGXP || ''' AS '|| K.DONNEEGXP || ' ,';
              END LOOP;
            END IF ;
            IF w_table       ='DIC_ADM_CONTRAT_HISTO' THEN
              req           := 'INSERT INTO '||w_table ||'('||clinsertcols||') ';
              req           := req || ' WITH Cont AS(SELECT  MAX(DATE_EFF) AS mydate,numpac as numpac ,pacmat as pacmat FROM    DIC_ADM_CONTRAT_HISTO WHERE '||w_date_eff||' <TO_DATE('||w_moi_retour||'01,''YYYYMMDD'')  GROUP BY numpac,pacmat)';
              req           := req || ' SELECT /*+ LEADING(@"SEL$C19C7BAF" "TGE"@"SEL$3" "A"@"SEL$2" "TGE_FSED_30_TEMPORARY"@"SEL$6" "CONT"@"SEL$2" "D"@"SEL$5")*/'||clinsertsel||' FROM '||w_table ||'  a , cont WHERE EXISTS(SELECT 1 FROM TGE_IMPORT_FSED_30 TGE WHERE ';
              req           := req || ' ID_TRT = ' ;
              req           := req ||':id AND ( numligne >=:ligne00 AND numligne <= :ligne99) ';
              IF w_colonne_30= 'PACMAT' THEN
                req         := req ||' and TGE.numpac=a.numpac and nvl(TGE.PACMAT,TGE.PAIEZAD) =a.'||w_colonne_30||'  AND TGE.tablegxp    = ''DIC_ADM_CONTRAT_HISTO'')      ';
              ELSE
                req := req ||' and TGE.numpac=a.numpac and TGE.PAIEZAD =a.'||w_colonne_30||'  AND TGE.tablegxp    = ''DIC_ADM_CONTRAT_HISTO'')       ';
              END IF;
              req := req ||' AND A.DATE_EFF =Cont.mydate AND A.NUMPAC =Cont.NUMPAC AND A.PACMAT =Cont.PACMAT';
              --Ajout du contrôle sur la date de fin de contrat pour ne pas générer de nouvelles dates d'effets si celle ci est supérieur à la date de fin .
              req := req ||' AND TO_DATE('''||w_moi_retour||'01'',''YYYYMMDD'') < ( select NVL(DSFCN,to_date(''20991231'',''YYYYMMDD'')) from DIC_ADM_CONTRAT where NUMPAC=a.numpac and  PACMAT=a.PACMAT and  NUMCNT=a.NUMCNT )';
              req := req ||' and not exists (select 1 from  '||w_table || ' d where d.numpac=a.numpac and d.'||w_colonne_30||' =a.'||w_colonne_30||' and d.'||w_date_eff||'=TO_DATE('||w_moi_retour||'01,''YYYYMMDD'') ) ';
              req := req ||' and exists (select 1 from  TGE_FSED_30_TEMPORARY where id_trt ='||p_id||' AND numpac = a.numpac and '||w_colonne_30||' =a.'||w_colonne_30||' and TOUPDATE=''O'' ) ';
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Insert DACH='||substr(req,0,3800) );
              EXECUTE IMMEDIATE req USING p_id,
              tab_numLigne00(i),
              tab_numLigne99(i);
              IF donneesUpdatePropag IS NOT NULL THEN
                donneesUpdatePropag  := SUBSTR(donneesUpdatePropag, 0, LENGTH(donneesUpdatePropag) - 1); -- enlever la virgule de trop à la fin
              END IF;
              IF donneesSelectPropag IS NOT NULL THEN
                donneesSelectPropag  := SUBSTR(donneesSelectPropag, 0, LENGTH(donneesSelectPropag) - 1); -- enlever la virgule de trop à la fin
              END IF;
              IF clssreqPivotMerge IS NOT NULL THEN
                clssreqPivotMerge  := SUBSTR(clssreqPivotMerge, 0, LENGTH(clssreqPivotMerge) - 1); -- enlever la virgule de trop à la fin
              END IF;
            END IF;
            IF w_table        ='DIC_ADM_CONTRAT_HISTO' THEN
              reqPropag      := 'merge  into ' || w_table || ' a using (SELECT  * from (SELECT * FROM (SELECT id_trt, numpac, paiezad, pacmat, donneegxp, valeur';
              reqPropag      := reqPropag || ' FROM TGE_IMPORT_FSED_30 TGE WHERE ID_TRT =';
              reqPropag      := reqPropag || ' :id AND tablegxp = ''' || w_table ||'''';
              reqPropag      := reqPropag || ' AND (numligne >= :ligne0 AND numligne <= :ligne99)  AND (numpac,pacmat,paiezad) in (select numpac, pacmat, paiezad from TGE_FSED_30_TEMPORARY where id_trt='''||p_id||''' and toupdate=''O'')';
              reqPropag      := reqPropag || reqChrono;
              reqPropag      := reqPropag || ') PIVOT(MAX(valeur) FOR DONNEEGXP IN (' || clssreqPivotMerge || ')) ) ) tge  on (';
              reqPropag      := reqPropag || '  TGE.numpac = a.numpac';
              IF w_colonne_30 = 'PACMAT' THEN
                reqPropag    := reqPropag || ' AND NVL(TGE.PACMAT, TGE.PAIEZAD) = a.' || w_colonne_30;
              ELSE
                reqPropag := reqPropag || ' AND TGE.PAIEZAD = a.' || w_colonne_30 ;
              END IF;
              reqPropag              := reqPropag || ' and ' || w_date_eff || ' >= TO_DATE(''' || w_moi_retour || '01'',''YYYYMMDD'') and  ' || w_date_eff || '< ADD_MONTHS(TO_DATE(''' || w_moi_retour || '01'',''YYYYMMDD''), 1) ) when matched then update set ';
              IF objtable.ALLERRETOUR = '2' THEN
                reqPropag            := reqPropag || ' a.type_writer = ''N'', ';
              END IF;
              reqPropag := reqPropag ||''|| donneesUpdatePropag ;
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Merge DACH='||substr(reqPropag,0,3800) );
              -- lancer la requete de propagation avec pivot
              EXECUTE IMMEDIATE reqPropag USING p_id,
              tab_numLigne00(i),
              tab_numLigne99(i);

            END IF;
            IF w_table                ='DIC_ADM_CONTRAT' AND clssreqPivotMerge IS NOT NULL THEN
              req                    := 'MERGE INTO '||w_table ||' T USING ';
              req                    := req ||'(select TGE.*';
              req                    := req ||',numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
              req                    := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat, donneegxp,indicatif,valeur from tge_import_FSED_30  where ID_TRT= ' ;
              req                    := req ||':id  AND tablegxp='''||w_table ||''' ';
              req                    := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||'''  ';
              req                    := req || reqChrono;
              req                    := req ||' ) pivot(max(valeur) for donneegxp in ('||clssreqPivotMerge;
              req                    := req ||')) )tge)  i';
              req                    := req ||' on ( T.numpac=i.numpac and T.paiezad =i.paiezad and (';
              req                    := req||'(T.DSDCN<= TO_DATE('''||w_moi_retour||''', ''YYYYMM'')  and T.DSFCN is not null and T.DSFCN between TO_DATE('''||w_moi_retour||''', ''YYYYMM'') and last_day(to_date('''||w_moi_retour||''',''YYYYMM'')))';
              req                    := req||' OR(T.DSDCN between TO_DATE('''||w_moi_retour||''', ''YYYYMM'') and last_day(to_date('''||w_moi_retour||''',''YYYYMM''))AND NVL(T.DSFCN,to_date(''20991231'',''YYYYMMDD''))>= last_day(to_date('''||w_moi_retour||''',''YYYYMM'')))';
              req                    := req||' OR (T.DSDCN <=last_day(to_date('''||w_moi_retour||''',''YYYYMM''))AND  T.DSFCN IS  NULL)';
              req                    := req||') ';
              req                    := req ||') ';
              req                    := req ||' when MATCHED THEN UPDATE  set ' ;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||'type_writer=''N'', ';
              END IF;
              req := req ||clupdateMerge;
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 DAC='||substr(req,0,3800) );
              EXECUTE IMMEDIATE req USING p_id,
              tab_numLigne00(i),
              tab_numLigne99(i);
              --Mise à jour de la donnée dans secupacmat
              FOR C IN cur_secupacmat(w_numpac)
              LOOP
                req                :='';
                w_type_colonne     := SUBSTR(c.typeelt,0,1);
                IF clssreqPivotSec IS NOT NULL THEN
                  clssreqPivotSec  :=clssreqPivotSec||',';
                END IF;
                clssreqPivotSec:=clssreqPivotSec||' '''||C.DONNEEGXP||'''  as '||C.DONNEEGXP ;
                IF clupdSecu   IS NOT NULL THEN
                  clupdSecu    :=clupdSecu||',';
                END IF;
                clupdSecu          :=clupdSecu||'T.'||C.DONNEEGXP||'='||GET_Statement (w_type_colonne,C.typeDICOZ ,C.DONNEEGXP) ;
                IF clinsertDonSecu IS NOT NULL THEN
                  clinsertDonSecu  :=clinsertDonSecu||',';
                END IF;
                clinsertDonSecu    :=clinsertDonSecu||C.DONNEEGXP ;
                IF clinsertValSecu IS NOT NULL THEN
                  clinsertValSecu  :=clinsertValSecu||',';
                END IF;
                clinsertValSecu:=clinsertValSecu||GET_Statement (w_type_colonne,C.typeDICOZ ,C.DONNEEGXP) ;
              END LOOP;
              IF clssreqPivotSec IS NOT NULL THEN
                req              := 'MERGE INTO SECUPACMAT T USING ';
                req              := req ||'(select TGE.*';
                req              := req ||',numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
                req              := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat, donneegxp,indicatif  ,valeur from tge_import_FSED_30  where ID_TRT= ' ;
                req              := req ||':id  AND tablegxp='''||w_table ||''' ';
                req              := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||'''  ';
                req              := req || reqChrono;
                req              := req ||' ) pivot(max(valeur) for donneegxp in ('||clssreqPivotSec;
                req              := req ||')) )tge)  i';
                req              := req ||' on ( T.numpac=i.numpac and T.pacmat =i.pacmat and (';
                req              := req||'(to_date(T.DSDCN,''YYYYMMDD'')<= TO_DATE('''||w_moi_retour||''', ''YYYYMM'')  and T.DSFCN is not null and TO_DATE(T.DSFCN,''YYYYMMDD'') between TO_DATE('''||w_moi_retour||''', ''YYYYMM'') and last_day(to_date('''||w_moi_retour||''',''YYYYMM'')))';
                req              := req||' OR(to_date(T.DSDCN,''YYYYMMDD'') between TO_DATE('''||w_moi_retour||''', ''YYYYMM'') and last_day(to_date('''||w_moi_retour||''',''YYYYMM''))AND NVL(TO_DATE(T.DSFCN,''YYYYMMDD''),to_date(''20991231'',''YYYYMMDD''))>= last_day(to_date('''||w_moi_retour||''',''YYYYMM'')))';
                req              := req||' OR (to_date(T.DSDCN,''YYYYMMDD'') <=last_day(to_date('''||w_moi_retour||''',''YYYYMM''))AND  T.DSFCN IS  NULL)';
                req              := req||') ';
                req              := req ||') ';
                req              := req ||' when MATCHED THEN UPDATE  set ' ;
                req              := req ||clupdSecu;
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 SECUPACMAT='|| substr(req,0,3600));
                EXECUTE IMMEDIATE req USING p_id,
                tab_numLigne00(i),
                tab_numLigne99(i);
              END IF;
            END IF;
            -- lancer la requete trace
            reqTrace := REPLACE('INSERT INTO SYS_TRC_MODIF 
SELECT DISTINCT ''RETOUR_PAIE'', 
CURRENT_TIMESTAMP, 
3, 
''Retour de paie type AVPERS'', 
''numpac='' || tge.numpac || ''&' || w_colonne_30 || '='' || nvl(tge.' || w_colonne_30 || ',tge.paiezad) || ''&PERIODEPAIE='' || TO_DATE(''' || w_moi_retour || '01'', ''YYYYMMDD'') || ''&ELEMENT='' || tge.code_element || ''&VALEUR='' || tge.valeur, 
''Retour de paie'', 
''M'', 
null, 
null, 
null, 
null ,
tge.numpac,
tge.pacmat,
tge.PAIEZAD,
tge.MATRICULE,
tge.DATE_EFFET 
FROM TGE_IMPORT_FSED_30 TGE 

WHERE ID_TRT = :id AND tablegxp='''||w_table ||'''  AND ( numligne >=:ligne0 AND numligne <= :ligne99) and TGE.numpac=a.numpac', 'a.', 'TGE.' );
            FSED_AVANCEMENT(p_id,' SYS_TRC_MODIF= '|| substr(reqTrace,0,3600));
            EXECUTE IMMEDIATE reqTrace USING p_id,
            tab_numLigne00(i),
            tab_numLigne99(i);
            reqTrace :=null;
            -- Table M7
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE ='M7' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  M7 ');
           req                    := 'MERGE INTO ' || w_table ||' t USING ' ||
              '(SELECT * FROM ' || 
              '(SELECT ID_TRT, ' || 
              'NUMPAC, ' || 
              'PAIEZAD, ' || 
              'PACMAT, ' || 
              'MATRICULE, ' || 
              'DONNEEGXP, ' || 
              'VALEUR, ' || 
              'TO_DATE(SUBSTR(INDICATIF, 1, 6) || ''01'', ''YYYYMMDD'') AS ' || w_date_eff || ', ' || 
              'NUMPAC || NVL(PACMAT, PAIEZAD) AS IDPACMAT ' || 
              'FROM TGE_IMPORT_FSED_30 ' || 
              'WHERE ID_TRT = :id  AND TABLEGXP = ''' || w_table ||''' AND (NUMLIGNE >= :ligne0 AND NUMLIGNE <= :ligne99) AND NUMPAC = ''' || w_numpac || '''' || 
              ') PIVOT(MAX(VALEUR) FOR DONNEEGXP IN (' || clssreqPivotMerge || '))' || 
              ') i ' || 
              'ON (t.NUMPAC = i.NUMPAC AND t.PAIEZAD = i.PAIEZAD AND t.' || w_date_eff || ' = i.' || w_date_eff || ') ' || 
              'WHEN MATCHED THEN ';
            req                    := req || 'UPDATE SET ' ;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||'type_writer=''N'', ';
            END IF;
            req                    := req ||clupdateMerge;
            req                    := req ||',DATE_DERNIERE_MODIF=sysdate ';
            req                    := req ||' when NOT MATCHED THEN ';
            req                    := req ||' INSERT (numpac,pacmat,MATRIC,DATE_CREATION,paiezad,'||w_date_eff||','||clinsertDonMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',type_writer';
            END IF;
            req                    := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD,i.'||w_DATE_EFF||', ';
            req                    := req || clinsertValMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',''N''';
            END IF;
            req := req ||' )';
            ---TABLE M1
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE ='M1' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  M1 ');
            IF w_type_retour ='RC' THEN
              reqRc         := 'select min ('||w_date_eff||') from '||w_table ||' WHERE numpac =:numpac and paiezad in (select distinct paiezad from TGE_IMPORT_FSED_30 where id_trt = :id )';
              EXECUTE immediate reqRC INTO w_date_RC USING w_numpac,
              p_id;
            END IF ;
            req                    := 'MERGE INTO '||w_table ||' T USING ';
            req                    := req ||'(select tge.*, ';
            req                    := req ||'TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
            req                    := req ||'as '||w_date_eff||', ';
            req                    := req ||'numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
            req                    := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp  ,valeur from tge_import_FSED_30  where ID_TRT= ' ;
            req                    := req ||':id  AND tablegxp='''||w_table ||''' ';
            req                    := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||''' ';
            req                    := req || reqChrono;
            req                    := req ||') pivot(max(valeur) for donneegxp in ('||clssreqPivotMerge;
            req                    := req ||')) )tge)  i';
            req                    := req ||' on ( T.numpac=i.numpac and T.paiezad =i.paiezad AND T.'||w_date_eff||'=i.'||w_date_eff||') ';
            req                    := req ||' when MATCHED THEN ' ;
            req                    := req ||' UPDATE  set ' ;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||'type_writer=''N'', ';
            END IF;
            req                      := req ||clupdateMerge;
            req                      := req ||',DATE_DERNIERE_MODIF=sysdate ';
            IF w_type_retour          ='RN' OR (w_type_retour ='RC' AND (w_date_RC < TO_DATE(w_moi_retour||'01','YYYYMMDD'))OR w_date_RC is null) THEN
              req                    := req ||' when NOT MATCHED THEN ' ;
              req                    := req ||' INSERT (numpac,pacmat,MATRIC,DATE_CREATION,paiezad,'||w_date_eff||','||clinsertDonMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',type_writer';
              END IF;
              req                    := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD,i.'||w_DATE_EFF||', ';
              req                    := req ||clinsertValMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',''N''';
              END IF;
              req := req ||')';
            END IF ;
            ---TABLE M9
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE ='M9' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  M9 ');
            IF w_type_retour ='RC' THEN
              reqRc         := 'select min ('||w_date_eff||') from '||w_table ||' WHERE numpac =:numpac and paiezad in (select distinct paiezad from TGE_IMPORT_FSED_30 where id_trt = :id )';
              EXECUTE immediate reqRC INTO w_date_RC USING w_numpac,
              p_id;
            END IF;
            req                    := 'MERGE INTO '||w_table ||' T USING ';
            req                    := req ||'(select tge.*';
            req                    := req ||', TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
            req                    := req ||'as '||w_date_eff;
            req                    := req ||', numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
            req                    := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp  ,valeur from tge_import_FSED_30 where ID_TRT= ' ;
            req                    := req ||':id  AND tablegxp='''||w_table ||''' ';
            req                    := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||''' ';
            req                    := req || reqChrono;
            req                    := req ||') pivot(max(valeur) for donneegxp in ('||clssreqPivotMerge;
            req                    := req ||')) )tge)  i';
            req                    := req ||' on ( T.numpac=i.numpac and T.paiezad =i.paiezad AND T.'||w_date_eff||'=i.'||w_date_eff||') ';
            req                    := req ||' when MATCHED THEN ' ;
            req                    := req ||' UPDATE  set ' ;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||'type_writer=''N'', ';
            END IF;
            req                      := req ||clupdateMerge;
            req                      := req ||',DATE_DERNIERE_MODIF=sysdate ';
            IF w_type_retour          ='RN' OR (w_type_retour ='RC' AND ( w_date_RC < TO_DATE(w_moi_retour||'01','YYYYMMDD'))OR w_date_RC IS NULL) THEN
              req                    := req ||' when NOT MATCHED THEN ' ;
              req                    := req ||' INSERT (numpac,pacmat,MATRIC,DATE_CREATION,paiezad,'||w_date_eff||','||clinsertDonMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',type_writer';
              END IF;
              req                    := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD,i.'||w_DATE_EFF||', ';
              req                    := req || clinsertValMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',''N''';
              END IF;
              req := req ||')';
            END IF;
            ---Table M3ANNEE
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE ='M3ANNEE' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  M3ANNEE ');
            IF w_type_retour ='RC' THEN
              reqRc         := 'select min ('||w_date_eff||') from '||w_table ||' WHERE numpac =:numpac and paiezad in (select distinct paiezad from TGE_IMPORT_FSED_30 where id_trt = :id )';
              EXECUTE immediate reqRC INTO w_date_RC USING w_numpac,
              p_id;
            END IF;
            req                    := 'MERGE INTO '||w_table ||' T USING ';
            req                    := req ||'(select tge.*, ';
            req                    := req ||'TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
            req                    := req ||'as '||w_date_eff||', ';
            req                    := req ||'NVL(substr(indicatif,1,3),0) as '||w_code_caisse||',';
            req                    := req ||'numpac||nvl(tge.pacmat,'||w_colonne_30||')as idPACMAT';
            req                    := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp, indicatif  ,valeur from tge_import_FSED_30  where ID_TRT= ' ;
            req                    := req ||':id  AND tablegxp='''||w_table ||''' ';
            req                    := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||''' ';
            req                    := req || reqChrono;
            req                    := req ||') pivot(max(valeur) for donneegxp in ('||clssreqPivotMerge;
            req                    := req ||')) )tge)  i';
            req                    := req ||' on ( T.numpac=i.numpac and T.paiezad =i.paiezad AND T.'||w_code_caisse||'=i.'||w_code_caisse||' AND i.'||w_date_eff||'= T.'||w_date_eff||') ';
            req                    := req ||' when MATCHED THEN ' ;
            req                    := req ||' UPDATE  set ' ;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||'type_writer=''N'', ';
            END IF;
            req                      := req ||clupdateMerge;
            req                      := req ||',DATE_DERNIERE_MODIF=sysdate ';
            IF w_type_retour          ='RN' OR (w_type_retour ='RC' AND (w_date_RC < TO_DATE(w_moi_retour||'01','YYYYMMDD'))OR w_date_RC is null ) THEN
              req                    := req ||' when NOT MATCHED THEN ' ;
              req                    := req ||' INSERT (numpac,pacmat,MATRIC,DATE_CREATION,paiezad,'||w_date_eff||','||w_code_caisse||','||clinsertDonMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',type_writer';
              END IF;
              req                    := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD,i.'||w_DATE_EFF||',i.'||w_code_caisse||', ';
              req                    := req || clinsertValMerge;
              IF objtable.ALLERRETOUR ='2' THEN
                req                  := req ||',''N''';
              END IF;
              req := req ||')';
            END IF;
            ---Table M3MOIS
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE ='M3MOIS' THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  M3MOIS ');
            req                    := 'MERGE INTO '||w_table ||' T USING ';
            req                    := req ||'(select tge.*,';
            req                    := req ||'TO_DATE(replace ('||w_moi_retour||',SUBSTR('||w_moi_retour||',5,2),substr(indicatif,1,2))'||'||''01'''||',''YYYYMMDD'')';
            req                    := req ||'as '||w_date_eff;
            req                    := req ||',substr(indicatif,4,3) as '||w_code_caisse||',';
            req                    := req ||'numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
            req                    := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp,indicatif  ,valeur from tge_import_FSED_30  where ID_TRT= ' ;
            req                    := req ||':id  AND tablegxp='''||w_table ||''' ';
            req                    := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||''' ';
            req                    := req || reqChrono;
            req                    := req ||' ) pivot(max(valeur) for donneegxp in ('||clssreqPivotMerge;
            req                    := req ||')) )tge )  i';
            req                    := req ||' on ( T.numpac=i.numpac and T.paiezad =i.paiezad AND T.'||w_code_caisse||'=i.'||w_code_caisse||' AND i.'||w_date_eff||'= T.'||w_date_eff||') ';
            req                    := req ||' when MATCHED THEN ' ;
            req                    := req ||' UPDATE  set ';
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||'type_writer=''N'',';
            END IF;
            req                    := req ||clupdateMerge;
            req                    := req ||',DATE_DERNIERE_MODIF=sysdate ';
            req                    := req ||' when NOT MATCHED THEN ' ;
            req                    := req ||' INSERT (numpac,pacmat,MATRIC,DATE_CREATION,paiezad,'||w_date_eff||','||w_code_caisse||','||clinsertDonMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',type_writer';
            END IF;
            req                    := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,i.PAIEZAD,i.'||w_DATE_EFF||',i.'||w_code_caisse||', ';
            req                    := req || clinsertValMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',''N''';
            END IF;
            req := req ||')';
            ---Tables MULTIPLE et OCCURS
          ELSIF clssreqPivotMerge IS NOT NULL AND objtable.TABLETYPE IN ('MULTIPLE','OCCURS') THEN
            FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Début  '||objtable.TABLETYPE);
            req              := 'MERGE INTO '||w_table ||' T USING ';
            req              := req ||'(select TGE.*';
            IF w_code_caisse IS NOT NULL THEN
              req            := req ||',substr(indicatif,1,3) as '||w_code_caisse;
            END IF ;
            req := req ||',numpac||nvl(tge.pacmat,'||w_colonne_30||') as idPACMAT';
            IF p_table IN ('DIC_TGE_PRETS','DIC_TGE_OPPOSITIONS') THEN 
            req := req ||' FROM (select * from (select id_trt,numpac,pacmat,MATRICULE, donneegxp,indicatif  ,valeur from tge_import_FSED_30  where ID_TRT= ' ;
            ELSE
            req := req ||' FROM (select * from (select id_trt,numpac, paiezad,pacmat,MATRICULE, donneegxp,indicatif  ,valeur from tge_import_FSED_30  where ID_TRT= ' ;
            END IF;
            req := req ||':id  AND tablegxp='''||w_table ||''' ';
            req := req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99) AND numpac='''||w_numpac||'''  ';
            req := req || reqChrono;
            req := req ||' ) pivot(max(valeur) for donneegxp in ('||clssreqPivotMerge;
            req := req ||')) )tge)  i';
            req := req ||' on ( T.numpac=i.numpac ';
            IF w_table NOT IN ('DIC_TGE_PRETS','DIC_TGE_OPPOSITIONS') THEN
              req := req ||' and T.paiezad =i.paiezad ';
            ELSE
              req := req ||' and T.pacmat =i.pacmat ';
            END IF;
            req             := req ||'  and i.'||w_code_caisse||'=t.'||w_code_caisse;
            IF w_type_retour ='RC' THEN
              req           := req ||' AND T.PACMAT NOT IN (SELECT PACMAT FROM GAP_TRT_LISTE_MAT_HISTO G WHERE G.NUMPAC=T.NUMPAC AND G.PERIODE_PAIE = '''||w_moi_retour||''' AND SUBSTR(TO_CHAR(G.DATE_RESP,''YYYYMMDD''),5,2)<= '||SUBSTR(w_moi_retour,5,2)||')';
            END IF;
            req                    := req ||') ';
            req                    := req ||' when MATCHED THEN UPDATE  set ' ;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||'type_writer=''N'', ';
            END IF;
            req := req ||clupdateMerge;
            req := req ||',DATE_DERNIERE_MODIF=sysdate ';
            req := req ||' when NOT MATCHED THEN INSERT (numpac,pacmat,MATRIC,DATE_CREATION,';
            IF w_table NOT IN ('DIC_TGE_PRETS','DIC_TGE_OPPOSITIONS') THEN
              req := req ||' PAIEZAD,';
            END IF;
            IF w_code_caisse IS NOT NULL THEN
              req            := req ||w_code_caisse||',';
            END IF ;
            req                    := req ||clinsertDonMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',type_writer';
            END IF;
            req := req ||') VALUES (i.numpac,i.pacmat,i.MATRICULE,sysdate,';
            IF w_table NOT IN ('DIC_TGE_PRETS','DIC_TGE_OPPOSITIONS') THEN
              req := req ||'  i.PAIEZAD,';
            END IF;
            IF w_code_caisse IS NOT NULL THEN
              req            := req ||'i.'||w_code_caisse||',';
            END IF ;
            req                    := req || clinsertValMerge;
            IF objtable.ALLERRETOUR ='2' THEN
              req                  := req ||',''N''';
            END IF;
            req := req ||')';
          END IF;
          IF req IS NOT NULL THEN
            w_00 :=tab_numLigne00(i);
            w_99 :=tab_numLigne99(i);
            IF objtable.TABLETYPE IN('H2','M7') THEN
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';Ligne00='||tab_numLigne00(i)||';Ligne99='||tab_numLigne99(i)||'='|| substr(req,0,3600));
              EXECUTE IMMEDIATE req USING p_id,
              tab_numLigne00(i),
              tab_numLigne99(i);
              IF reqUdpateDate IS NOT NULL THEN
                FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';Ligne00='||tab_numLigne00(i)||';Ligne99='||tab_numLigne99(i)||'='|| substr(reqUdpateDate,0,3600));
                EXECUTE IMMEDIATE reqUdpateDate USING p_id,
                tab_numLigne00(i),
                tab_numLigne99(i);
              END IF;
            elsiF objtable.TABLETYPE IN('M1','M3ANNEE') THEN
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';Ligne00='||tab_numLigne00(i)||';Ligne99='||tab_numLigne99(i)||'='|| substr(req,0,3600));
              EXECUTE IMMEDIATE req USING p_id,
              tab_numLigne00(i),
              tab_numLigne99(i);
            ELSiF objtable.TABLETYPE <> 'AVPERS' THEN
              FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 p_id='||p_id||';Ligne00='||tab_numLigne00(i)||';Ligne99='||tab_numLigne99(i)||'='|| substr(req,0,3600));
              EXECUTE IMMEDIATE req USING p_id,
              tab_numLigne00(i),
              tab_numLigne99(i) ;
            END IF;
            IF w_table = 'DIC_TGE_RESPAIE_UNIQUE' THEN
              R_PRESENT_FICHIER_PAIE( w_numpac , null );
            END IF;
          END IF;
        END IF;
      END IF;
    END IF;
    IF objtable.TABLETYPE ='AVPERS' AND w_table ='DIC_ADM_CONTRAT_HISTO' THEN
      -- insertion dans SECUPACMAT_TMP_CONTRAT
      INSERT
      INTO SECUPACMAT_TMP_CONTRAT
        (
          numpac,
          pacmat
        )
      SELECT DISTINCT numpac,
        NVL(pacmat,paiezad)
      FROM TGE_IMPORT_FSED_30
      WHERE ID_TRT=p_id
      AND numligne BETWEEN tab_numLigne00(i) AND tab_numLigne99(i)
      AND tablegxp=w_table ;
      -- lancement de la procédure ALIM_IDX_CH_RETOUR_PAIE
      ALIM_IDX_CH_RETOUR_PAIE();
      --suppression des matricules de la table SECUPACMAT_TMP_CONTRAT
       EXECUTE_IMMEDIATE_STRING ( 'truncate table SECUPACMAT_TMP_CONTRAT',0);
    END IF;
  END LOOP;
  FOR trig IN
  (SELECT object_name
  FROM user_objects
  WHERE lower(object_type)='trigger'
  AND lower(object_name) LIKE '%'
    ||lower(w_table)
    ||'%'
  AND (lower(object_name) LIKE 'horo%' )
  )
  LOOP
     EXECUTE_IMMEDIATE_STRING  ('ALTER TRIGGER ' || trig.object_name ||' enable ',0);
  END LOOP;
  --Mise à jour des indicateurs de production pour la période traité dans le retour de paie te pour chaque salarié traité.
  req             := 'update GAP_TRT_LISTE_MAT_HISTO ';
  IF w_type_retour ='RN' THEN
    w_date_indic  := to_date(sysdate);
    req           := req ||'set DATE_RESP = :date_effet ';
  END IF;
  IF w_type_retour ='RC' THEN
    SELECT MAX(date_COMP)
    INTO w_date_comp
    FROM GAP_TRT_LISTE_MAT_HISTO
    WHERE numpac     = w_numpac
    AND periode_paie = w_moi_retour
    AND pacmat      IN
      (SELECT DISTINCT pacmat
      --DIT 50818 
      FROM DIC_ADM_CONTRAT_SITU
      WHERE numpac = w_numpac
      AND paiezad IN
        (SELECT DISTINCT paiezad FROM TGE_IMPORT_FSED_30 WHERE id_trt = p_id
        )
      );
    IF w_date_comp  <to_date(sysdate) THEN
      w_date_indic := w_date_comp;
    ELSE
      w_date_indic := to_date(sysdate);
    END IF;
    req:= req ||'set DATE_COMP = :date_effet ';
  END IF ;
  req:= req || ' where NUMPAC = :numpac  and   PERIODE_PAIE = :periode ';
  req:= req || ' and pacmat in (select distinct pacmat from DIC_ADM_CONTRAT_SITU where numpac = : numpac and paiezad in (select distinct paiezad from TGE_IMPORT_FSED_30 where id_trt = :trt) )';
  EXECUTE IMMEDIATE req USING w_date_indic,
  w_numpac,
  w_moi_retour,
  w_numpac,
  p_id;
  --RSI : En cas de RC, il faut regarder si elle est plus vieille que le mois du retour complémentaire.
  IF w_type_retour ='RC' THEN
  --DEBUT M3ANNEE
    IF objtable.TABLETYPE ='M3ANNEE' THEN
      IF tabW580_h.exists(1) THEN
        FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC '||objtable.TABLETYPE );
        FOR i IN tabW580_h.first..tabW580_h.last
        LOOP
          IF SUBSTR(w_moi_retour,5,2)>=tabW580_h(i).donnee_W580_h THEN
            req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
            req                      := req ||' AND '||w_date_eff||' between TO_DATE(';
            req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||';
            req                      := req ||' NVL('''||tabW580_h(i).donnee_W580_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
            req                      := req ||' AND TO_DATE(';
            req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||';
            req                      := req ||' NVL('''||tabW580_h(i).donnee_W580_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364';
            req                      := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
          ELSE
            req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad) ';
            req := req ||' AND '||w_date_eff||' between TO_DATE(';
            req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
            req := req ||' NVL('''||tabW580_h(i).donnee_W580_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
            req := req ||' AND TO_DATE(';
            req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
            req := req ||' NVL('''||tabW580_h(i).donnee_W580_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364';
            req := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
          END IF;
          FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC req='||substr(req,0,3700));
          EXECUTE IMMEDIATE req USING p_id;
        END LOOP;
      ELSE
        IF SUBSTR(w_moi_retour,5,2)>=objtable.MOISZERO THEN
          req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
          req                      := req ||' AND '||w_date_eff||' between TO_DATE(';
          req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
          req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
          req                      := req ||' AND TO_DATE(';
          req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
          req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')+364';
          req                      := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
        ELSE
          req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
          req := req ||' AND '||w_date_eff||' between TO_DATE(';
          req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||''';
          req := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
          req := req ||' AND TO_DATE(';
          req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
          req := req ||objtable.MOISZERO||'||''01'''||',''YYYYMMDD'')+364';
          req := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
        END IF ;
        FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC req='||substr(req,0,3700));
        EXECUTE IMMEDIATE req USING p_id;
        req:='';
      END IF;
    END IF;
  -- Fin M3ANNEE
  --DEBUT M1
  IF objtable.TABLETYPE = 'M1' THEN
      IF tabWL52_h.exists(1) THEN
        FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC '||objtable.TABLETYPE );
        FOR i IN tabWL52_h.first..tabWL52_h.last
        LOOP
          IF SUBSTR(w_moi_retour,5,2)>=tabWL52_h(i).donnee_WL52_h THEN
            req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
            req                      := req ||' AND '||w_date_eff||' between TO_DATE(';
            req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||';
            req                      := req ||' NVL('''||tabWL52_h(i).donnee_WL52_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
            req                      := req ||' AND TO_DATE(';
            req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||';
            req                      := req ||' NVL('''||tabWL52_h(i).donnee_WL52_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364';
            req                      := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
          ELSE
            req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad) ';
            req := req ||' AND '||w_date_eff||' between TO_DATE(';
            req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
            req := req ||' NVL('''||tabWL52_h(i).donnee_WL52_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')';
            req := req ||' AND TO_DATE(';
            req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
            req := req ||' NVL('''||tabWL52_h(i).donnee_WL52_h||''','''||objtable.MOISZERO||''')'||'||''01'''||',''YYYYMMDD'')+364';
            req := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
          END IF;
          FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC req='||substr(req,0,3700));
          EXECUTE IMMEDIATE req USING p_id;
        END LOOP;
      ELSE
        IF SUBSTR(w_moi_retour,5,2)>=objtable.MOISZERO THEN
          req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
          req                      := req ||' AND '||w_date_eff||' between TO_DATE(';
          req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
          req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
          req                      := req ||' AND TO_DATE(';
          req                      := req ||' SUBSTR('||w_moi_retour||',1,4)||''';
          req                      := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')+364';
          req                      := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
        ELSE
          req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) ';
          req := req ||' AND '||w_date_eff||' between TO_DATE(';
          req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||''';
          req := req ||objtable.MOISZERO||'''||''01'''||',''YYYYMMDD'')';
          req := req ||' AND TO_DATE(';
          req := req ||' (SUBSTR('||w_moi_retour||',1,4)-1)||';
          req := req ||objtable.MOISZERO||'||''01'''||',''YYYYMMDD'')+364';
          req := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
        END IF ;
        FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC req='||substr(req,0,3700));
        EXECUTE IMMEDIATE req USING p_id;
        req:='';
      END IF;
    END IF;
  --FIN M1
  
    IF objtable.TABLETYPE ='M9' THEN
      FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC M9');
      IF SUBSTR(w_moi_retour,5,2)>=objtable.MOISZERO THEN
        req                      := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) AND '||w_date_eff||' between TO_DATE(SUBSTR('||w_moi_retour||',1,4)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'') and (TO_DATE(SUBSTR('||w_moi_retour||',1,4)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'')+364) ';
      ELSE
        req := ' delete from  '||w_table ||' T where numpac ='''||w_numpac||''' AND  EXISTS (select 1 from TGE_IMPORT_FSED_30 where id_trt = :id and TGE_IMPORT_FSED_30.paiezad=T.paiezad ) AND '||w_date_eff||' between TO_DATE((SUBSTR('||w_moi_retour||',1,4)-1)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'') and (TO_DATE((SUBSTR('||w_moi_retour||',1,4)-1)||'''||objtable.MOISZERO||'''||''01'',''YYYYMMDD'')+364)';
      END IF;
      req := req ||' AND '||w_date_eff||' < TO_DATE('||w_moi_retour||'||''01'''||',''YYYYMMDD'')';
      FSED_AVANCEMENT(p_id,'FSED.sous_insertCart30 Delete RC req='||substr(req,0,3700));
      EXECUTE IMMEDIATE req USING p_id;
      req:='';
    END IF;
  END IF;
  v_stop := DBMS_UTILITY.GET_TIME;
  tab_numLigne00.delete;
  tab_numLigne99.delete;
  IF p_table ='DIC_ADM_CONTRAT_HISTO' THEN
    COMMIT;
    FSED_AVANCEMENT(p_id,'MAJ_DATE_FIN_CONTRAT_HISTO ');
    MAJ_DATE_FIN_CONTRAT_HISTO();
    COMMIT;
    FSED_AVANCEMENT(p_id,'R_DATE_FIN_BO_CONTRAT_HISTO');
    R_DATE_FIN_BO_CONTRAT_HISTO();
    FSED_AVANCEMENT(p_id,'R_DATE_SORTIE_SIT_BO_CNT_HISTO');
    R_DATE_SORTIE_SIT_BO_CNT_HISTO();
    FSED_AVANCEMENT(p_id,'Fin R_DATE_SORTIE_SIT_BO_CNT_HISTO');
  END IF;
  COMMIT;
  --gestion du trigger des DACH : suppression de la table temporaire BYPASS_TRG_DACH_ON_SESSION
  DELETE FROM BYPASS_TRG_DACH_ON_SESSION;
   EXECUTE_IMMEDIATE_STRING ('truncate table TGE_FSED_30_TEMPORARY',0);
EXCEPTION
WHEN OTHERS THEN
  --gestion du trigger des DACH : suppression de la table temporaire BYPASS_TRG_DACH_ON_SESSION
  DELETE FROM BYPASS_TRG_DACH_ON_SESSION;
   EXECUTE_IMMEDIATE_STRING ('truncate table TGE_FSED_30_TEMPORARY',0);
  err_code := SQLCODE;
  err_msg  := err_msg||' '||SQLERRM;
 IF reqTrace is not null then
    FSED_ERREUR(p_id , 'Trace SYS_TRC_MODIF ',p_id || ',' || p_newId || ',' || p_table, err_code || '-' || err_msg||' requete :'||req );
 END IF;
  FSED_ERREUR(p_id , 'insertCart30 '||p_table||' ' || w_elem, p_id || ',' || p_newId || ',' || p_table, err_code || '-' || err_msg||' requete :'||req );
  raise_application_error(-20000, 'FSED insertCart30  '|| sqlerrm||' w_00 :'||w_00||'w_99 :'||w_99||'elem :'||w_elem||'occur'||w_occ);
END sous_insertCart30;
/********************************************************************
PROC : insertCart30(p_id    IN NUMBER,
p_newId IN NUMBER,
p_table IN VARCHAR2 )
DESC : Procedure de lancement de retour de paie pour les cartes 30
*********************************************************************/
PROCEDURE insertCart30(
    p_id    IN NUMBER ,
    p_newId IN NUMBER ,
    p_table IN VARCHAR2) parallel_enable
IS
  jobno NUMBER;
BEGIN
  dbms_job.submit(jobno, 'sous_insertCart30('||p_id||','||p_newid||','||p_table||');',sysdate, NULL);
END insertCart30;
/*****************************************************************************
PROC : getPeriodeReceuil(p_numpac  in     TGE_REF_PAC.numpac%type,
p_paiezad in     TGE_IMPORT_FSED_30.paiezad%type,
p_dateDeb in out DATE,
p_dateFin in out DATE)
DESC : retourne la date debut et fin de la periode de recueil
TEST : getPeriodeReceuil('TLSE01','0001492')-->(2010-01-01,2014-02-02)
*******************************************************************************/
PROCEDURE getPeriodeRecueil(
    p_numpac  IN TGE_REF_PAC.numpac%type,
    p_paiezad IN TGE_IMPORT_FSED_30.paiezad%type,
    p_dateDeb IN OUT DATE,
    p_dateFin IN OUT DATE)
IS
  w_dsdcn DIC_ADM_CONTRAT.dsdcn%TYPE;
  w_dsfcn DIC_ADM_CONTRAT.dsfcn%TYPE;
  w_dr DATE;
  w_fr DATE;
  w_periodeEnCours tge_ref_pac.periodeencours%TYPE;
  w_doneegxpFin TGE_REF_MAPDO.donneegxp%type;
  w_doneegxpDeb TGE_REF_MAPDO.donneegxp%type;
  w_req CLOB;
  w_pacmat DIC_ADM_CONTRAT_SITU.pacmat%type;--DIT 50818 
BEGIN
  SELECT pacmat
  INTO w_pacmat
  FROM DIC_ADM_CONTRAT_SITU --DIT 50818 
  WHERE numpac =p_numpac
  AND paiezad  = p_paiezad
  AND rownum   =1 ;
  BEGIN
    SELECT POP.DSDCN,
      POP.DSFCN,
      CASE
        WHEN R.DATE_DEBUT_1 IS NOT NULL
        THEN R.DATE_DEBUT_1
        ELSE L.DEBUT_PERIODE
      END AS DT_RECUEIL_DEB,
      CASE
        WHEN R.DATE_FIN_1 IS NOT NULL
        THEN R.DATE_FIN_1
        ELSE L.FIN_PERIODE
      END AS DT_RECUEIL_FIN,
      POP.PERIODEENCOURS
    INTO w_dsdcn,
      w_dsfcn,
      p_dateDeb,
      p_dateFin,
      w_periodeEnCours
    FROM
      (SELECT C.NUMPAC,
        S.paiezad,--DIT 50818 
        c.pacmat,
        P.PERIODEENCOURS,
        C.DSDCN AS DSDCN,
        C.DSFCN AS DSFCN
      FROM DIC_ADM_CONTRAT C,
        DIC_ADM_CONTRAT_SITU S,--DIT 50818 
        TGE_REF_PAC P
      WHERE C.NUMPAC = P.NUMPAC
      AND C.NUMPAC   = S.NUMPAC
      AND C.PACMAT   = S.PACMAT
      AND C.NUMCNT   = S.NUMCNT
      AND C.NUMPAC   = p_numpac
      AND S.PAIEZAD  = p_paiezad--DIT 50818 
      ) POP ,
      SECUPACMAT S ,
      DIC_TGE_PERIODES_RECUEIL R ,
      TGE_REF_LTP L
    WHERE POP.NUMPAC       = S.NUMPAC
    AND POP.PACMAT         = S.PACMAT
    AND POP.NUMPAC         = L.NUMPAC
    AND POP.PERIODEENCOURS = L.MOIS_PAIE
    AND POP.PAIEZAD        = R.PAIEZAD(+)
    AND POP.NUMPAC         = R.NUMPAC(+)
    AND rownum             = 1 ;
  EXCEPTION
  WHEN OTHERS THEN
    err_msg := SQLERRM;
  END;
  SELECT m.donneegxp
  INTO w_doneegxpDeb
  FROM TGE_REF_MAPDO M
  WHERE ( ELEMENT = 'A275' )
  AND ( ( (SELECT COUNT(*)
    FROM TGE_REF_MAPDO
    WHERE NUMPAC=p_numpac
    AND ELEMENT = M.ELEMENT) > 0
  AND M.NUMPAC  = 'TLSE01' )
  OR ( (SELECT COUNT(*)
    FROM TGE_REF_MAPDO
    WHERE NUMPAC=p_numpac
    AND ELEMENT = M.ELEMENT) = 0
  AND M.NUMPAC  ='*' ) );
  SELECT m.donneegxp
  INTO w_doneegxpFin
  FROM TGE_REF_MAPDO M
  WHERE ( ELEMENT = 'A309' )
  AND ( ( (SELECT COUNT(*)
    FROM TGE_REF_MAPDO
    WHERE NUMPAC=p_numpac
    AND ELEMENT = M.ELEMENT) > 0
  AND M.NUMPAC  = 'TLSE01' )
  OR ( (SELECT COUNT(*)
    FROM TGE_REF_MAPDO
    WHERE NUMPAC    =p_numpac
    AND ELEMENT     = M.ELEMENT) = 0
  AND M.NUMPAC      ='*' ) );
  IF w_doneegxpDeb IS NOT NULL AND w_doneegxpFin IS NOT NULL THEN
    w_req          := 'select distinct '||w_doneegxpDeb||','||w_doneegxpFin ||' from DIC_ADM_CONTRAT_HISTO where numpac = :numpac and pacmat= :pacmat and DATE_EFF <= :dateeff ';
    EXECUTE immediate w_req INTO w_dr,
    w_fr USING p_numpac,
    w_pacmat,
    last_day(to_date(w_periodeencours,'YYYYMM'));
  END IF;
  IF p_dateDeb >w_dr AND w_dr <p_dateFin THEN
    p_dateDeb := w_dr ;
  END IF ;
  IF w_fr      > to_date(w_periodeencours,'YYYYMM') AND w_fr < last_day(to_date(w_periodeencours,'YYYYMM')) THEN
    p_dateFin := w_fr;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  err_msg := SQLERRM;
END getPeriodeRecueil;
/*************************************************************************************************************************************
PROC :  maj_CAD30   (p_id IN NUMBER)
DESC :  Procedure de mise à jour des compteurs aprés retour de paie
TEST :  cad_compteur          : code_compteur in ('CPO','CRTT') and matricule in ('0001494','0001492','0001498','0001576','0001510')
TGE_REF_MAPDO         : TRTPARTICULIER like 'CAD=%' and ELEMENT IN ('I001','I002','I005','J003','T301','T303')
DIC_ADM_CONTRAT       : matric in ('0001494','0001492','0001498','0001576','0001510') and NUMPAC ='TLSE01'
DIC_ADM_CONTRAT_HISTO : pacmat in ('00001492','00001494','00001498','00001510','00001576') and numpac ='TLSE01'
TGE_IMPORT_FSED_30    : code_element in ('I001','I002','I005','T301','T303','J003') and id_trt =2576
CAD.CAD_unite_cpt('0001510','20130101','CPO') -->'U'
CAD.CAD_unite_cpt('0001498','20130101','CPO') -->NULL
CAD.CAD_unite_cpt('0001576','20130101','CPO') -->NULL
CAD.CAD_unite_cpt('0001498','20130101','CRTT')-->'U'
CAD.CAD_unite_cpt('0001492','20130101','CRTT')-->'U'
CAD.CAD_unite_cpt('0001494','20130101','CRTT')-->'U'
CAD.CAD_unite_cpt('0001510','20130101','CRTT')-->'U'
***************************************************************************************************************************************/
PROCEDURE maj_CAD30(
    p_id IN NUMBER)
IS
  CURSOR cur_element ( pnumpac IN VARCHAR2)
  IS
    SELECT DISTINCT DO.ELEMENT,
      do.TRTPARTICULIER ,
      imp.paiezad,
      imp.pacmat
    FROM
      (SELECT *
      FROM TGE_REF_MAPDO
      WHERE numpac= pnumpac
      AND TRTPARTICULIER LIKE 'CAD=%'
    UNION ALL
    SELECT *
    FROM TGE_REF_MAPDO
    WHERE numpac     ='*'
    AND ELEMENT NOT IN
      (SELECT ELEMENT FROM TGE_REF_MAPDO WHERE numpac=pnumpac
      )
    AND TRTPARTICULIER LIKE 'CAD=%'
      ) DO ,
      tge_import_fsed_30 imp
    WHERE id_trt        = p_id
    AND imp.code_element= do.element
    ORDER BY DO.ELEMENT;
    w_cad CAD_COMPTEUR.CODE_COMPTEUR%TYPE;
    w_pot CAD_COMPTEUR.POT1_FJ%TYPE;
    w_cad_temp  VARCHAR2(11);
    w_pot_temp  VARCHAR2(11);
    w_type_date VARCHAR2(11);
    w_req_maj CLOB;
    w_req CLOB;
    w_seq      NUMBER;
    w_unit     VARCHAR2(1);
    w_cadCount NUMBER := 1;
    w_numpac TGE_REF_PAC.NUMPAC%TYPE;
    w_periode    DATE;
    w_dateDed    DATE;
    w_dateFin    DATE;
    w_moi_retour NUMBER;
    w_matric     DIC_ADM_CONTRAT_SITU.matric%type;--DIT 50818 
    w_dateCalcul  DATE;
    w_matricCount NUMBER :=1;
    obj_cad CAD_DATEVALID;
    tab_DATEVALID TAB_CAD_DATEVALID;
    w_datevalidCount NUMBER :=1;
    w_num number;
    w_num2 number;
  TYPE t_cad
IS
  TABLE OF VARCHAR2(5) INDEX BY VARCHAR2(2) ;
TYPE t_matric
IS
  TABLE OF VARCHAR2(32) INDEX BY VARCHAR2(2) ;
  tab_cad TAB_SMALLVARCHAR;
  tab_matric TAB_SMALLVARCHAR; 
BEGIN
  FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 début');
  ---Sélection des éléments liés à des compteurs
  getNumLigne(p_id);
  FOR i IN tab_numLigne00.first..tab_numLigne00.last
  LOOP
    IF i            <=tab_numLigne99.count AND tab_numLigne99(i) IS NOT NULL THEN
      w_numpac      := GET_NUMPAC(p_id,tab_numLigne00(i));
      w_moi_retour  := GET_PERIODE_00(p_id,tab_numLigne00(i));
      tab_DATEVALID := TAB_CAD_DATEVALID();
      tab_cad       := TAB_SMALLVARCHAR();
      tab_matric    := TAB_SMALLVARCHAR();
      FOR C IN cur_element(w_numpac)
      LOOP
        FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 loop '||C.TRTPARTICULIER||'  '||'paiezad'||C.paiezad);
        w_cad_temp  := SUBSTR(C.TRTPARTICULIER,1,instr(C.TRTPARTICULIER,',')-1);
        w_cad       := SUBSTR(w_cad_temp,instr(w_cad_temp,'=')              +1,LENGTH(w_cad_temp));
        w_pot_temp  := SUBSTR(C.TRTPARTICULIER,instr(C.TRTPARTICULIER,',')  +1,LENGTH(C.TRTPARTICULIER));
        w_pot       := NVL(SUBSTR(w_pot_temp,1,instr(w_pot_temp,'F')        -2),NVL(SUBSTR(w_pot_temp,1,instr(w_pot_temp,'D')-2),w_pot_temp));
        w_type_date := NVL(SUBSTR(w_pot_temp,LENGTH(w_pot_temp)             -1,instr(w_pot_temp,'F')),SUBSTR(w_pot_temp,LENGTH(w_pot_temp)-1,instr(w_pot_temp,'D')));
        --getPeriodeRecueil(w_numpac,C.paiezad,w_dateDed,w_dateFin);
        FSED_AVANCEMENT(p_id,'Avant :getPeriodeRecueil:paiezad '||C.paiezad||' '||'w_dateDed'||w_dateDed||' '||'w_dateFin'||w_dateFin);
        getPeriodeRecueilEvol(p_id,w_numpac,w_moi_retour,C.paiezad,w_dateDed,w_dateFin);
        FSED_AVANCEMENT(p_id,'Apres :getPeriodeRecueil:paiezad '||C.paiezad||' '||'w_dateDed'||w_dateDed||' '||'w_dateFin'||w_dateFin);
        IF w_type_date   ='FP' THEN
          w_periode     := LAST_DAY(TO_DATE(w_moi_retour,'YYYYMM'));
        elsif w_type_date='DP' THEN
          w_periode     := TO_DATE(w_moi_retour,'YYYYMM');
        elsif w_type_date='DR' THEN
          w_periode     := w_dateDed;
        elsif w_type_date='FR' THEN
          w_periode     := w_dateFin ;
        END IF;
        ---Mise à zero des pots de forçage des compteurs ‘I’ :Suppression des forçages sur la période recueil de la paie avant de faire les insertions
        --w_req := 'UPDATE CAD_COMPTEUR SET pot1_FJ = NULL ,pot1_FH = NULL ,pot2_FJ = NULL ,pot2_FH = NULL ,pot3_FJ = NULL ,pot3_FH = NULL ,pot4_FJ = NULL ,';
        --w_req := w_req ||' pot4_FH = NULL,pot5_FJ = NULL ,pot5_FH = NULL ,pot6_FJ = NULL ,pot6_FH = NULL ,pot7_FJ = NULL ,pot7_FH = NULL ,pot8_FJ = NULL ,pot8_FH = NULL, ';
        --w_req := w_req ||' pot9_FJ = NULL ,pot9_FH = NULL ,pot10_FJ = NULL ,pot10_FH = NULL ,pot11_FJ = NULL ,';
        --w_req := w_req ||' pot11_FH = NULL ,pot12_FJ = NULL ,pot12_FH = NULL WHERE CODE_COMPTEUR = :w_cad AND TYPEMJ =''I'' AND to_date(DJOUR,''YYYYMMDD'') BETWEEN :w_dateDed AND :w_dateFin ';
        --w_req := w_req ||' AND (MATRICULE,CODE_COMPTEUR) NOT IN (SELECT MATRICULE,CODE_COMPTEUR FROM CAD_RETP_MATRIC_CPT_DELETED) ';
        --w_req := w_req ||' AND MATRICULE IN (SELECT MATRIC FROM DIC_ADM_CONTRAT WHERE PAIEZAD = :paiezad AND NUMPAC = :numpac) ';
        --FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 après RAZ '||w_cad||' '||w_dateDed||' '||w_dateFin||' '||C.paiezad||' '||w_req);
        --EXECUTE immediate w_req USING w_cad,
        --w_dateDed ,
        --w_dateFin,
        --C.paiezad,
        --w_numpac ;
        -- on mémorise que ce matricule/compteur a déjà été effacé, il ne faut pas le reeffacer sous peine de perre les compteurs déjà positionnés
        w_req := 'insert into CAD_RETP_MATRIC_CPT_DELETED values (nvl((SELECT DISTINCT MATRIC FROM DIC_ADM_CONTRAT WHERE PAIEZAD = :paiezad AND NUMPAC = :numpac),''INCONNU''),:w_cad)';
        EXECUTE immediate w_req USING C.paiezad,
        w_numpac,
        w_cad;
        commit;
        IF w_cad IS NOT NULL THEN
          tab_cad.extend;
          tab_cad(w_cadCount):= w_cad;
          w_cadCount         := w_cadCount + 1;
        END IF;
        BEGIN
          SELECT DISTINCT matric
          INTO w_matric
          FROM DIC_ADM_CONTRAT_SITU--DIT 50818 
          WHERE numpac =w_numpac
          AND paiezad  =C.paiezad ;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          w_matric := NULL;
        WHEN OTHERS THEN
          err_msg := SQLERRM;
        END;
        IF w_matric IS NOT NULL THEN
          tab_matric.extend;
          tab_matric(w_matricCount) := w_matric;
          w_matricCount             := w_matricCount+1;
          FSED_AVANCEMENT(p_id,'FSED.maj_CAD30: CAD.CAD_UNITE_CPT');
          w_unit     := CAD.CAD_UNITE_CPT(w_matric,TO_CHAR(to_date(w_moi_retour,'YYYYMM'),'YYYYMMDD'),w_cad);
          IF w_unit  IS NOT NULL THEN
            w_req    := 'MERGE INTO CAD_COMPTEUR CA USING ';
            w_req    := w_req ||'(SELECT * from (select  (select distinct c.matric from dic_ADM_CONTRAt c,DIC_ADm_CONTRAT_HISTO h where c.numpac=h.numpac and  c.numpac =:numpac AND c.paiezad =TGE.paiezad and h.ZA996 =''Z'' and c.pacmat =h.pacmat   )';
            w_req    := w_req ||' as MATRICULE ,to_char(to_date('''||w_periode||'''),''YYYYMMDD'') as DJOUR ,';
            w_req    := w_req ||' is_number(TGE.VALEUR) AS ';
            IF w_unit = 'H' THEN
              w_req  := w_req ||' pot'||w_pot||'_FH';
            ELSE
              w_req := w_req ||' pot'||w_pot||'_FJ';
            END IF ;
            w_req   := w_req ||' FROM TGE_IMPORT_FSED_30 TGE  where ID_TRT= :id and code_element= :elt and numpac = :numpac and tge.paiezad = :paiezad';
            w_req   := w_req ||' AND (numligne >=:ligne0 AND numligne <= :ligne99)) where MATRICULE is not null)i ';
            w_req   := w_req ||' ON (CA.MATRICULE =i.MATRICULE AND CA.DJOUR =i.DJOUR AND CA.TYPEMJ =''I'' AND CA.CODE_COMPTEUR = :cad )';
            w_req   := w_req ||' when MATCHED THEN ' ;
            w_req   := w_req ||' UPDATE  set ';
            IF w_unit= 'H' THEN
              w_req := w_req ||' pot'||w_pot||'_FH =(i.pot'||w_pot||'_FH)*3600 ';
            ELSE
              w_req := w_req ||' pot'||w_pot||'_FJ =(i.pot'||w_pot||'_FJ)';
            END IF ;
            w_req   := w_req ||' when NOT MATCHED THEN ' ;
            w_req   := w_req ||' INSERT (MATRICULE, CODE_COMPTEUR, DJOUR,DATE_MAJ, TYPEMJ,';
            IF w_unit= 'H' THEN
              w_req := w_req ||' pot'||w_pot||'_FH)';
            ELSE
              w_req := w_req ||' pot'||w_pot||'_FJ)';
            END IF;
            w_req   := w_req ||'VALUES (i.MATRICULE,'''||w_cad||''',i.DJOUR,sysdate,''I'', ';
            IF w_unit= 'H' THEN
              w_req := w_req ||'(i.pot'||w_pot||'_FH)*3600 )';
            ELSE
              w_req := w_req ||'i.pot'||w_pot||'_FJ)';
            END IF;
            FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 Merge : w_cad='||w_cad||' c.paiezad='||c.paiezad ||' C.ELEMENT='||C.ELEMENT||'tab_numLigne00(i)='||tab_numLigne00(i)||'tab_numLigne99(i)='||tab_numLigne99(i)||'substr('||w_req||',0,3600)' );
            EXECUTE IMMEDIATE w_req USING w_numpac,
            p_id,
            C.ELEMENT,
            w_numpac,
            c.paiezad,
            tab_numLigne00(i),
            tab_numLigne99(i),
            w_cad;
          END IF;
        END IF;
        --  creation de l'objet + insertion dans le tableau TAB_CAD_DATEVALID
        FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 insertion dans le tableau TAB_CAD_DATEVALID  paiezad '||c.paiezad||'  '||'dateDeb'||w_dateDed||' w_unit '||w_unit);
        IF w_matric IS NOT NULL AND w_dateDed IS NOT NULL AND w_unit IS NOT NULL AND w_cad IS NOT NULL THEN
          Obj_CAD   := NEW CAD_DATEVALID( w_cad, c.element, c.paiezad,w_matric,w_dateDed);
          tab_DATEVALID.extend;
          tab_DATEVALID(w_datevalidCount):= Obj_CAD ;
          w_datevalidCount               := w_datevalidCount +1;
        END IF;
      END LOOP;
    END IF;
  END LOOP;
  COMMIT;
  FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 Insertion des matricules dans CAD_CALCUL_EN_COURS_MATRIC ');
  --- Insertion des matricules dans CAD_CALCUL_EN_COURS_MATRIC avec un nouvel ID :CAD_SEQ_CALCUL.NEXTVAL
  w_seq := CAD_SEQ_CALCUL.NEXTVAL;
  INSERT INTO CAD_CALCUL_EN_COURS_MATRIC
    (ID,MATRICULE
    )
  SELECT DISTINCT w_seq ,
    CAD.MATRIC
  FROM
    (SELECT DISTINCT ta.Matricule AS matric FROM TABLE (tab_DATEVALID) ta
    )CAD ;
  --- Lancement du calcul
  --- si au moin 1 cad par element
  IF w_cadCount >1 THEN
    SELECT MIN(i.Periode_Recueil) INTO w_dateCalcul FROM TABLE(tab_DATEVALID) i;
    IF w_dateCalcul >TO_DATE(w_moi_retour,'YYYYMM') THEN
      --w_dateCalcul := TO_DATE(w_moi_retour,'YYYYMM');
      w_dateCalcul := add_months(TO_DATE(w_moi_retour,'YYYYMM'),-1);
    END IF;
    BEGIN
      FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 avant CAD.CAD_MAJ_VALEUR_LISTE_RUBJOUR w_seq='||w_seq||' w_dateCalcul='||w_dateCalcul);
      CAD.CAD_MAJ_VALEUR_LISTE_RUBJOUR(w_seq,TO_CHAR(w_dateCalcul,'YYYYMMDD'),NULL,'true','true');
      FSED_AVANCEMENT(p_id,'FSED.maj_CAD30  après  CAD.CAD_MAJ_VALEUR_LISTE_RUBJOUR');
    EXCEPTION
    WHEN OTHERS THEN
      err_code := SQLCODE;
      err_msg  := SQLERRM;
      FSED_AVANCEMENT(p_id,'FSED.maj_CAD30:ERR:CAD.CAD_MAJ_VALEUR_LISTE_RUBJOUR '||err_code||' '||err_msg);
    END;
  END IF;
  COMMIT;
  --la suppression du passé pour les matricules concernés par le retour
  IF tab_matric.count>=1 AND tab_cad.count>=1 THEN
    w_req:='truncate table TGE_MAJ_30_MATRIC_TEMPORARY';
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 Vidage 1 de TGE_MAJ_30_MATRIC_TEMPORARY : '||w_req);
     EXECUTE_IMMEDIATE_STRING  (w_req,0);
    w_req:='truncate table TGE_MAJ_30_CPT_TEMPORARY';
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 Vidage 1 de TGE_MAJ_30_CPT_TEMPORARY : '||w_req);
     EXECUTE_IMMEDIATE_STRING ( w_req,0);
    -- insert into temporary table TGE_MAJ_30_MATRIC_TEMPORARY et TGE_MAJ_30_CPT_TEMPORARY 
    FORALL i IN tab_matric.first..tab_matric.last
    INSERT INTO TGE_MAJ_30_MATRIC_TEMPORARY (matricule) values(tab_matric(i));
    FORALL i IN tab_cad.first..tab_cad.last
    INSERT INTO TGE_MAJ_30_CPT_TEMPORARY (CODE_COMPTEUR) values(tab_cad(i));
    select count(*) into w_num from TGE_MAJ_30_MATRIC_TEMPORARY;
    select count(*) into w_num2 from TGE_MAJ_30_cpt_TEMPORARY;
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 insertion temporary nb_matric='||w_num||' nb_cpt= '||w_num2);
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 suppression du passé');
    w_req :=
    'UPDATE CAD_COMPTEUR set pot1_FJ = null , pot1_FH = null ,pot2_FJ = null , pot2_FH = null ,pot3_FJ = null , pot3_FH = null ,pot4_FJ = null , pot4_FH = null, 
pot5_FJ = null , pot5_FH = null ,pot6_FJ = null , pot6_FH = null ,pot7_FJ = null , pot7_FH = null ,pot8_FJ = null , pot8_FH = null, 
pot9_FJ = null , pot9_FH = null ,pot10_FJ = null , pot10_FH = null ,pot11_FJ = null , pot11_FH = null ,pot12_FJ = null , pot12_FH = null , 
POT1_VALEURJ  = null ,POT1_VALEURH  = null ,POT2_VALEURJ  = null ,POT2_VALEURH  = null ,POT3_VALEURJ  = null ,POT3_VALEURH  = null , 
POT4_VALEURJ  = null ,POT4_VALEURH  = null ,POT5_VALEURJ  = null ,POT5_VALEURH  = null ,POT6_VALEURJ  = null ,POT6_VALEURH  = null , 
POT7_VALEURJ  = null ,POT7_VALEURH  = null ,POT8_VALEURJ  = null ,POT8_VALEURH  = null ,POT9_VALEURJ  = null ,POT9_VALEURH  = null , 
POT10_VALEURJ = null ,POT10_VALEURH = null ,POT11_VALEURJ = null ,POT11_VALEURH = null ,POT12_VALEURJ = null ,POT12_VALEURH = null , 
POTV1_VALEURJ = null ,POTV1_VALEURH = null ,POTV2_VALEURJ = null ,POTV2_VALEURH = null ,POTV3_VALEURJ = null ,POTV3_VALEURH = null , 
POTV4_VALEURJ = null ,POTV4_VALEURH = null ,POTV5_VALEURJ = null ,POTV5_VALEURH = null ,POTV6_VALEURJ = null ,POTV6_VALEURH = null '
    ;
    w_req := w_req ||'  where MATRICULE in (select matricule from TGE_MAJ_30_MATRIC_TEMPORARY)';
    w_req := w_req ||' and CODE_COMPTEUR in (select CODE_COMPTEUR from TGE_MAJ_30_CPT_TEMPORARY)';
    w_req := w_req ||' and typeMJ =''I'' and to_date(DJOUR,''YYYYMMDD'') < :periode';
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 req supression :periode='||w_dateCalcul||'w_req : '||w_req);
    EXECUTE immediate w_req USING to_date(w_dateCalcul);
    w_req:='truncate table TGE_MAJ_30_MATRIC_TEMPORARY';
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 Vidage 2 de TGE_MAJ_30_MATRIC_TEMPORARY : '||w_req);
     EXECUTE_IMMEDIATE_STRING  (w_req,0);
    w_req:='truncate table TGE_MAJ_30_CPT_TEMPORARY';
    FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 Vidage 2 de TGE_MAJ_30_CPT_TEMPORARY : '||w_req);
     EXECUTE_IMMEDIATE_STRING  (w_req,0);
  END IF;
  --Mettre à jour CAD_MATRIC_DATE_VALID :update la date de début de validité avec la date de début de recueil de la période suivante:
  IF tab_DATEVALID.count>=1 THEN
  FSED_AVANCEMENT(p_id,'FSED.maj_CAD30  loop tab_DATEVALID');
    FOR i IN tab_DATEVALID.first..tab_DATEVALID.last
    LOOP
      UPDATE CAD_MATRIC_DATEVALID a
      SET a.DATE_DEB_PER                   = TO_CHAR(ADD_MONTHS( to_date(tab_DATEVALID(i).Periode_Recueil),1),'YYYYMMDD')
      WHERE a.Matricule                    = tab_DATEVALID(i).Matricule
      AND a.code_compteur                  = tab_DATEVALID(i).Code_Compteur
      AND to_date(a.DATE_EFFET,'YYYYMMDD') =
        (SELECT MAX(to_date(b.date_effet,'YYYYMMDD'))
        FROM cad_matric_datevalid b
        WHERE to_date(b.date_effet,'YYYYMMDD')<= to_date(ADD_MONTHS( to_date(tab_DATEVALID(i).Periode_Recueil),1))
        AND a.code_compteur                    =b.code_compteur
        AND a.matricule                        =b.matricule
        );
    END LOOP;
  END IF;
  FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 premier truncate CAD_RETP_MATRIC_CPT_DELETED');
  w_req:='truncate table CAD_RETP_MATRIC_CPT_DELETED';
   EXECUTE_IMMEDIATE_STRING  (w_req,0);
  FSED_AVANCEMENT(p_id,'maj_CAD30 fin procédure');
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_AVANCEMENT(p_id,'ERR FSED.maj_CAD30 w_cad='||w_cad||'w_req :'||w_req);
  w_req    :='truncate table CAD_RETP_MATRIC_CPT_DELETED';
  FSED_AVANCEMENT(p_id,'FSED.maj_CAD30 second truncate (exception)CAD_RETP_MATRIC_CPT_DELETED' );
   EXECUTE_IMMEDIATE_STRING ( w_req,0);
  FSED_ERREUR( p_id , 'maj_CAD30 ' , NULL, err_code||'-'||err_msg);
  raise_application_error(-20000, 'FSED maj_CAD30  '|| sqlerrm);
END maj_CAD30;
/******************************************************************
PROC : insertData (pNumPac       TGE_REF_VRREP.NUMERO_DE_PAC%TYPE,
pCodeTable    TGE_REF_VRREP.CODE_TABLE%TYPE )
DESC :  Insertion dans les tables: TGE_REF_VRREP,TGE_REF_VRDES,
TGE_REF_VRVAL,TGE_REF_RUBRIQUE,TGE_REF_RUBRIQUE_CONTEXTE
TGE_REF_DICOZ
********************************************************************/
PROCEDURE insertData(
    p_id IN NUMBER,
    pNumPac TGE_REF_VRREP.NUMERO_DE_PAC%TYPE,
    pCodeTable TGE_REF_VRREP.CODE_TABLE%TYPE )
IS
  v_exist_vrrep NUMBER := 0;
  v_exist_vrdes NUMBER := 0;
BEGIN
 
  IF tab_11R IS NOT NULL THEN
    forall i IN tab_11R.first..tab_11R.last
    INSERT INTO TGE_REF_VRREP VALUES tab_11R
      (i
      );
  END IF;
  IF tab_11D IS NOT NULL THEN
    forall i IN tab_11D.first..tab_11D.last
    INSERT INTO TGE_REF_VRDES VALUES tab_11D
      (i
      );
  END IF;
  IF tab_11D1 IS NOT NULL AND tab_11D1.first > 0 THEN
      forall i IN tab_11D1.first..tab_11D1.last
    --UPDATE TGE_REF_VRDES SET row=tab_11D1(i) WHERE NUMERO_DE_PAC=tab_11D1(i).NUMERO_DE_PAC and CODE_TABLE=tab_11D1(i).CODE_TABLE and NOM_DU_CHAMP=tab_11D1(i).NOM_DU_CHAMP;
    --DIT 76475
    UPDATE TGE_REF_VRDES
    SET MORCEAU_5_NOM_TABLE = tab_11D1(i).MORCEAU_5_NOM_TABLE ,
      MORCEAU_5_COL_DEB     = tab_11D1(i).MORCEAU_5_COL_DEB ,
      MORCEAU_5_COL_FIN     = tab_11D1(i).MORCEAU_5_COL_FIN ,
      MORCEAU_6_NOM_TABLE   = tab_11D1(i).MORCEAU_6_NOM_TABLE ,
      MORCEAU_6_COL_DEB     = tab_11D1(i).MORCEAU_6_COL_DEB ,
      MORCEAU_6_COL_FIN     = tab_11D1(i).MORCEAU_6_COL_FIN ,
      MORCEAU_7_NOM_TABLE   = tab_11D1(i).MORCEAU_7_NOM_TABLE ,
      MORCEAU_7_COL_DEB     = tab_11D1(i).MORCEAU_7_COL_DEB ,
      MORCEAU_7_COL_FIN     = tab_11D1(i).MORCEAU_7_COL_FIN ,
      MORCEAU_8_NOM_TABLE   = tab_11D1(i).MORCEAU_8_NOM_TABLE ,
      MORCEAU_8_COL_DEB     = tab_11D1(i).MORCEAU_8_COL_DEB ,
      MORCEAU_8_COL_FIN     = tab_11D1(i).MORCEAU_8_COL_FIN ,
      MORCEAU_9_NOM_TABLE   = tab_11D1(i).MORCEAU_9_NOM_TABLE ,
      MORCEAU_9_COL_DEB     = tab_11D1(i).MORCEAU_9_COL_DEB ,
      MORCEAU_9_COL_FIN     = tab_11D1(i).MORCEAU_9_COL_FIN
    WHERE NUMERO_DE_PAC     =tab_11D1(i).NUMERO_DE_PAC
    AND CODE_TABLE          =tab_11D1(i).CODE_TABLE
    AND NOM_DU_CHAMP        =tab_11D1(i).NOM_DU_CHAMP;
  END IF;
  IF tab_11V IS NOT NULL THEN
    forall i IN tab_11V.first..tab_11V.last
    INSERT INTO TGE_REF_VRVAL VALUES tab_11V
      (i
      );
  END IF;
  IF tab_15 IS NOT NULL THEN
    forall i IN tab_15.first..tab_15.last
    INSERT INTO TGE_REF_RUBRIQUE VALUES tab_15
      (i
      );
  END IF;
  
  IF tab_15_lib IS NOT NULL and tab_15_lib.exists(1) THEN
   forall i IN tab_15_lib.first..tab_15_lib.last  
     MERGE INTO TGE_REF_LIBRUB_COTIS lib using 
      dual
     on (lib.NUMPAC = tab_15_lib(i).numpac and lib.CODERUB=tab_15_lib(i).coderub and lib.CODECAISSE=tab_15_lib(i).codecaisse)
     when MATCHED THEN 
     UPDATE  set lib.CAISSEREF=tab_15_lib(i).CAISSEREF,
                 lib.LIB_RESOLU=tab_15_lib(i).LIB_RESOLU
     when NOT MATCHED THEN 
     INSERT (NUMPAC,CODERUB,CODECAISSE,CAISSEREF,LIB_RESOLU)
     VALUES (tab_15_lib(i).numpac ,tab_15_lib(i).coderub ,tab_15_lib(i).codecaisse,tab_15_lib(i).CAISSEREF,tab_15_lib(i).LIB_RESOLU);
  END IF;
  IF tab_17CR IS NOT NULL THEN
    forall i IN tab_17CR.first..tab_17CR.last
    INSERT INTO TGE_REF_RUBRIQUE_CONTEXTE VALUES tab_17CR
      (i
      );
  END IF;
  IF tab_17DMF IS NOT NULL THEN
    forall i IN tab_17DMF.first..tab_17DMF.last
    INSERT INTO TGE_REF_DICOZ VALUES tab_17DMF
      (i
      );
  END IF;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'insertData' , pNumPac||','||pCodeTable , err_code||'-'||err_msg );
  raise_application_error(-20000, 'FSED insertion  '|| sqlerrm);
END insertData;
/*****************************************************
PROC : purge_array
DESC :
*****************************************************/
PROCEDURE purge_array
  (
    p_id IN NUMBER
  )
IS
BEGIN
  IF tab_11R IS NOT NULL THEN
    tab_11R.DELETE;
  END IF;
  IF tab_11D IS NOT NULL THEN
    tab_11D.DELETE;
  END IF;
  IF tab_11D1 IS NOT NULL THEN
    tab_11D1.DELETE;
  END IF;
  IF tab_11V IS NOT NULL THEN
    tab_11V.DELETE;
  END IF;
  IF tab_15 IS NOT NULL THEN
    tab_15.DELETE;
  END IF;
  IF tab_15_lib IS NOT NULL THEN
    tab_15_lib.DELETE;
  END IF;
  IF tab_17CR IS NOT NULL THEN
    tab_17CR.DELETE;
  END IF;
  IF tab_17DMF IS NOT NULL THEN
    tab_17DMF.DELETE;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'purge_array' , NULL , err_code||'-'||err_msg );
  raise_application_error(-20000, 'FSED purge array  '|| sqlerrm);
END purge_array;
/*********************************************************************
PROC : purge_table (pNumPac       TGE_REF_VRREP.NUMERO_DE_PAC%TYPE,
pCodeTable    TGE_REF_VRREP.Code_TABLE%TYPE)
DESC : purge table
**********************************************************************/
PROCEDURE purge_table
  (
    p_id IN NUMBER,
    pNumPac TGE_REF_VRREP.NUMERO_DE_PAC%TYPE,
    pCodeTable TGE_REF_VRREP.Code_TABLE%TYPE,
    numcarte_00 IN NUMBER
  )
IS
  a_count     NUMBER:=0;
  numcarte_99 NUMBER;
BEGIN
  FOR i IN tab_numLigne00.first..tab_numLigne00.last
  LOOP
    IF tab_numLigne00
      (
        i
      )
                  =numcarte_00 THEN
      numcarte_99:=tab_numLigne99
      (
        i
      )
      ;
    END IF;
  END LOOP;
  SELECT COUNT(*)
  INTO a_count
  FROM TGE_IMPORT_FSED
  WHERE SUBSTR(donnees,1,6)=pNumpac
  AND id_trt               =p_id
  AND SUBSTR(donnees,7,2)
    || SUBSTR(donnees,18,1)='11R'
  AND num_lig BETWEEN numcarte_00 AND numcarte_99;
  IF a_count>0 THEN
    FSED_AVANCEMENT(p_id,'Vidage de TGE_REF_VRREP Pac ('||pNumPac||')');
     --DSH : Les VR mises à jour et non encore envoyé à zadig(code_gestionnaire ='G' and temoin_vr_base = O: Valeurs modifiées non envoyées ou K : Echec du dernier envoi des valeurs ou E : en cours d'envoi ) ne doivent pas être supprimés
 	DELETE FROM TGE_REF_VRREP WHERE NUMERO_DE_PAC=pNumPac and (code_gestionnaire <>'G' or ( code_gestionnaire ='G' and temoin_vr_base <>'O' and temoin_vr_base <>'K' and temoin_vr_base <>'E') );
    
  END IF;
  SELECT COUNT(*)
  INTO a_count
  FROM TGE_IMPORT_FSED
  WHERE SUBSTR(donnees,1,6)=pNumpac
  AND id_trt               =p_id
  AND SUBSTR(donnees,7,2)
    || SUBSTR(donnees,18,1)='11D'
  AND num_lig BETWEEN numcarte_00 AND numcarte_99;
  IF a_count>0 THEN
    FSED_AVANCEMENT(p_id,'Vidage de TGE_REF_VRDES Pac ('||pNumPac||')');
    DELETE FROM TGE_REF_VRDES WHERE NUMERO_DE_PAC=pNumPac;
  END IF;
  SELECT COUNT(*)
  INTO a_count
  FROM TGE_IMPORT_FSED
  WHERE SUBSTR(donnees,1,6)=pNumpac
  AND id_trt               =p_id
  AND SUBSTR(donnees,7,2)  ='15'
  AND num_lig BETWEEN numcarte_00 AND numcarte_99;
  IF a_count>0 THEN
    FSED_AVANCEMENT(p_id,'Vidage de TGE_REF_RUBRIQUE Pac ('||pNumPac||')');
    DELETE FROM TGE_REF_RUBRIQUE WHERE numpac=pNumPac;
    FSED_AVANCEMENT(p_id,'Vidage de TGE_REF_LIBRUB_COTIS Pac ('||pNumPac||')');
    DELETE FROM TGE_REF_LIBRUB_COTIS WHERE numpac = pNumPac;
  END IF;
  SELECT COUNT(*)
  INTO a_count
  FROM TGE_IMPORT_FSED
  WHERE SUBSTR(donnees,1,6)=pNumpac
  AND id_trt               =p_id
  AND SUBSTR(donnees,7,2)
    || SUBSTR(donnees,10,2)='17CR'
  AND num_lig BETWEEN numcarte_00 AND numcarte_99;
  IF a_count>0 THEN
    FSED_AVANCEMENT(p_id,'Vidage de TGE_REF_RUBRIQUE_CONTEXTE Pac ('||pNumPac||')');
    DELETE FROM TGE_REF_RUBRIQUE_CONTEXTE WHERE numpac=pNumPac;
  END IF;
  SELECT COUNT(*)
  INTO a_count
  FROM TGE_IMPORT_FSED
  WHERE SUBSTR(donnees,1,6)=pNumpac
  AND id_trt               =p_id
  AND SUBSTR(donnees,7,2)
    || SUBSTR(donnees,10,2)
    || SUBSTR(donnees,13,1)='17DMF'
  AND num_lig BETWEEN numcarte_00 AND numcarte_99;
  IF a_count>0 THEN
    FSED_AVANCEMENT(p_id,'Vidage de TGE_REF_DICOZ Pac ('||pNumPac||')');
    DELETE FROM TGE_REF_DICOZ WHERE numpac=pNumPac;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := SQLERRM;
  FSED_ERREUR( p_id , 'purge_table' , pNumPac||','||pCodeTable , err_code||'-'||err_msg );
  raise_application_error(-20000, 'FSED purge array  '|| sqlerrm);
END purge_table;
/**********************************************************************
PROC : retour_Referentiel (p_id IN NUMBER )
DESC :
***********************************************************************/
PROCEDURE retour_Fsed(
    p_id IN NUMBER )
IS
  num_carte    VARCHAR(2) := '';
  carte_00     BOOLEAN    :=false;
  v_numpac     VARCHAR(6);
  exist_numpac NUMBER;
  v_code_table TGE_REF_VRVAL.CODE_TABLE%TYPE;
  v_code_table_Old TGE_REF_VRVAL.CODE_TABLE%TYPE := '$';
  v_table_Old TGE_REF_VRVAL.CODE_TABLE%TYPE      := '$';
  v_cmpt      NUMBER                                  := 0 ;
  v_cmpt_rest NUMBER ;
  v_cmpt1     NUMBER := 0 ;
  v_code TGE_REF_VRVAL.CODE_TABLE%TYPE ;
  v_start         NUMBER;
  v_stop          NUMBER;
  listeTablePurge VARCHAR2(32767):=',';
  v_type_retour   VARCHAR2(2);
  v_moi_retour    NUMBER;
  v_type          VARCHAR2(1);
  isVRVAL         BOOLEAN := false ;
  isVRDES         BOOLEAN := false ;
  isRUBRIQUE      BOOLEAN := false ;
  isDICOZ         BOOLEAN := false ;
  v_id            NUMBER ;
  w_exist         number := -1;
  w_code_gest    tge_ref_vrrep.code_gestionnaire%type;
  v_type_carte    varchar2(3) :=' ';
BEGIN
  v_start := DBMS_UTILITY.GET_TIME;
  v_id    :=p_id;
  getNumLigne(v_id);
  -- Lecture ligne à ligne de la table
   FSED_AVANCEMENT(v_id,'Début Traitement cartes référentiel paie');
  OPEN cur_lig(v_id);
  LOOP
    FETCH cur_lig BULK COLLECT INTO lig limit 10000;
    EXIT
  WHEN lig.count   =0;
    IF lig.first  IS NOT NULL THEN
      v_cmpt_rest := lig.COUNT;
      FOR i IN lig.FIRST..lig.LAST
      LOOP
        --Extraction du numéro de la carte
        num_carte  := SUBSTR(lig(i).donnees,7,2);
        IF num_carte='00' THEN
          v_numpac := SUBSTR(lig(i).donnees,1,6);
          -- test d'existence du pac
          SELECT COUNT(numpac)
          INTO exist_numpac
          FROM TGE_REF_PAC
          WHERE numpac     =v_numpac;
          IF exist_numpac  >0 THEN
            carte_00      :=true;
            v_type_retour := SUBSTR(lig(i).donnees,68,2);
            IF v_type_retour IN('RC','RN') THEN
              v_moi_retour :=SUBSTR(lig(i).donnees,70,6);
              insert_gap_trt(v_id,v_numpac,v_moi_retour,v_type_retour);
            ELSIF v_type_retour ='RR' THEN
              insert_gap_trt(v_id,v_numpac,NULL,v_type_retour);
            END IF;
            insert_gap_trt_suivi(v_id,'DEBUT',NULL,'BATCH',v_type_retour);
          END IF;
          FSED_AVANCEMENT(v_id,'Traitement référentiel Carte 00 type : '||v_type_retour);
        elsif num_carte='99' THEN
          carte_00    :=false;  
          FSED_AVANCEMENT(v_id,'Traitement référentiel Carte 99 ');
          v_id := GAP_TRT_SEQ_ID.nextval;
        END IF;
        -- traitement de chaque type de carte
        IF num_carte='00' THEN
          FSED_AVANCEMENT(v_id,'Traitement référentiel purge tables (numpac='||v_numpac||'/code table ='||v_code_table||'/num ligne='||lig(i).num_lig);
          purge_table(v_id,v_numpac,v_code_table,lig(i).num_lig);
        END IF ;
        IF num_carte    ='11' THEN
          v_code_table := getTableCode (lig(i))||trim(SUBSTR(lig(i).donnees,14,2));
          v_type       :=SUBSTR(lig(i).donnees,18,1);
          v_type_carte := trim(SUBSTR(lig(i).donnees,18,2));
          w_exist:= -1;
          w_code_gest:='';
          if v_type_carte ='V' THEN
          begin
          select CODE_GESTIONNAIRE ,1
          into   w_code_gest,
                 w_exist
          from  tge_ref_vrrep 
          where numero_de_pac     = v_numpac
          and   code_table        = v_code_table;
          exception 
          when no_data_found then 
          w_exist := -1;
          end;
          end if;
        END IF;
        IF carte_00 AND v_code_table_Old        != v_code_table AND num_carte ='11' THEN
           IF (instr(listeTablePurge,v_code_table)=0 AND SUBSTR(lig(i).donnees,18,1)='V' and (w_exist = -1 OR (w_code_gest !='G' AND w_exist=1))) THEN
            DELETE
            FROM TGE_REF_VRVAL
            WHERE NUMERO_DE_PAC=v_numpac
            AND CODE_TABLE     =v_code_table;
            v_code_table_Old  := v_code_table;
            listeTablePurge   :=listeTablePurge||v_code_table||',';
          END IF;
        END IF ;
IF carte_00 
 OR( carte_00 =false and (tab_11V IS NOT NULL OR tab_11R IS NOT NULL  OR tab_11D IS NOT NULL OR tab_11D1 IS NOT NULL 
 OR tab_15 IS NOT NULL OR tab_15_lib IS NOT NULL OR tab_17CR IS NOT NULL OR tab_17DMF IS NOT NULL))
THEN
  v_cmpt           :=v_cmpt              +1 ;
  IF v_type_retour  ='RR' AND num_carte IN ('11','15','17') THEN
    IF num_carte    ='11' AND v_type='V' THEN
      isVRVAL      := true ;
    ELSIF num_carte ='11' AND v_type='D' THEN
      isVRDES      := true ;
    ELSIF num_carte ='15' THEN
      isRUBRIQUE   := true ;
    ELSIF num_carte ='17' THEN
      isDICOZ      := true ;
    END IF;
  END IF;
  
  ---Insertion Intermediaire
  IF v_cmpt      = 10000 OR v_cmpt_rest <10000 THEN
    v_cmpt1     := v_cmpt1   +v_cmpt;
    v_cmpt_rest := lig.COUNT - v_cmpt1;
    
    insertData(v_id,v_numpac,v_code_table);
    --Vider les tableaux
    purge_array(v_id);
    v_cmpt := 0;
  END IF;
  IF num_carte ='11' THEN
    IF w_exist = -1 OR (w_code_gest !='G' AND w_exist=1) THEN
      setCart11(v_id,lig(i),v_numpac,v_code_Table,v_table_Old);
    END IF;
    v_table_Old := v_code_Table ;
  elsif num_carte='15' THEN
    setCart15(v_id,lig(i),v_numpac);
  elsif num_carte ='17' THEN
    setCart17(v_id,lig(i),v_numpac);
  END IF;
END IF;
END LOOP;
IF isVRVAL THEN
    FSED_AVANCEMENT(v_id,'Détection de la présence du dictionnaire VRVAL Pac ('||v_numpac||')' );
    insert_gap_trt_suivi(v_id,'VRVAL',NULL,'BATCH',v_type_retour);
  END IF;
  IF isVRDES THEN
    FSED_AVANCEMENT(v_id,'Détection de la présence du dictionnaire VRDES Pac ('||v_numpac||')' );
    insert_gap_trt_suivi(v_id,'VRDES',NULL,'BATCH',v_type_retour);
  END IF;
  IF isRUBRIQUE THEN
    FSED_AVANCEMENT(v_id,'Détection de la présence du dictionnaire RUBRIQUE Pac ('||v_numpac||')' );
    insert_gap_trt_suivi(v_id,'RUBRIQUE',NULL,'BATCH',v_type_retour);
  END IF;
  IF isDICOZ THEN
    FSED_AVANCEMENT(v_id,'Détection de la présence du dictionnaire DICOZ Pac ('||v_numpac||')' );
    insert_gap_trt_suivi(v_id,'DICOZ',NULL,'BATCH',v_type_retour);
  END IF;
IF tab_11R IS NOT NULL THEN
    IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_VRREP');
    END IF;
END IF;
IF tab_11D IS NOT NULL THEN
    IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_VRDES');
    END IF;
END IF;
IF tab_11V IS NOT NULL THEN
    IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_VRVAL');
    END IF;
END IF;
IF tab_15 IS NOT NULL THEN
    IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_RUBRIQUE');
    END IF;
END IF;
IF tab_15_lib IS NOT NULL and tab_15_lib.exists(1) THEN
    IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_LIBRUB_COTIS');
    END IF;
END IF;
 IF tab_17CR IS NOT NULL THEN
    IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_RUBRIQUE_CONTEXTE');
    END IF;
END IF;
IF tab_17DMF IS NOT NULL THEN
IF (v_cmpt_rest<10000) THEN 
     FSED_AVANCEMENT(p_id,'Chargement de TGE_REF_DICOZ');
    END IF;
END IF;
END IF;
IF isVRVAL THEN
    FSED_AVANCEMENT(v_id,'Fin du chargement du dictionnaire VRVAL' );
  END IF;
  IF isVRDES THEN
    FSED_AVANCEMENT(v_id,'Fin du chargement du dictionnaire VRDES' );
  END IF;
  IF isRUBRIQUE THEN
    FSED_AVANCEMENT(v_id,'Fin du chargement du dictionnaire RUBRIQUE' );
  END IF;
  IF isDICOZ THEN
    FSED_AVANCEMENT(v_id,'Fin du chargement du dictionnaire DICOZ' );
  END IF;    
    isVRVAL    :=false;
    isVRDES    :=false;
    isRUBRIQUE :=false;
    isDICOZ    :=false;
  END LOOP;
  CLOSE cur_lig;
  v_stop := DBMS_UTILITY.GET_TIME;
  FSED_AVANCEMENT(v_id,'Fin Traitement cartes référentiel paie');
EXCEPTION
WHEN OTHERS THEN
  err_code := SQLCODE;
  err_msg  := err_msg||' '||SQLERRM;
  FSED_ERREUR( v_id , 'retour_Fsed' , v_id , err_code||'-'||err_msg );
  raise_application_error(-20000, 'retour_Fsed  '|| sqlerrm );
END retour_Fsed;
  /*****************************************************************************
 PROC : getPeriodeRecueilEvol
 DESC : retourne la date debut et fin de la periode de recueil 
 *******************************************************************************/
 PROCEDURE getPeriodeRecueilEvol(
    p_id             IN NUMBER,
    p_numpac         IN TGE_REF_PAC.numpac%type,
    p_periodeEnCours IN TGE_REF_PAC.periodeencours%type,
    p_paiezad        IN TGE_IMPORT_FSED_30.paiezad%type,
    p_dateDeb        IN OUT DATE,
    p_dateFin        IN OUT DATE)
IS
  w_A01_DONNEE TGE_REF_MAPDO.donneegxp%type;
  w_A02_DONNEE TGE_REF_MAPDO.donneegxp%type;
  w_A03_DONNEE TGE_REF_MAPDO.donneegxp%type;
  w_tablegxp    TGE_REF_MAPDO.tablegxp%type;
  w_req CLOB;
  w_pacmat DIC_ADM_CONTRAT_SITU.pacmat%type;--DIT 50818 
  w_activite     VARCHAR2(20);
  w_etablissment VARCHAR2(20);
  w_categorie    VARCHAR2(20);
  
  A01_NOM_ELT    VARCHAR2(20);
  A02_NOM_ELT    VARCHAR2(20);
  A03_NOM_ELT    VARCHAR2(20);
  
  requetePivot  VARCHAR2(3000);
BEGIN

  select A01_NOM_ELT, A02_NOM_ELT, A03_NOM_ELT
  into   A01_NOM_ELT, A02_NOM_ELT, A03_NOM_ELT
  from (
   SELECT NOM_ARG,NOM_ELT FROM TABLE(GET_TGE_MAP_ARG_ELT_BY_NUMPAC(p_numpac))
  )
  pivot (MAX(NOM_ELT) AS NOM_ELT FOR (NOM_ARG) in ('A01' AS A01,'A02' AS A02,'A03' AS A03));	
	
  SELECT pacmat
  INTO   w_pacmat
  FROM   DIC_ADM_CONTRAT_SITU --DIT 50818 
  WHERE  numpac =p_numpac
  AND    paiezad  = p_paiezad
  AND rownum   =1 ;

requetePivot :=    
'SELECT tablegxp ,
  A01_DONNEE ,
  A02_DONNEE,
  A03_DONNEE

FROM
  (SELECT *
  FROM
    ( SELECT DISTINCT c.element,
      c.tablegxp,
      c.DONNEEGXP
    FROM
      (SELECT * FROM user_tables
      ) b,
      tge_ref_mapdo c
    WHERE C.numpac   ='''||p_numpac||'''
    AND b.table_name =c.TABLEGXP
    AND c.element   IN ('''||A01_NOM_ELT||''','''||A02_NOM_ELT||''','''|| A03_NOM_ELT||''')
    UNION ALL
    SELECT DISTINCT c.element,
      c.tablegxp,
      c.DONNEEGXP
    FROM
      (SELECT * FROM user_tables
      ) b,
      tge_ref_mapdo c
    WHERE C.numpac              =''*''
    AND b.table_name            =c.TABLEGXP
    AND c.element              IN ('''||A01_NOM_ELT||''','''||A02_NOM_ELT||''','''|| A03_NOM_ELT||''')
    AND (TABLEGXP,ELEMENT) NOT IN
      (SELECT a.TABLEGXP,
        a.element
      FROM tge_ref_mapdo a,
        (SELECT * FROM user_tables
        ) b
      WHERE a.numpac  ='''||p_numpac||'''
      AND b.table_name=a.TABLEGXP
      AND A.ELEMENT   IN ('''||A01_NOM_ELT||''','''||A02_NOM_ELT||''','''|| A03_NOM_ELT||''')
      )
    ) pivot ( MAX(DONNEEGXP) AS DONNEE FOR (element) IN(
    '''||A01_NOM_ELT||''' AS A01 ,'''||A02_NOM_ELT||''' AS A02,'''||A03_NOM_ELT||''' AS A03
    ))
  )';
  EXECUTE IMMEDIATE
  requetePivot
  INTO 
  w_tablegxp,
  w_A01_DONNEE,
  w_A02_DONNEE,
  w_A03_DONNEE
  ;
  IF w_A01_DONNEE IS NOT NULL AND w_A02_DONNEE IS NOT NULL AND w_A03_DONNEE IS NOT NULL THEN
    w_req          := 'select distinct '||w_A01_DONNEE||','||w_A02_DONNEE ||','||w_A03_DONNEE ||' from '||w_tablegxp ||' where numpac = :numpac and pacmat= :pacmat and DATE_EFF <= :dateeff and DATE_SORTIE_SIT_BO >= :datesortie ';
    EXECUTE immediate w_req INTO w_activite,w_etablissment,w_categorie
    USING p_numpac,w_pacmat,last_day(to_date(p_periodeEnCours,'YYYYMM')),last_day(to_date(p_periodeEnCours,'YYYYMM'));
  END IF;
   FSED_AVANCEMENT(p_id,'getPeriodeRecueil:w_activite,w_etablissment,w_categorie '||w_activite||','||w_etablissment||','||w_categorie);
  
BEGIN
select a.DT_RECUEIL_DEB ,
       a.DT_RECUEIL_FIN
INTO   p_dateDeb ,
       p_dateFin 
FROM (
SELECT
  CASE
    WHEN TO_CHAR(REC.DATE_DEBUT_1,'YYYYMMDD') IS NOT NULL
    THEN REC.DATE_DEBUT_1
    ELSE to_date(SUBSTR(LTP.ENREGISTREMENT,29,8), 'DDMMYYYY')
  END AS DT_RECUEIL_DEB,
  CASE
    WHEN TO_CHAR(REC.DATE_FIN_1,'YYYYMMDD') IS NOT NULL
    THEN REC.DATE_FIN_1
    ELSE to_date(SUBSTR(LTP.ENREGISTREMENT, 37 ,8 ), 'DDMMYYYY')
  END AS DT_RECUEIL_FIN

FROM TGE_REF_VRVAL LTP
LEFT JOIN DIC_TGE_PERIODES_RECUEIL REC
ON ( REC.PAIEZAD                        = p_paiezad
AND REC.NUMPAC                          = p_numpac)
WHERE LTP.CODE_TABLE                    = 'LTP'
AND NUMERO_DE_PAC                       = p_numpac
AND SUBSTR(LTP.ENREGISTREMENT, 19 , 6 ) = SUBSTR(p_periodeEncours,5, 6)
  ||SUBSTR(p_periodeEncours,0, 4) --expl '012014'
AND w_activite     between SUBSTR(LTP.ENREGISTREMENT,1 ,2) AND  SUBSTR(LTP.ENREGISTREMENT,3,2)
AND w_etablissment between SUBSTR(LTP.ENREGISTREMENT,5 ,5) AND  SUBSTR(LTP.ENREGISTREMENT,10,5)
AND w_categorie    between SUBSTR(LTP.ENREGISTREMENT,15,2) AND  SUBSTR(LTP.ENREGISTREMENT,17,2)
ORDER BY NUMERO_DE_LIGNE ASC) a
where rownum =1;
EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
    p_dateDeb := null;
    p_dateFin := null;
FSED_AVANCEMENT(p_id,'ERREUR :getPeriodeRecueil: NO_DATA_FOUND for dateDeb et DateFin');
 WHEN OTHERS THEN
  err_msg := SQLERRM; 
 FSED_AVANCEMENT(p_id,'ERREUR :getPeriodeRecueil:err_msg : '||err_msg );
END ;
EXCEPTION
WHEN OTHERS THEN
  err_msg := SQLERRM;
  FSED_AVANCEMENT(p_id,'ERREUR :getPeriodeRecueil:err_msg : '||err_msg||' req'||w_req||' '||'using '|| p_numpac||','||w_pacmat||','||last_day(to_date(p_periodeEnCours,'YYYYMM'))||','||last_day(to_date(p_periodeEnCours,'YYYYMM')));
END getPeriodeRecueilEvol;
  /*****************************************************************************
 PROC : getClauseSelect
 DESC : la clause SELECT correspondant à une donnée mappée
 *******************************************************************************/
 FUNCTION getClauseSelect(
    p_numpac             IN VARCHAR2,
    p_nom_table_ou_alias IN VARCHAR2,
    p_donneegxp          IN VARCHAR2,
    p_donnfiltre         IN VARCHAR2,
    p_operfiltre         IN VARCHAR2,
    p_valfiltre          IN VARCHAR2,
    p_trtparticulier     IN VARCHAR2,
    p_envoi_systematique IN VARCHAR2,
    p_data_type          IN VARCHAR2,
    p_type_zadig         IN VARCHAR2,
    p_masque             IN VARCHAR2,
    p_occ                IN VARCHAR2,
    p_avec_balises_photo IN BOOLEAN)
  RETURN VARCHAR2
IS
  donnee      VARCHAR(1000);
  donneeChar  VARCHAR(1000);
  donneeFilt  VARCHAR(1000);
BEGIN
  IF p_donneegxp            IS NOT NULL THEN
    donneeChar                      :=p_nom_table_ou_alias||'.'||p_donneegxp;
    IF p_trtparticulier     IS NOT NULL AND NOT (instr(p_trtparticulier,'SI_VIDE=',1)=1 OR instr(p_trtparticulier,'DIV=',1)=1 OR instr(p_trtparticulier,'TAB=',1)=1 OR instr(p_trtparticulier,'INI=',1)=1 OR instr(p_trtparticulier,'SUB=',1)=1 OR instr(p_trtparticulier,'PAYS',1)=1 ) THEN
      donneeChar                    :=REPLACE(p_trtparticulier,'$DONNEEGXP',donneeChar);
      donneeChar                    :=REPLACE(donneeChar,'$NUMPAC',''''||p_numpac||'''');
      donneeChar                    :=REPLACE(donneeChar,'$MATRIC',p_nom_table_ou_alias||'.'||'MATRIC');
      donneeChar                    :=REPLACE(donneeChar,'$TABLE',p_nom_table_ou_alias);
      IF p_avec_balises_photo AND p_envoi_systematique='O' THEN
        --les balises @### et ###@ permettront de remplacer la donnée par une valeur bidon dans la PHOTO et ainsi forcer l'envoi
        donneeChar :='@###'||donneeChar||'###@';
      END IF;
    END IF;
    IF p_data_type   ='DATE' AND p_trtparticulier IS NULL AND p_type_zadig    ='N' AND p_masque IN (1,2,3,4,5,6,7) THEN
      donneeChar            :='to_char('||p_nom_table_ou_alias||'.'||p_donneegxp||',''yyyymmddHH24MISS'')';
    ELSIF p_data_type='DATE' AND p_trtparticulier IS NOT NULL AND p_type_zadig    ='N' AND p_masque IN (1,2,3,4,5,6,7) AND p_donneegxp IS NOT NULL THEN
      donneeChar            :='to_char('||donneechar||',''yyyymmddHH24MISS'')';
    ELSE
      donneeChar:='to_char('||donneeChar||')';
    END IF;
    IF p_donnfiltre    IS NOT NULL AND p_operfiltre IS NOT NULL THEN
      donneeFilt               :=' case when ('||p_nom_table_ou_alias||'.'||p_donnfiltre;
      IF p_valfiltre   IS NULL THEN
        IF p_operfiltre = '=' THEN
          donneeFilt           :=donneeFilt||' IS NULL';
        ELSE
          donneeFilt:=donneeFilt||' IS NOT NULL';
        END IF;
      ELSIF p_operfiltre                  ='IN' THEN
        donneeFilt                               :=donneeFilt||' IN ('||p_valfiltre||')';
      ELSIF p_operfiltre                  ='NI' THEN
        donneeFilt                               :=donneeFilt||' NOT IN ('||p_valfiltre||')';
      ELSIF SUBSTR(upper(p_valfiltre),1,3)='TO_' THEN
        donneeFilt                               :=donneeFilt||p_operfiltre||p_valfiltre;
      ELSE
        donneeFilt:=donneeFilt||p_operfiltre||''''||p_valfiltre||'''';
      END IF;
      donneeFilt:=donneeFilt||') then '||donneeChar||' else ''_NOTSEND_'' end ';
    ELSE
      donneeFilt:=donneeChar;
    END IF;
    IF p_occ   ='*F' THEN
      donnee               :='case when '||p_nom_table_ou_alias||'.'||'ECRADR=''ADR'' then '||donneeFilt||' else ''_NOTSEND_'' end';
    ELSIF p_occ='*I' THEN
      donnee               :='case when '||p_nom_table_ou_alias||'.'||'ECRADR=''ADI'' then '||donneeFilt||' else ''_NOTSEND_'' end';
    ELSE
      donnee:=donneeFilt;
    END IF;
  ELSE
    donnee :=''''||REPLACE(p_trtparticulier,'INI=','')||'''' ;
  END IF;
  IF instr(p_trtparticulier,'SI_VIDE=',1)>0 THEN
    donnee                                      :='nvl('||donnee||','''||REPLACE(p_trtparticulier,'SI_VIDE=','')||''')';
  END IF;
  IF instr(p_trtparticulier,'DIV=',1)>0 THEN
    donnee                                  :='to_char(to_number('||donnee||')/to_number('||REPLACE(p_trtparticulier,'DIV=','')||'))';
  END IF;
  IF instr(p_trtparticulier,'TAB=',1)>0 THEN
    donnee                                  :=donnee;
  END IF;
  IF instr(p_trtparticulier,'SUB=',1)>0 THEN
    donnee                                  :=REPLACE(p_trtparticulier,'SUBSTR=','SUBSTR('||donnee||',')||')';
  END IF;
  RETURN donnee;
END getClauseSelect ;        
END FSED;
##
NEWS_RELEASE
==
DELETE FROM NEWS_RELEASE WHERE VERSION_RELEASE ='5' and VERSION_MAJEUR ='05' and VERSION_MINEUR ='004' and REPORT ='R047' and HOTFIX ='0000'
##
NEWS_RELEASE
==
insert into NEWS_RELEASE values(to_date('20210812','YYYYMMDD'),'5','05','004','R047','0000',to_date('20210824','YYYYMMDD'))
##
NEWS_DETAILS
==
DELETE FROM NEWS_DETAILS WHERE VERSION_RELEASE ='5' and VERSION_MAJEUR ='05' and VERSION_MINEUR ='004' and REPORT ='R047' and HOTFIX ='0000'
'SEUGES-7616','B','L''info-bulle présentant la possibilité de quitter la délégation s''affiche désormais lorsque la souris survole sur tout ce qui est écrit en rouge (icône , rôle et nom du délégateur).','5','05','004','R047','0000','Y'
'SEUGES-8713','B','Les info-bulles "QUITTER" (l''application) et "Quitter cette délégation" ne se chevauche plus : quand apparait l''info bulle "Quitter cette délégation" celle de "QUITTER" (l''application). disparait.','5','05','004','R047','0000','Y'
'SEUNA2-13515','B','Le traitement "Traitement_AlimDocContainerMetadata" tombait en erreur si la taille de l''identifiant RH était supérieure à 8 caractères. Dorénavant le matricule RH n''est plus valorisé dans la métadata des photos envoyée à Container.','5','05','004','R047','0000','Y'
'SEUNA2-14100','B','Lors du calcul de la période de recueil des collaborateurs, la tranche de dates utilisée était celle des début et fin de situation contractuelle, ce qui correspond à la période d''emploi en MPE. Certains clients, pas forcément MPE, changent le mapping de ces dates Zadig (AB43 et AB44), il fallait donc tenir compte des définitions personnalisées dans la table du mapping des données.','5','05','004','R047','0000','Y'
'SEUNA2-14400','B','Les demandes d''annulations de périodes d''emploi n''étaient pas bien purgées lors des clôtures de paie. Cela n''a pas de conséquence en paie mais cela encombre inutilement le Fichier Standard d''Echange de Données (FSED), et provoque des traitements pour rien (cartes $$$$). La règle de purge est qu''au moins une paie a tourné depuis la suppression de la période d''emploi.','5','05','004','R047','0000','Y'
'SEUNA2-14941','S','Il est désormais possible d''exporter le journal d''import des tables, sur l''écran "Mise à jour des tables", slide-in "Journal du dernier import excel".','5','05','004','R047','0000','Y'
'SEUNA2-15023','S','Au lancement d''un traitement de paie avec choix des matricules, les inscriptions "orphelines" ne sont plus prises en compte. Les inscriptions sont considérées comme orphelines lorsque le gestionnaire qui les a faites n''est plus présent, ou qu''il n''a plus accès à l''écran de sélection en écriture. Sont concernés les traitements rassemblant les sélections de tous les gestionnaires : le pré-contrôle de paie, la paie de réglé multigestionnaire (implémentation spéciale "REGLEALL" pour qu''un gestionnaire lance les STC de tout le monde), les paies particulières avec écrans de sélection telles que certaines paies d''acompte (implémentation spéciale "GAPSELMA").','5','05','004','R047','0000','Y'
'SEUNA2-15293','B','Dans l''écran « Import données Zadig », lors de l''import des cartes 40, il était possible d''importer des incidents ayant une date début non comprise entre la date de début et la date de fin de contrat de la période d''emploi concernée.','5','05','004','R047','0000','Y'
'SEUNA2-15508','B','Dans une étape de workflow, sur l''écran récapitulatif, l''ajout d''un destinataire interne à la liste de diffusion effaçait le nom et le prénom du bénéficiaire de la demande.<br>Par ailleurs, l''affichage du nom et de l''email du destinataire externe a été agrandi et aligné dans le slide-in "consulter / modifier le groupe de diffusion".','5','05','004','R047','0000','Y'
'SEUNA2-16266','S','Dans l''écran Helpdesk, sur le slide in de confirmation qui apparait lors de d''envoi d''une demande à Siebel, un nouveau champ saisissable « Descriptif eService » est affiché. Ce champ est par défaut prérempli par le numéro de la demande HelpDesk, le titre, le domaine et le sous domaine, le bénéficiaire et le descriptif. Sa longueur est limitée à 2000 caractères. L''objectif est de retrouver dans Siebel ces informations liées à la demande HelpDesk.','5','05','004','R047','0000','Y'
'SEUNA2-16274','S','Dans les écrans worflow utilisant par exemple la nature de contrat, le fait de passer de CDD à CDI rendait l''information "Motif de recours" non obligatoire mais continuait d''afficher à tort un astérisque rouge dans le libellé.<br>Par ailleurs, désormais dans un workflow, l''avatar affiché pour les écrans récapitulatifs ne se base plus sur le fait qu''un écran soit de type "Récap" dans les Tools, mais soit paramétré avec un libellé commençant pas "Récap".','5','05','004','R047','0000','Y'
'SEUNA2-16440','B','Dans MonADP, dans la tuile "Informations professionnelles", lorsqu''une partie de l''adresse de l''établissement était vide, un espace inutile provoquait un décalage dans l''affichage.','5','05','004','R047','0000','Y'
'SEUNA2-16450','S','1- Faire en sorte que les écrans des workflow commande au Wizard la couleur du liseret .<br>Mettre "rouge" si il y a des infos obligatoires à renseigner.<br>Mettre "vert" une fois que l''étape est passée.<br>Couleur jaune pour l''étape en cours qui n''a pas de champs obligatoires.<br>Couleur bleue tant que je ne suis pas passé par l''étape.<br>Couleur "disabled" ( probablement gris ) pour les étapes non déroulées dans le Workflow.<br><br>2- Sur le même principe, faire en sorte que l''écran indique au wizard l''existance de champs obligatoire (avec une icone ! : cf capture LSPRH ci dessous). L''icone disparait automatiquement une fois la saisie réalisée.','5','05','004','R047','0000','Y'
'SEUNA2-16482','S','Afin de gagner du temps, si on a tapé un nom d''écran dans le champ de recherche et qu''il n''y a qu''un seul résultat, la station accède directement à celui-ci. Il n''est plus nécessaire de cliquer sur le lien, le menu de recherche ne s''ouvrira pas.','5','05','004','R047','0000','Y'
'SEUNA2-16759','S','L''onglet "Appointement" de contrat courant est modifié par l''ajout d''un code qui définit le mode de rémunération. Prise en compte des impacts sur les processus d''embauche/ouverture de période et modifications contractuelles.<br>Un 2ème lot prendra en compte les impacts sur l''assistant augmentations.','5','05','004','R047','0000','Y'
'SEUNA2-17041','S','Dans monADP, la fonction métier "Gestion des dossiers" a été remplacée par 3 nouvelles fonctions métiers permettant ainsi de séparer les différents types de gestion :<br>- Gestion des données personnelles<br>- Gestion des acomptes<br>- Gestion des attestations','5','05','004','R047','0000','Y'
'SEUNA2-17381','S','Dans le cadre de la signature électronique, le seul format autorisé au chargement d''un document modifié était le PDF. Désormais, avec l''utilisation du nouveau Docserver V3, piloté par la variable système DOCSERV_VERSION, il est possible de charger les formats DOC, DOCX et PDF.<br>Le document, une fois accepté, sera transformé en PDF/A.<br>','5','05','004','R047','0000','Y'
'SEUNA2-17560','S','Une optimisation a été réalisée dans les demandes de données de paie faites à ADP Time Connect (GESTIL). Les demandes collectives regroupent déjà les collaborateurs ayant les mêmes dates de recueil par période de paie (normale ou rétro). Les demandes individuelles étaient regroupées par dates d''entrée-sortie, elles sont désormais regroupées par période de paie pour une meilleure performance.','5','05','004','R047','0000','Y'
'SEUNA2-17571','S','Des améliorations sont apportées sur la génération des dossiers d''analyse.<br>Lors de fabrication des livrables, la case à cocher "Générer les dossiers d''analyse" est remplacée par deux cases à cocher nommées respectivement "IA" et "Client" avec un libellé unique "Générer les dossiers d''analyse" pour laisser le choix de générer l''une, l''autre ou les deux versions.<br>Dans l''onglet "Maquette", en version "IA", les identifiants des règles d''affichage standard appliquées aux données sont retirés.<br>Un nouvel onglet "Groupes_données" est ajouté. Il contient les groupes de données de l''écran. Cet onglet représente un tableau avec les colonnes "Identifiant", "Libellé", "Règle d''affichage standard", "Règle d''affichage cliente" et "Groupe N+1" contenant tous les groupes des données qui constituent l''écran.<br>Dans l''onglet "Données", des nouvelles colonnes sont ajoutées :<br>- Le groupe de données direct indiquant le groupe de données qui inclut la donnée.<br>- Les règles standards (Affichage, Automatisme et contrôle )<br>- Les règles clientes (Affichage, Automatisme et contrôle )<br>Dans l''onglet "Règles" :<br>- La colonne "Type" est renommée en "Nature"<br>- De nouvelles colonnes sont ajoutées : "Libellé" et "Type"<br>- Les règles de gestion d''affichage standard et client des groupes de données de l''écran sont ajoutées','5','05','004','R047','0000','Y'
'SEUNA2-17865','S','Sur les écrans permettant la saisie de l''affectation juridique (Contrat courant, workflow ou assistant d''embauche ou d''ouverture de période, workflow de modifications contractuelles...), il est maintenant possible de piloter en spécifique l''attribution du code PAC. Habituellement, le PAC du matricule est déduit de l''établissement juridique. Ce nouveau dispositif permet d''avoir la population d''un établissement répartie sur plusieurs PACs. Cette personnalisation se fait dans l''exit spécifique "HRO_AFTER_SELECT_ENTITE" et dans le fichier specifClient.js, en suivant la documentation fournie.<br>De plus, dans l''écran "Paramétrage des données", il est maintenant possible d''associer un appel table multiple (et plus seulement un appel table simple) à une donnée en saisie libre : il faut pour cela renseigner une valeur supérieure à 1 dans le champ "Nombre de lignes maximum (pour sélection multiple)" du pavé "Liste de valeurs". Cette nouvelle fonctionnalité permet de paramétrer un appel table multiple sur le champ "Code PAC" de l''écran "Etablissement SIRET", dans le cas où la population d''un établissement serait répartie sur plusieurs PACs.','5','05','004','R047','0000','Y'
'SEUNA2-17964','S','Il est désormais possible de prendre en compte un fichier de données externe (généralement une GTA) dans les traitements de paie ECP (Zadig EU). La nature de traitement doit être paramétrée avec la case à cocher "Import externe" dans la Commande Du Livrable Web.<br>Un nouvel attribut "fichier-gta" est valorisé dans le message MQ de déclenchement du traitement selon le type de paie. Les valeurs possibles sont :<br>- NORM si le traitement est un contrôle,<br>- RECY si le traitement est un recyclage,<br>- STC si le traitement est une paie de réglé,<br>- TEST si le traitement est une paie de test.<br>Chaque fichier ainsi déposé et reconnu n''est traité qu''une seule fois. Afin de garantir la prise en compte du fichier, l''équipe Stamp File Transfer doit le déposer sur le NAS /u04/gta/pac avant que la paie ne soit déclenchée sur la station. Puis, elle doit envoyer un message MQ à Zadig EU. Enfin, le fichier déposé doit respecter le format de nommage suivant : <NUMERO_DE_PAC>_CART40_<STC/TEST/NORM/RECY>_MMYY_NN_YYYYMMDDHHMMSS.txt.','5','05','004','R047','0000','Y'
'SEUNA2-18007','B','Depuis le report R045 et l''évolution sur les saisies tardives, la clôture station générait de la rétro et des rappels à tort sur la paie suivante.','5','05','004','R047','0000','Y'
'SEUNA2-18100','B','Dans l''écran Helpdesk, sur le slide in d''ajout ou de modification d''une demande, une erreur « Attention le champ monoPac est absent... » était affichée lors du rattachement d''une pièce jointe d''un type non autorisé. De plus, sélectionner un bénéficiaire ou rattacher un fichier vidaient à tort le champ « Réponse à l''auteur ».','5','05','004','R047','0000','Y'
'SEUNA2-18138','S','Modification des conditions d''affichage des données rappelées dans les contextes de processus (Motif de recours ...) notamment écran ''informations de départ''.<br>Référence : Fiche solution_SEUNA-18138_Version V5-05-004_données avec affichage conditionné V1.0 ','5','05','004','R047','0000','Y'
'SEUNA2-18210','S','Afin de notifier la Marketplace de la mise à disposition des tickets restaurant, il est dorénavant possible de paramétrer la nature de traitement Zadig qui déclenche cet événement. Ca peut être le retour de paie ou une consolidation, cela dépend du client et peut donc nécessiter une personnalisation.','5','05','004','R047','0000','Y'
'SEUNA2-18303','B','Lorsque deux traitements de paie avec GESTIL étaient lancés parfaitement au même moment, les traitements étaient bloqués dans l''étape de consultation de la GTA à cause du doublon sur l''horaire qui servait de référence.','5','05','004','R047','0000','Y'
'SEUNA2-18324','B','Pour les traitements périodiques, deux problèmes ont été réglés.<br>Le "Traitement_ExportDocumentsSignes" ne se lançait pas correctement, bien que le répertoire indiqué pour l''export externe dans la variable système "SIGN_EXPORT_REP_ID" existe dans le Document Security Folder.<br>Dans le slide-in "Edition d''un traitement" de l''écran "Gestion des traitements périodiques", la saisie d''un paramètre était obligatoire, alors que certains traitements n''en ont pas besoin.','5','05','004','R047','0000','Y'
'SEUNA2-18415','B','Sur l''écran "Compteurs à date d''un collaborateur", l''affichage des grilles des compteurs était tronqué et les défilements horizontal et vertical ne fonctionnaient pas correctement.','5','05','004','R047','0000','Y'
'SEUNA2-18426','B','Dans les écrans générés, lorsqu''une donnée d''affectation à une structure était supprimée de l''application, elle continuait à être affichée et dans les workflows qui l''utilisaient, son caractère obligatoire pouvait générer un blocage.','5','05','004','R047','0000','Y'
'SEUNA2-18451','B','Après une mise en pause, la reprise du workflow "Mutation société", à l''étape de validation, ne déclenchait pas le contrôle de la date de mutation qui doit être supérieure à la dernière date d''effet du collaborateur. ','5','05','004','R047','0000','Y'
'SEUNA2-18456','B','Lors d''un import de GTA externe, le mode consistant à conserver les saisies de remplacement au niveau des cartes 60 et 70 les supprimait à tort.','5','05','004','R047','0000','Y'
'SEUNA2-18483','S','Dans le workflow "Embauche" du modèle, on utilisait le même groupe de données que sur l''écran Etat-civil contenant des données du conjoint. Il en résultait des initialisations abusives de certaines données du conjoint, telles que la mutuelle, pouvant générer de la rétroactivité à tort. Un nouveau sous-groupe de données d''état-civil sans les données conjoint a été créé pour participer aux workflows.','5','05','004','R047','0000','Y'
'SEUNA2-18554','B','Dans l''écran Helpdesk, sur le slide in de modification d''une demande, un email était envoyé à tort au RRH suite à chaque modification de sa part d''une demande créée par le collaborateur via monADP.','5','05','004','R047','0000','Y'
'SEUNA2-18577','B','Il suffisait que la table des données liées (SYS_TGE_THEME_LIEN) fût renseignée pour que le mécanisme de propagation se déclenchât même si aucune donnée n''était déclarée comme "propageable". Dorénavant la propagation est activée uniquement s''il y a des données marquées comme "propageables" et seules les données liées aux données propageables sont utilisées.','5','05','004','R047','0000','Y'
'SEUNA2-18629','S','A l''export des données GAP, si une donnée de type date était vide et si ensuite une date était saisie, la cellule dans Excel n''était pas triée comme une date.','5','05','004','R047','0000','Y'
'SEUNA2-18636','B','Depuis le report 5.05.004.R031, le paramétrage du retour de paie du Microdon était livré dans la table de mapping des éléments Zadig, mais la Fiche Solution qui créait les données réceptrices sur ADP Link était facultative. Les clients qui avaient anticipé le retour de paie des éléments correspondant étaient bloqués par ces colonnes inexistantes. Afin de faciliter la mise en place et pour éviter les erreurs de retour de paie, ce patch officialise les colonnes du Microdon : Montant don fixe salarié (MD_SALFIX T713), Don arrondi sur net à payer (MD_SALNET T699), Montant du don employeur (MD_PAT T728), Identifiant abonné Microdon (MD_IDENTIFIANT T698), Clé de sécurité Microdon (MD_EKEY T731), ainsi que Brut réel cumulé A-1 (MTS59 P142).','5','05','004','R047','0000','Y'
'SEUNA2-18702','B','Modifications paramétrage pour le modèle d''embauche :<br>1-  Ergonomie de la donnée ZA380 : suppression du contrôle sur la personne remplacée<br>2- Donnée EMPLOI : suppression du select NUMPAC dans l''appel table (TAB_RD_EMPLOI /2 )','5','05','004','R047','0000','Y'
'SEUNA2-18710','B','Lors de la clôture mensuelle du Pac, depuis la version 5.05.004.R045, les saisies tardives (saisies effectuées après le dernier recyclage) sont converties en rétroactivité si le Pac est éligible. Les rétroactivités détectées lors de la clôture précédente sur les écrans générés étaient reconduites lors de la clôture en cours, ce qui se traduisait par des inscriptions en rétro injustifiées, sans conséquence pour les calculs à part des traitements inutiles.','5','05','004','R047','0000','Y'
'SEUNA2-18739','S','Sur la page « Historique d''une opération de paie » de l''écran « Pilotage des opérations de paie », le statut « GESTIL » était utilisé pour deux actions différentes : la synchronisation des matricules (par exemple pour ajouter des matricules au recyclage), et la demande d''extraction des données GESTIL . Un statut supplémentaire « SYNCGES » a été créé avec le libellé « Synchronisation des matricules avec GESTIL. ».','5','05','004','R047','0000','Y'
'SEUNA2-18750','B','Dans l''écran "Pilotage des Paiements Tiers", la génération du fichier pour les oppositions et les pensions ne fonctionnait pas. Les fichiers étaient vides.','5','05','004','R047','0000','Y'
'SEUNA2-18764','S','Amélioration des processus MonADP : <br>- Pour les processus "Refus de dématérialisation", "Demande de remboursement de transport" et "Modification mutuelle", la fonction de routage est modifiée afin d''utiliser celle habituelle "(19) Groupe de valideurs...".<br>- Alignement de tous les filtres sur rôle (expert) : Positionnement de "Expert / *" sur toutes les opérations non-automatiques qui sont destinatrices d''une branche dont l''opération émettrice est une opération d''init par API, et n''ayant pas déjà un filtre sur rôle renseigné.<br>- Modification pour quelques opérations : ajout UX dans leurs libellés.','5','05','004','R047','0000','Y'
'SEUNA2-18815','S','Dans le modèle, des contrôles ont été ajoutés sur les dates. Les données impactées sont les suivantes :<br>- Date Restitution (VEH_DATEREST)<br>- Date renouvellement Contrat (DSRNVL)<br>- Date fin contrat de profes. (DSFCP)<br>- Date de naturalisation (DSNATU)<br>- Date d''entrée en France (DSENFR)<br>- Date de début mutuelle conjoint (DSDMUT_C)<br>- Date de fin mutuelle conjoint (DSFMUT_C)<br>- Date de début mutuelle enfant (DSDMUT_E)<br>- Date de fin mutuelle enfant (DSFMUT_E)<br>- Date de fermeture Société (DSFSTE)<br>- Date de création société (DSDSTE)','5','05','004','R047','0000','Y'
'SEUNA2-18838','B','Dans l''écran Fichiers disponibles, les fichiers issus de certains spécifiques clients étaient mal nommés. L''extension du fichier, par exemple ".CSV", était complétée à tort par l''identifiant du traitement, de sorte que l''utilisateur ne pouvait pas simplement cliquer sur son fichier pour l''ouvrir avec le programme associé.','5','05','004','R047','0000','Y'
'SEUNA2-18839','B','Lors des mises en forme de paie, depuis la transformation des saisies tardives en rétroactivité, les traitements pouvaient être bloqués par des doublons de données. Cela intervenait dans des cas particuliers avec des éléments éphémères Zadig (commençant par W X Y Z), ou qui bénéficient du paramétrage d''envoi forcé (envoi systématique).','5','05','004','R047','0000','Y'
'SEUNA2-18865','B','Sur les écrans générés, en 5.05.004, l''interrogation d''un collaborateur ne disposant pas de donnée dans le dictionnaire interrogé provoquait cette erreur à l''affichage de l''écran : "Veuillez réinterroger car la valeur de la donnée "blablabla" (clé d''interrogation) n''a pas été prise en compte".','5','05','004','R047','0000','Y'
'SEUNA2-18909','B','Le chargement de certains écrans Tools n''aboutissait pas : "Gestion des projets", "Mise à jour du paramétrage", "Paramétrage des destinations des écrans", "Visualisation du paramétrage des écrans générés" et "Organisation des écrans workflow".<br>','5','05','004','R047','0000','Y'
'SEUNA2-18920','B','Dans l''écran « Pilotage des opérations de paie », lorsqu''on lançait un traitement de paie pour un collaborateur associé à Gestil, sorti et ayant uniquement de la rétro de type GAP, la récupération des informations de Gestil n''était pas effectuée. Dorénavant, la récupération des ces informations rétro stockées lors d''un précédent calcul dans Gestil est réalisée même si aucune demande de collecte n''est faite.','5','05','004','R047','0000','Y'
'SEUNA2-18940','B','Ajout d''un ";" pour compiler correctement le panorama.js','5','05','004','R047','0000','Y'
'SEUNA2-18953','B','Dans l''écran "Import GAP", depuis la version 5.05.004.R046, lors de l''extraction Excel des données GAP, les dates étaient exportées au format date pour le format XLS (comme pour le format XLSX). A l''import du fichier XLS, cela provoquait une mauvaise interprétation des valeurs pour les dates. Pour l''ancien format XLS, les dates sont extraites à nouveau en texte brut.<br>','5','05','004','R047','0000','Y'
'SEUNA2-19001','B','Dans l''écran « Imputation Permanentes », à la sélection d''un autre collaborateur avec la flèche "suivant/précédent », les informations clés de l''écran étaient effacées, dont la date d''effet et les informations liées à celles-ci.','5','05','004','R047','0000','Y'
'SEUNA2-19065','B','Lors d''une embauche avec saisie d''un numéro de sécurité sociale provisoire, l''envoi de la DPAE faisait apparaître à tort le message « Erreur lors de la génération de la DPAE : Le numéro de sécurité sociale du salarié doit être composé de 13 caractères ».','5','05','004','R047','0000','Y'
'SEUNA2-19093','B','Depuis la V5.05.004.R046, sur les écrans générés avec onglets, les listes déroulantes restaient vides à partir du chargement du troisième onglet.','5','05','004','R047','0000','Y'
'SEUNA2-19162','B','Dans les listes déroulantes des écrans générés, les libellés en majuscule étaient tronqués.','5','05','004','R047','0000','Y'
'SEUNA2-19239','B','Dans les écrans générés, la taille des zones de saisie avec loupe n''était pas limitée, ce qui obligeait à utiliser le scroll horizontal pour trouver la loupe. Désormais, les zones avec loupe ayant plus de 33 caractères sont générées à 500 pixels.<br>','5','05','004','R047','0000','Y'
'SEUNA2-19316','B','Depuis le report 5.05.004.R046, la variable système GESTIL_ATTENTE_PAI, qui indique le temps maximum d''attente des demandes de collectes de paie réalisées dans le cadre d''un traitement de paie, était livrée par défaut à 1800 secondes (30 minutes). Ce temps d''attente est modifié à 21600 secondes (6h).','5','05','004','R047','0000','Y'
'SEUNA2-19387','B','Lors de la connexion à l''application, sur l''écran de prise d''une délégation, l''ouverture de la fenêtre de détails n''affichait pas toutes les informations de la délégation.','5','05','004','R047','0000','Y'
'SEUNA2-9546','S','Lors de l''édition d''une attestation, suite à une demande depuis MonADP (que ce soit par une validation Expert ou en édition directe), si la maquette est au format DocServ, l''édition ne se faisait pas : seules les maquettes au format Jasper étaient prise en charge.<br>Les maquettes au format DocServ sont désormais gérées en standard.<br>Détail(s) technique(s) : Si la requête de fusion est associée à une classe java (héritant de la classe ExternEdition), l''objet passé en paramètre de la méthode executerequete peut être géré en spécifique en implémentant l''exit DOCSERV_OBJ_PARAM_EDITION.','5','05','004','R047','0000','Y'
